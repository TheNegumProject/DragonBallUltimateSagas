;>||====================================~>/#[ Super Motions ]#\<~====================================||<
;
[Command];
Name    = "Ki Shot Frenzy Mode";
Command = ~D, DB, B, D, DB, B, x;
Time    = 30;
;
[Command];
Name    = "Ki Shot Frenzy Mode";
Command = ~D, DB, B, D, DB, B, y;
Time    = 30;
;
[Command];
Name    = "Ki Shot Frenzy Mode";
Command = ~D, DB, B, D, DB, B, z;
Time    = 30;
;
;>||===================================~>/#[ Special Motions ]#\<~===================================||<
;
[Command];
Name    = "Zanzouken";
Command = ~F, D, DF, a+b;
;
[Command];
Name    = "Zanzouken";
Command = ~F, D, DF, b+c;
;
[Command];
Name    = "Zanzouken";
Command = ~F, D, DF, a+c;
;
[Command];
Name    = "Zanzouken";
Command = ~F, D, DF, x+y;
;
[Command];
Name    = "Zanzouken";
Command = ~F, D, DF, y+z;
;
[Command];
Name    = "Zanzouken";
Command = ~F, D, DF, x+z;
;
[Command];
Name    = "Zanzouken";
Command = ~B, D, DB, a+b;
;
[Command];
Name    = "Zanzouken";
Command = ~B, D, DB, b+c;
;
[Command];
Name    = "Zanzouken";
Command = ~B, D, DB, a+c;
;
[Command];
Name    = "Zanzouken";
Command = ~B, D, DB, x+y;
;
[Command];
Name    = "Zanzouken";
Command = ~B, D, DB, x+z;
;
[Command];
Name    = "Zanzouken";
Command = ~B, D, DB, y+z;
;
[Command];
Name    = "FDF Kick"
Command = ~F, D, DF, a;
;
[Command];
Name    = "FDF Kick"
Command = ~F, D, DF, b;
;
[Command];
Name    = "FDF Kick"
Command = ~F, D, DF, c;
;
[Command];
Name    = "FDF Kick"
Command = ~F, D, DF, ~a;
;
[Command];
Name    = "FDF Kick"
Command = ~F, D, DF, ~b;
;
[Command];
Name    = "FDF Kick"
Command = ~F, D, DF, ~c;
;
[Command];
Name    = "FDF Punch"
Command = ~F, D, DF, x;
;
[Command];
Name    = "FDF Punch"
Command = ~F, D, DF, y;
;
[Command];
Name    = "FDF Punch"
Command = ~F, D, DF, z;
;
[Command];
Name    = "FDF Punch"
Command = ~F, D, DF, ~x;
;
[Command];
Name    = "FDF Punch"
Command = ~F, D, DF, ~y;
;
[Command];
Name    = "FDF Punch"
Command = ~F, D, DF, ~z;
;
[Command];
Name    = "QCF Kick";
Command = ~D, DF, F, a;
;
[Command];
Name    = "QCF Kick";
Command = ~D, DF, F, b;
;
[Command];
Name    = "QCF Kick";
Command = ~D, DF, F, c;
;
[Command];
Name    = "QCF Kick";
Command = ~D, DF, F, ~a;
;
[Command];
Name    = "QCF Kick";
Command = ~D, DF, F, ~b;
;
[Command];
Name    = "QCF Kick";
Command = ~D, DF, F, ~c;
;
[Command];
Name    = "QCF Punch";
Command = ~D, DF, F, x;
;
[Command];
Name    = "QCF Punch";
Command = ~D, DF, F, y;
;
[Command];
Name    = "QCF Punch";
Command = ~D, DF, F, z;
;
[Command];
Name    = "QCF Punch";
Command = ~D, DF, F, ~x;
;
[Command];
Name    = "QCF Punch";
Command = ~D, DF, F, ~y;
;
[Command];
Name    = "QCF Punch";
Command = ~D, DF, F, ~z;
;
[Command];
Name    = "BF Kick";
Command = ~20$B, $F, a;
;
[Command];
Name    = "BF Kick";
Command = ~20$B, $F, b;
;
[Command];
Name    = "BF Kick";
Command = ~20$B, $F, c;
;
[Command];
Name    = "DU Kick";
Command = ~20$D, $U, a
;
[Command];
Name    = "DU Kick";
Command = ~20$D, $U, b;
;
[Command];
Name    = "DU Kick";
Command = ~20$D, $U, c;
;
;>||=====================================~>/#[ Button Tap ]#\<~=====================================||<
;
[Command];
Name 	= "DU";
Command = ~$D, $U;
Time    = 7;
;
[Command];
Name 	= "FF";
Command = F, F;
Time    = 10;
;
[Command];
Name 	= "BB";
Command = B, B;
Time    = 10;
;
[Command];
Name 	= "DD";
Command = D, D;
Time    = 10;
;
[Command];
Name    = "5x";
Command = x, x, x, x, x;
Time    = 37;
;
[Command];
Name    = "5y";
Command = y, y, y, y, y;
Time    = 35;
;
[Command];
Name    = "5z";
Command = z, z, z, z, z;
Time    = 29;
;
;>||===============================~>/#[ 2/3 Button Combination ]#\<~===============================||<
;
[Command];
Name 	= "recovery";
Command = a+b;
Time 	= 1;
;
[Command];
Name 	= "recovery";
Command = a+c;
Time 	= 1;
;
[Command];
Name 	= "recovery";
Command = b+c;
Time 	= 1;
;
[Command];
Name	= "recovery";
Command	= x+y;
Time 	= 1;
;
[Command];
Name	= "recovery";
Command	= x+z;
Time 	= 1;
;
[Command];
Name	= "recovery";
Command	= y+z;
Time 	= 1;
;
;>||================================~>/#[ Direction and Button ]#\<~================================||<
;
[Command];
Name	= "Down Kick";
Command	= /D, a;
Time 	= 1;
;
[Command];
Name	= "Down Kick";
Command	= /D, b;
Time 	= 1;
;
[Command];
Name	= "Down Kick";
Command	= /D, c;
Time 	= 1;
;
;>||=====================================~>/#[ Hold Button ]#\<~=====================================||<
;
[Command];
Name    = "Hold a";
Command = /a;
Time    = 1;
;
[Command];
Name    = "Hold b";
Command = /b;
Time    = 1;
;
[Command];
Name    = "Hold c";
Command = /c;
Time    = 1;
;
[Command];
Name    = "Hold x";
Command = /x;
Time    = 1;
;
[Command];
Name    = "Hold y";
Command = /y;
Time    = 1;
;
[Command];
Name    = "Hold z";
Command = /z;
Time    = 1;
;
;>||====================================~>/#[ Single Button ]#\<~====================================||<
;
[Command];
Name 	= "a";
Command = a;
Time 	= 1;
;
[Command];
Name 	= "b";
Command = b;
Time 	= 1;
;
[Command];
Name 	= "c";
Command = c;
Time 	= 1;
;
[Command];
Name 	= "x";
Command = x;
Time 	= 1;
;
[Command];
Name 	= "y";
Command = y;
Time 	= 1;
;
[Command];
Name 	= "z";
Command = z;
Time 	= 1;
;
[Command];
Name 	= "s";
Command = s;
Time 	= 1;
;
[Command];
Name    = "Kick";
Command = a;
Time 	= 1;
;
[Command];
Name    = "Kick";
Command = b;
Time 	= 1;
;
[Command];
Name    = "Kick";
Command = c;
Time 	= 1;
;
[Command];
Name    = "Punch";
Command = x;
Time 	= 1;
;
[Command];
Name    = "Punch";
Command = y;
Time 	= 1;
;
[Command];
Name    = "Punch";
Command = z;
Time 	= 1;
;
;>||===================================~>/#[ Hold Direction ]#\<~===================================||<
;
[Command];
Name 	= "holdfwd";
Command = /$F;
Time 	= 1;
;
[Command];
Name 	= "holdback";
Command = /$B;
Time 	= 1;
;
[Command];
Name 	= "holdup";
Command = /$U;
Time 	= 1;
;
[Command];
Name 	= "holddown";
Command = /$D;
Time 	= 1;
;
[Command];
Name 	= "F";
Command = F;
Time 	= 1;
;
[Command];
Name 	= "B";
Command = B;
Time 	= 1;
;
[Command];
Name 	= "U";
Command = U;
Time 	= 1;
;
[Command];
Name 	= "D";
Command = D;
Time 	= 1;
;
;   Note to self: Do not put "/"s in State thingys. No [State ****: x / y]
;
;>||===================================~>/#[ Necessary Data ]#\<~===================================||<
;
[Data];
Life	 		= 1250; Amount of life to start with
Attack 			= 140;	Attack power
Defence 		= 115;  Defensive power
Fall.Defence_Up = 40;	Percentage to increase defense everytime player is knocked down
LieDown.Time 	= 30;	Time which player lies down for before getting up again
AirJuggle 		= 15;	Number of points for juggling
Guard.SparkNo 	= 40;	Default guard spark number
power = 3000
Volume 			= 65;  Volume offset (negative for softer)
IntPersistIndex = 59;   All integer variables except 59 are reset after each round
;
[Size];
Ground.Front    = 13;		Player width (front, ground)
Ground.Back 	= 8;		Player width (back, ground)
Air.Front 		= 13;		Player width (front, air)
Air.Back		= 8;		Player width (back, air)
Height 		    = 76;		Height of player (for opponent to jump over)
Attack.Dist     = 100;	    Default attack distance
Head.Pos 		= 3, -71;	Approximate position of head
Mid.Pos 		= 4, -52;   Approximate position of midsection
;
[Velocity];
Walk.Fwd    = 3; 		Walk forwards
Walk.Back   = -2.2; 	Walk backwards
Run.Fwd 	= 6; 		Run forwards (x, y)
Run.Back 	= -4.4; 	Run backwards (x, y)
Jump.Neu 	= 0, -8.4;  Neutral jumping velocity (x, y)
Jump.Fwd 	= 2.6; 		Jump forward Speed (x, y)
Jump.Back 	= -2.5; 	Jump back Speed (x, y)
;
[Movement];
YAccel 		    = .44;  Vertical acceleration
Stand.Friction 	= .88;	Friction coefficient when standing
Crouch.Friction = .82;	Friction coefficient when crouching
;
;>||===================================~>/#[ Variable Usage ]#\<~===================================||<
;
; [Normal Integer Variables:]                       [Helper Integer Variables:]
; ---------------------------                       ---------------------------
;
; Var(0)    - Jump check:                           Var(0)  - Sound frequency and pallette contrast
;               1 = Super Jump
;               2 = Anti-Air Kick/Air Dive Kick
;               3 = Rush Down
; Var(1)    - Jump 'n Run control
; Var(2)    - Super-Saiyajin (SSJ)
; Var(3)    - Special intro*
; Var(4)    - Life control*
; Var(5)    - Get-Hit Cries
; Var(6)    - Sound frequency check
; Var(7)    - Growing Aura position
; Var(8)    - Facing
; Var(9)    - Super Jump control
; Var(10)   - Ki Shot timer
; Var(11)   - Get-Hit Cries check
; Var(12)   - Command check
; Var(13)   - Intro and winpose decider
; Var(14)   - Juggle check
;
;
; [Persistent Integer Variables:]
; -------------------------------
;
; Var(59)   - Artificial Intelligence (A.I.)
;
;
; [Normal Float Variables:]
; -------------------------
;
; FVar(0)   - Growing Aura scale
; FVar(1)   - Power
; FVar(2)   - Sound frequency
; FVar(3)   - Power / 1000
;
;>||========================================~>/#[ Stand ]#\<~========================================||<
;
[StateDef 0];
Physics     = S;
SprPriority = 0;
;
[State 0: Animation Check];
Type        = ChangeAnim;
Trigger1    = ((Anim != 0) && (Anim != 5)) ^^ ((Anim = 5) && (!AnimTime));
Value       = 0;
;
[State 0: Velocity Set];
Type        = VelSet;
Trigger1    = !Time;
Y           = 0;
;
[State 0: Reset Jump Check];
Type		= VarSet;
Trigger1	= (Var(0)) && (!Time);
var(0) 		= 0;
;
[State 0: Position Check];
Type        = PosSet;
Trigger1    = (Pos Y != 0);
Y           = 0;
;
[State 0: Life Check];*
Type        = LifeSet;
Trigger1    = (Var(3)) && (RoundState = 2) && (Alive) && (Random <= 9);
Value       = Var(4);
;
[State 0: Stop Moving If Low Velocity Or Four Ticks Pass];  Thanks to [E] for explaining Abs
Type        = VelSet;
Trigger1    = (Abs(Vel X) < 2) ^^ (Time = 4);
X           = 0;
;
[State 0: Dead Check];
Type        = ChangeState;
Trigger1    = !Alive;
Value       = 5050;
;
;>||===================================~>/#[ Stand To Crouch ]#\<~===================================||<
;
[StateDef 10];
Type    = C;
Physics = C;
Anim    = 10;
;
[State 10: Velocity Multiplication];
Type        = VelMul;
Trigger1    = !Time;
X           = .75;
;
[State 10: Change State];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 11;
;
;>||======================================~>/#[ Crouching ]#\<~======================================||<
;
[StateDef 11];
Type        = C;
Physics     = C;
Anim        = 11;
SprPriority = 0;
;
[State 11: Change From Turning Animation];
Type        = ChangeAnim;
Trigger1    = (Anim = 6) && (!AnimTime);
Value       = 11;
;
;>||===================================~>/#[ Crouch To Stand ]#\<~===================================||<
;
[StateDef 12];
Physics = S;
Anim    = 12;
;
[State 12: Change State];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 0;
;
;>||========================================~>/#[ Walk ]#\<~========================================||<
;
[StateDef 20];
Physics     = S;
Ctrl        = 1;
SprPriority = 1;
;
[State 20: Start Walk Forwards];
Type        = VelSet;
Trigger1    = (Command = "holdfwd") && (AnimElemNo(0) <= 4) && (Vel X < Const(Velocity.Walk.Fwd.X) / 3);
X           = Const(Velocity.Walk.Fwd.X) / 4;
;
[State 20: Walk Forwards];
Type        = VelSet;
Trigger1    = (Command = "holdfwd") && (AnimElemNo(0) = 4) && (Vel X < Const(Velocity.Walk.Fwd.X) / 2);
X           = Const(Velocity.Walk.Fwd.X) / 2;
;
[State 20: Acceleration];   Thanks to Detah for the idea of acceleration
Type        = VelMul;
Trigger1    = (Time > 16) && (Abs(Vel X) <= 4.5);
X           = 1.21;
;
[State 20: Make Dust];
Type        = MakeDust;
Trigger1    = (Command = "holdfwd") && (AnimElemTime(4) = [0, 5]);
Pos         = -5;
Spacing     = 7;
;
[State 20: Walk Forwards Animation];
Type        = ChangeAnim;
TriggerAll  = (Vel X > 0);
Trigger1    = ((Anim != 20) && (Anim != 5)) ^^ ((Anim = 5) && (!AnimTime));
Value       = 20;
;
[State 20: Width];
Type        = Width;
Trigger1    = (Anim = 20) && (AnimElemNo(0) = 4);
Value       = 22, -1;
;
[State 20: Walk Backwards];
Type        = VelSet;
Trigger1    = (Command = "holdback") && (Vel X > Const(Velocity.Walk.Back.X));
X           = Const(Velocity.Walk.Back.X);
;
[State 20: Make Dust];
Type        = MakeDust;
Trigger1    = (Command = "holdback") && (AnimElemTime(2) = [0, 5]);
Pos         = -4;
Spacing     = 7;
;
[State 20: Walk Backwards Animation];
Type        = ChangeAnim;
TriggerAll  = (Vel X < 0);
Trigger1    = ((Anim != 21) && (Anim != 5)) ^^ ((Anim = 5) && (!AnimTime));
Value       = 21;
;
[State 20: Width];
Type        = Width;
Trigger1    = (Anim = 21) && (AnimElemNo(0) = 2);
Value       = -11, 13;
;
;>||=====================================~>/#[ Jump Start ]#\<~=====================================||<
;
[StateDef 40];  Thanks to FlowaGirl and Soldats for Long Jump and Super Jump codes this is based on
Physics     = S;
Anim        = 40;
Ctrl        = 0;
SprPriority = 1;
;
[State 40: Reset Normal Jump Variable];
Type        = VarSet;
Trigger1    = !Time;
sysvar(1)   = 0;
;
[State 40: Reset Jump Check];
Type		= VarSet;
trigger1	= !Time;
var(0) 		= 0;
;
[State 40: Position Check];
Type        = PosSet;
Trigger1    = (Pos Y != 0);
Y           = 0;
;
[State 40: No Player Push];
Type        = PlayerPush;
Trigger1    = (PrevStateNo = 1010);
Value       = 0;
;
[State 40: Super Jump Check];
Type        = VarSet;
TriggerAll  = (!Var(0)) && (Var(1) = [0, 2]);
Trigger1    = (Command = "DU");
Trigger2    = (PrevStateNo = 100) ^^ (PrevStateNo = 105);
var(0)      = 1;
;
[State 40: Flip Throw Check];
Type        = VarSet;
Trigger1    = (!Var(0)) && (PrevStateNo = 1010);
var(0)      = 2;
;
[State 40: Set Normal Jump Forwards Variable];
Type        = VarSet;
Trigger1    = (Command = "holdfwd") || ((PrevStateNo = 1010) && (FrontEdgeBodyDist > BackEdgeBodyDist));
sysvar(1)   = 1;
;
[State 40: Set Normal Jump Back Variable];
Type        = VarSet;
Trigger1    = (Command = "holdback") || ((PrevStateNo = 1010) && (BackEdgeBodyDist > FrontEdgeBodyDist));
sysvar(1)   = -1;
;
[State 40: Jump Velocities];
Type        = VelSet;
Trigger1    = ((Var(0) = 1) || (Command = "holdup")) && (!AnimTime);
X           = IfElse((!SysVar(1)), Const(Velocity.Jump.Neu.X), IfElse((SysVar(1) = 1), Const(Velocity.Jump.Fwd.X), Const(Velocity.Jump.Back.X)));
Y           = Const(Velocity.Jump.Y);
;
[State 40: Flip Throw Jump Away Velocities];
Type        = VelSet;
Trigger1    = (Var(0) = 2) && (!AnimTime);
X           = IfElse((!SysVar(1)), Const(Velocity.Jump.Neu.X), IfElse((SysVar(1) = 1), Const(Velocity.Jump.Fwd.X), Const(Velocity.Jump.Back.X)));
Y           = Const(Velocity.Jump.Y);
;
[State 40: End];    Thanks to FlowaGirl for the "holdup" method
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = IfElse(((Command != "holdup") && (!Var(0))), 45, 50);
Ctrl        = 1 - (Var(0) = 2);
;
;>||=====================================~>/#[ Jump Short ]#\<~=====================================||<
;
[StateDef 45];
Type        = A;
Physics     = A;
;
[State 45: Set Normal Jump Back Variable];
Type        = VarSet;
Trigger1    = (SysVar(1) != -1) && (PrevStateNo = 5220);
sysvar(1)   = -1;
;
[State 45: Jump Animation];
Type        = ChangeAnim;
Trigger1    = !Time;
Value       = IfElse((!SysVar(1)), 41, IfElse((SysVar(1) = 1), 42, 43));
;
[State 45: Jump Velocities];
Type        = VelSet;
Trigger1    = !Time;
X           = IfElse((!SysVar(1)), Const(Velocity.Jump.Neu.X) / 1.25, IfElse((SysVar(1) = 1), Const(Velocity.Jump.Fwd.X) / 1.25, Const(Velocity.Jump.Back.X) / 1.25));
Y           = Const(Velocity.Jump.Y) / 1.25;
;
[State 45: "Hm"];
Type        = PlaySnd;
Trigger1    = (!Time) && (Random <= 500);
Value       = 50;
Volume      = 255;
Channel     = 0;
FreqMul     = FVar(2);
;
[State 45: Reset Normal Jump Variable];
Type        = VarSet;
Trigger1    = !Time;
sysvar(1)   = 0;
;
;>||=======================================~>/#[ Jump Up ]#\<~=======================================||<
;
[StateDef 50];  Thanks to FlowaGirl and Soldats for Long Jump and Super Jump codes this is based on
Type        = A;
Physics     = A;
;
[State 50: No Player Push];
Type        = PlayerPush;
Trigger1    = (Var(0) = 2);
Value       = 0;
;
[State 50: Anti-Air Kick Check];
Type        = VarSet;
Trigger1    = (Var(0) != 2) && (PrevStateNo = 1095);
var(0)      = 2;
;
[State 50: Reset Normal Jump Variable];
Type        = VarSet;
Trigger1    = !Time;
sysvar(1)   = 0;
;
[State 50: Ground Explod];
Type        = Explod;
Trigger1    = (Var(0) = 1) && (!Time) && (PrevStateNo != [600, 865]) && (PrevStateNo != [1090, 1095]) && (PrevStateNo != 3000);
Anim        = F60;
ID          = 60;
OwnPal      = 1;
;
[State 50: Reset Super Jump Control];
Type        = VarSet;
Trigger1    = !Time;
var(9)      = 2;
;
[State 50: Change Jump Animation];
Type        = ChangeAnim;
Trigger1    = !Time;
Value       = IfElse((!Vel X), 41, IfElse((Vel X > 0), 42, 43));
;
[State 50: Jump 'n Run Control];'
Type        = VarSet;
Trigger1    = (Var(0)) && (!Time) && (PrevStateNo = 40);
var(1)      = 3;
;
[State 50: Super Jump Velocites];
Type        = VelAdd;
Trigger1    = (Var(0)) && ((PrevStateNo = 40) ^^ (PrevStateNo = 1010)) && (!Time);
X           = IfElse((!Vel X), 0, IfElse((Vel X < 0), - 1.1, 1.1));
Y           = - 2.4;
;
[State 50: Super Jump After Images];
Type        = AfterImage;
Trigger1    = (Var(0)) && ((PrevStateNo = 40) ^^ (PrevStateNo = 1010)) && (!Time);
Time        = 15;
TimeGap     = 4;
FrameGap    = 1;
Length      = 10;
PalAdd      = 0, 0, 0;
PalMul      = .5, .5, .5;
PalContrast = 110, 110, 110;
Trans       = Add;
;
[State 50: "Hm"];
Type        = PlaySnd;
Trigger1    = (((PrevStateNo = 40) && (Random <= 750)) ^^ (PrevStateNo = 1010)) && (!Time);
Value       = 50;
Volume      = 255;
Channel     = 0;
FreqMul     = FVar(2);
;
[State 50: "Super Jump"];
Type        = PlaySnd;
Trigger1    = (Var(0)) && ((PrevStateNo = 40) ^^ (PrevStateNo = 1010)) && (!Time);
Value       = 50, 1;
Channel     = 3;
FreqMul     = FVar(2);
;
[State 50: Super Jump Holding Back];
Type        = VarSet;
Trigger1    = (Var(0)) && (Var(9) != -1) && (Command = "holdback") && (Ctrl);
var(9)      = -1;
;
[State 50: Super Jump Holding Nothing];
Type        = VarSet;
Trigger1    = (Var(0)) && (Var(9) != 0) && (Var(9) != 2) && (Command != "holdfwd") && (Command != "holdback") && (Ctrl);
var(9)      = 0;
;
[State 50: Super Jump Holding Forward];
Type        = VarSet;
Trigger1    = (Var(0)) && (Var(9) != 1) && (Command = "holdfwd") && (Ctrl);
var(9)      = 1;
;
[State 50: Change Super Jump Animation To Backwards];
Type        = ChangeAnim;
Trigger1    = (Var(0)) && (Var(9) = -1) && (Anim != 43);
Value       = 43;
;
[State 50: Change Super Jump Animation To Neutral];
Type        = ChangeAnim;
Trigger1    = (Var(0)) && (!Var(9)) && (Anim != 41);
Value       = 41;
;
[State 50: Change Super Jump Animation To Forwards];
Type        = ChangeAnim;
Trigger1    = (Var(0)) && (Var(9) = 1) && (Anim != 42);
Value       = 42;
;
[State 50: Super Jump Velocity Holding Backwards];
Type        = VelAdd;
Trigger1    = (Var(0)) && (Var(9) = -1) && (Vel X >= -5);
X           = - .6 - (PrevStateNo = 875) * .4;
;
[State 50: Super Jump Velocity Holding Forwards];
Type        = VelAdd;
Trigger1    = (Var(0)) && (Var(9) = 1) && (Vel X <= 5);
X           = .6 + (PrevStateNo = 875) * .4;
;
;>||======================================~>/#[ Jump Down ]#\<~======================================||<
;
[StateDef 51];
Type    = A;
Physics = A;
;
[State 51: Null];
Type        = Null;
Trigger1    = 1;
;
;>||======================================~>/#[ Jump Land ]#\<~======================================||<
;
[StateDef 52];
Physics = S;
Ctrl    = 0;
Anim    = 47;
;
[State 52: Stop "Super Jump"];
Type        = StopSND;
Trigger1    = !Time;
Channel     = 3;
;
[State 52:	Rush Down Land Effect];
Type	    = Explod;
Trigger1	= (Var(0) = 3) && (!Time);
Anim	    = F60;
ID          = 60;
OwnPal      = 1;
;
[State 52: Velocity Set];
Type        = VelSet;
Trigger1    = !Time;
Y           = 0;
;
[State 52: Position Set];
Type        = PosSet;
Trigger1    = !Time;
Y           = 0;
;
[State 52: Ctrl];
Type        = CtrlSet;
Trigger1    = (Time = 2);
Value       = 1;
;
[State 52: Reset Super Jump Check];
Type        = VarSet;
Trigger1    = !AnimTime;
var(0)      = 0;
;
[State 52: End];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 0;
Ctrl        = 1;
;
;>||======================================~>/#[ Rush Down ]#\<~======================================||<
;
[StateDef 55];
Type        = A;
Physics     = A;
;
[State 55: Rush Down After Images];
Type        = AfterImage;
Trigger1    = !Time;
Time        = 15;
TimeGap     = 4;
FrameGap    = 1;
Length      = 10;
PalAdd      = 0, 0, 0;
PalMul      = .5, .5, .5;
PalContrast = 110, 110, 110;
Trans       = Add;
;
[State 55: Super Jump Check];'
Type        = VarSet;
Trigger1    = !Time;
var(0)      = 3;
;
[State 55: Rush Down];
Type        = VelAdd;
Trigger1    = (Pos Y < 0);
Y           = 2.4;
;
[State 55: End];
Type        = ChangeState;
Trigger1    = !Pos Y;
Value       = 52;
;
;>||====================================~>/#[ Dash Forwards ]#\<~====================================||<
;
[StateDef 100];
Type        = C;
Physics     = C;
Anim        = 100;
Ctrl        = 0;
SprPriority = -1;
;
[State 100: Jump 'n Run Control];'
Type        = VarAdd;
Trigger1    = !Time;
var(1)      = 1;
;
[State 100: You May Not Walk!];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoWalk;
;
[State 100: Dash From Flip];
Type        = ChangeAnim;
Trigger1    = (PrevStateNo = 105) && (!Time);
Value       = 100;
Elem        = 4;
;
[State 100: You May Pass Through Opponents];
Type        = PlayerPush;
Trigger1    = (AnimElemNo(0) = [4, 6]);
Value       = 0;
;
[State 100: You Cannot Be Thrown Or Hit By Projectiles];
Type        = NotHitBy;
Trigger1    = (AnimElemNo(0) = [4, 6]);
Value       = , AT, AP;
;
[State 100: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElemNo(0) = 4);
X           = Const(Velocity.Run.Fwd.X) / 1.5;
;
[State 100: "Dash Forwards"];
Type        = PlaySnd;
Trigger1    = (AnimElem = 4);
Value       = 100;
Channel     = 1
FreqMul     = FVar(2);
;
[State 100: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElemNo(0) = 5);
X           = Const(Velocity.Run.Fwd.X);
;
[State 100: Make Dust];
Type        = MakeDust;
Trigger1    = (AnimElemNo(0) = 5) && (Vel X > 0);
Pos         = 32;
Pos2        = 10;
Spacing     = 7;
;
[State 100: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElemNo(0) = 6);
X           = Const(Velocity.Run.Fwd.X) / 2;
;
[State 100: Make Dust];
Type        = MakeDust;
Trigger1    = (AnimElemNo(0) = 8) && (Vel X > 0);
Pos         = 12;
Spacing     = 8;
;
[State 100: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElem = 8, >= 1);
X           = Const(Velocity.Run.Fwd.X) / 4;
;
[State 100: End];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 0;
Ctrl        = 1;
;
;>||================================~>/#[ Dash Forwards Again ]#\<~=================================||<
;
[StateDef 101];
Type    = C;
Physics = C;
;
[State 101: Jump 'n Run Control];'
Type        = VarSet;
Trigger1    = !Time;
var(1)      = 3;
;
[State 101: You May Not Walk!];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoWalk;
;
[State 101: You May Pass Through Opponents];
Type        = PlayerPush;
Trigger1    = (AnimElemNo(0) = [5, 6]);
Value       = 0;
;
[State 101: You Cannot Be Thrown Or Hit By Projectiles];
Type        = NotHitBy;
Trigger1    = (AnimElemNo(0) = [5, 6]);
Value       = , AT, AP;
;
[State 101: And Again];
Type        = ChangeAnim;
Trigger1    = (AnimElemNo(0) = 5);
Value       = 100;
Elem        = 5;
Persistent  = 0;
;
[State 101: Make Dust];
Type        = MakeDust;
Trigger1    = (AnimElemNo(0) = 5) && (Vel X > 0);
Pos         = 32;
Pos2        = 10;
Spacing     = 7;
;
[State 101: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElemNo(0) = 5);
X           = Const(Velocity.Run.Fwd.X);
;
[State 300: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElemNo(0) = 6);
X           = Const(Velocity.Run.Fwd.X) / 2;
;
[State 101: Make Dust];
Type        = MakeDust;
Trigger1    = (AnimElemNo(0) = 8) && (Vel X > 0);
Pos         = 12;
Spacing     = 8;
;
[State 101: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElem = 8, >= 1);
X           = Const(Velocity.Run.Fwd.X) / 4;
;
[State 101: End];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 0;
Ctrl        = 1;
;
;>||===================================~>/#[ Flip Backwards ]#\<~===================================||<
;
[StateDef 105];
Physics     = S;
Anim        = 105;
Ctrl        = 0;
SprPriority = 1;
;
[State 105: You May Not Walk!];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoWalk;
;
[State 105: Flip Backwards Again];
Type        = ChangeAnim;
Trigger1    = (PrevStateNo = 105) && (!Time);
Value       = 105;
Elem        = 2;
;
[State 105: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 2);
Player      = 13, 32;
;
[State 105: "Hmb"];
Type        = PlaySnd;
Trigger1    = (AnimElem = 2);
Value       = 105;
Volume      = 255;
Channel     = 0;
FreqMul     = FVar(2);
;
[State 105: Speed];
Type        = VelSet;
Trigger1    = (AnimElem = 2);
X           = Const(Velocity.Run.Back.X) / IfElse((PrevStateNo = 105), 1.5, 1);
;
[State 105: You Cannot Be Thrown];
Type        = NotHitBy;
Trigger1    = (AnimElemNo(0) = [2, 4]);
Value       = , AT;
;
[State 105: If The Force Is Life...];
Type        = VelSet;
Trigger1    = (AnimElem = 3);
X           = 0;
;
[State 105: How Can There Be...];
Type        = PosAdd;
Trigger1    = (AnimElem = 3);
X           = -17;
;
[State 105: Life Without The Force?];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 3);
Player      = -11, -2;
;
[State 105: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 4);
Player      = -6, 54;
;
[State 105: Make Dust];
Type        = MakeDust;
Trigger1    = (AnimElemNo(0) = 5);
Spacing     = 7;
;
[State 105: Position Add];
Type        = PosAdd;
Trigger1    = (AnimElem = 5);
X           = -22;
;
[State 105: Lalala];
Type        = VelSet;
Trigger1    = (AnimElem = 5);
X           = Const(Velocity.Run.Back.X) / 3;
;
[State 105: Jump 'n Run Control];'
Type        = VarAdd;
Trigger1    = (AnimElem = 5);
var(1)      = 1;
;
[State 105: Land SND];
Type 		= PlaySnd;
Trigger1    = (AnimElem = 5);
Value 		= 105, 1;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 105: Change State];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 0;
Ctrl        = 1;
;
;>||=======================================~>/#[ Run Up ]#\<~=======================================||<
;
[StateDef 110];
;
[State 110: Control Set];
Type        = CtrlSet;
Trigger1    = !Time;
Value       = 0;
;
[State 110: Change Animation];
Type        = ChangeAnim;
Trigger1    = !Time;
Value       = 110;
;
[State 110: Hit By];
Type        = HitBy;
Trigger1    = !Time;
Value       = , AT;
Time        = 30;
;
[State 110: Velocity Set];
Type        = VelSet;
Trigger1    = !Time;
X           = 0;
Z           = -7;
;
[State 110: Velocity Mul];
Type        = VelMul;
Trigger1    = 1;
Z           = .8;
;
[State 110: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimTime = -8);
Z           = 0;
;
[State 110: Control Set];
Type        = CtrlSet;
Trigger1    = !AnimTime;
Value       = 1;
;
[State 110: End];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 0;
;
;>||======================================~>/#[ Run Down ]#\<~======================================||<
;
[StateDef 115];
;
[State 115: Control Set];
Type        = CtrlSet;
Trigger1    = !Time;
Value       = 0;
;
[State 115: Change Animation];
Type        = ChangeAnim;
Trigger1    = !Time;
Value       = 110;
;
[State 115: Hit By];
Type        = HitBy;
Trigger1    = !Time;
Value       = , AT;
Time        = 30;
;
[State 115: Velocity Set];
Type        = VelSet;
Trigger1    = !Time;
X           = 0;
Z           = 7;
;
[State 115: Velocity Set];
Type        = VelMul;
Trigger1    = 1;
Z           = .8;
;
[State 115: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimTime = -8);
Z           = 0;
;
[State 115: Control Set];
Type        = CtrlSet;
Trigger1    = !AnimTime;
Value       = 1;
;
[State 115: End];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 0;
;
;>||=====================================~>/#[ Guard Start ]#\<~=====================================||<
;
[StateDef 120];
Type    = U;
Physics = U;
FaceP2  = 1;
;
[State 120: Change Animation];
Type        = ChangeAnim;
Trigger1    = !Time;
Value       = 120 + (StateType = C) + (StateType = A) * 2;
;
[State 120: StateType Set];
Type        = StateTypeSet;
Trigger1    = (!Time) && (StateType = S);
Physics     = S;
;
[State 120: StateType Set];
Type        = StateTypeSet;
Trigger1    = (!Time) && (StateType = C);
Physics     = C;
;
[State 120: StateType Set];
Type        = StateTypeSet;
Trigger1    = (!Time) && (StateType = A);
Physics     = A;
;
[State 120: High To Low];
Type        = StateTypeSet;
Trigger1    = (StateType = S) && (Command = "holddown");
StateType   = C;
Physics     = C;
;
[State 120: Low To High];
Type        = StateTypeSet;
Trigger1    = (StateType = C) && (Command != "holddown");
StateType   = S;
Physics     = S;
;
[State 120: Change State];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 130 + (StateType = C) + (StateType = A) * 2;
;
[State 120: Stop Guarding];
Type        = ChangeState;
Trigger1    = (Command != "holdback");
;	Trigger2    = !InGuardDist;	Linux
Value       = 140;
;
;>||=================================~>/#[ Stand Guard Shaking ]#\<~=================================||<
;
[StateDef 130];
Physics = S;
FaceP2  = 1;
;
[State 130: Change Animation];
Type        = ChangeAnim;
Trigger1    = (Anim != 130);
Value       = 130;
;
[State 130: High To Low];
Type        = ChangeState;
Trigger1    = (Command = "holddown");
Value       = 131;
;
[State 130: Stop Guarding];
Type        = ChangeState;
Trigger1    = (Command != "holdback");
;	Trigger2    = !InGuardDist;	Linux
Value       = 140;
;
;>||================================~>/#[ Crouch Guard Guarding ]#\<~================================||<
;
[StateDef 131];
Type    = C;
Physics = C;
FaceP2  = 1;
;
[State 131: Change Animation];
Type        = ChangeAnim;
Trigger1    = (Anim != 131);
Value       = 131;
;
[State 131: Low To High];
Type        = ChangeState
Trigger1    = (Command != "holddown");
Value       = 130;
;
[State 131: Stop Guarding];
Type        = ChangeState
Trigger1    = (Command != "holdback");
;	Trigger2    = !InGuardDist;	Linux
Value       = 140;
;
;>||=================================~>/#[ Air Guard Guarding ]#\<~=================================||<
;
[StateDef 132];
Type    = A;
FaceP2  = 1;
;
[State 132: Change Animation];
Type        = ChangeAnim;
Trigger1    = (Anim != 132);
Value       = 132;
;
[State 132: Velocity Add];
Type        = VelAdd;
Trigger1    = 1;
Y           = Const(Movement.YAccel);
;
[State 132: Variable Set];
Type        = VarSet;
Trigger1    = 1;
sysvar(0)   = (Pos Y >= 0) && (Vel Y > 0);
;
[State 132: Velocity Set];
Type        = VelSet;
Trigger1    = SysVar(0);
Y           = 0;
;
[State 132: Position Set];
Type        = PosSet;
Trigger1    = SysVar(0);
Y           = 0;
;
[State 132: Change State];
Type        = ChangeState;
Trigger1    = (SysVar(0)) && (Command = "holdback");	 && (InGuardDist);	Linux
Value       = 130;
;
[State 132: Change State];
Type        = ChangeState;
Trigger1    = SysVar(0);
Value       = 52;
;
[State 132: Stop Guarding];
Type        = ChangeState;
Trigger1    = (Command != "holdback");
;	Trigger2    = !InGuardDist;	Linux
Value       = 140;
;
;>||======================================~>/#[ Guard End ]#\<~======================================||<
;
[StateDef 140];
Type    = U;    Leave state type unchanged
Physics = U;    Leave physics unchanged
Ctrl    = 1;
FaceP2  = 1;
;
[State 140: Change Animation];
Type        = ChangeAnim;
Trigger1    = !Time;
Value       = 140 + (StateType = C) + (StateType = A) * 2;
;
[State 140: StateType Set];
Type        = StateTypeSet;
Trigger1    = (!Time) && (StateType = S);
Physics     = S;
;
[State 140: StateType Set];
Type        = StateTypeSet;
Trigger1    = (!Time) && (StateType = C);
Physics     = C;
;
[State 140: StateType Set];
Type        = StateTypeSet;
Trigger1    = (!Time) && (StateType = A);
Physics     = A;
;
[State 140: High To Low];
Type        = StateTypeSet;
Trigger1    = (StateType = S) && (Command = "holddown");
StateType   = C;
Physics     = C;
;
[State 140: Low To High];
Type        = StateTypeSet;
Trigger1    = (StateType = C) && (Command != "holddown");
StateType   = S;
Physics     = S;
;
;   [State 140: Implemented Within Engine];
;Type       = ChangeState;
;Trigger1   = !AnimTime;
;Value      = (StateType = C) * 11 + (StateType = A) * 51;
;
;>||===============================~>/#[ Stand Guard Hit Shaking ]#\<~==============================||<
;
[StateDef 150];
MoveType    = H;
VelSet      = 0, 0;
FaceP2      = 1;
;
[State 150: Change Animation];
Type        = ChangeAnim;
Trigger1    = 1;
Value       = 150;
;
[State 150: Change State];
Type        = ChangeState;
Trigger1    = HitShakeOver;
Value       = 151 + 2 * (Command = "holddown");
;
[State 150: High To Low];
Type        = StateTypeSet;
Trigger1    = (StateType = S) && (Command = "holddown");
StateType   = C;
Physics     = C;
;
[State 150: Low To High];
Type        = StateTypeSet;
Trigger1    = (StateType = C) && (Command != "holddown");
StateType   = S;
Physics     = S;
;
[State 150: Force FeedBack];
Type        = ForceFeedBack;
Trigger1    = !Time;
WaveForm    = Square;
Time        = 3;
;
;>||============================~>/#[ Stand Guard Hit Knocked Back ]#\<~============================||<
;
[StateDef 151];
MoveType    = H;
Physics     = S;
Anim        = 150;
FaceP2      = 1;
;
[State 151: Hit Velocity Set];
Type        = HitVelSet;
Trigger1    = !Time;
X           = 1;
;
[State 151: Velocity Set];
Type        = VelSet;
Trigger1    = (Time = (GetHitVar(SlideTime)))
Trigger2    = HitOver;
X           = 0;
;
[State 151: Control Set];
Type        = CtrlSet;
Trigger1    = (Time = (GetHitVar(CtrlTime)));
Value       = 1;
;
[State 151: High To Low];
Type        = StateTypeSet;
Trigger1    = (StateType = S) && (Command = "holddown");
StateType   = C;
Physics     = C;
;
[State 151: Low To High];
Type        = StateTypeSet;
Trigger1    = (StateType = C) && (Command != "holddown");
StateType   = S;
Physics     = S;
;
[State 151: Change State];
Type        = ChangeState;
Trigger1    = HitOver;
Value       = 130;
Ctrl        = 1;
;
;>||==============================~>/#[ Crouch Guard Hit Shaking ]#\<~==============================||<
;
[StateDef 152];
Type        = C;
MoveType    = H;
VelSet      = 0, 0;
FaceP2      = 1;
;
[State 152: Change Animation];
Type        = ChangeAnim;
Trigger1    = 1;
Value       = 151;
;
[State 152: Change State];
Type        = ChangeState;
Trigger1    = HitShakeOver;
Value       = 151 + 2 * (Command = "holddown");
;
[State 152: High To Low];
Type        = StateTypeSet;
Trigger1    = (StateType = S) && (Command = "holddown");
StateType   = C;
Physics     = C;
;
[State 152: Low To High];
Type        = StateTypeSet;
Trigger1    = (StateType = C) && (Command != "holddown");
StateType   = S;
Physics     = S;
;
[State 152: Force FeedBack];
Type        = ForceFeedback;
Trigger1    = !Time;
WaveForm    = Square;
Time        = 4;
;
;>||============================~>/#[ Crouch Guard Hit Knocked Back ]#\<~============================||<
;
[StateDef 153];
Type        = C;
MoveType    = H;
Physics     = C;
Anim        = 151;
FaceP2      = 1;
;
[State 153: Hit Velocity Set];
Type        = HitVelSet;
Trigger1    = !Time;
X           = 1;
;
[State 153: Velocity Set];
Type        = VelSet;
Trigger1    = (Time = (GetHitVar(SlideTime)));
Trigger2    = HitOver;
X           = 0;
;
[State 153: Control Set];
Type        = CtrlSet;
Trigger1    = (Time = (GetHitVar(CtrlTime)));
Value       = 1;
;
[State 153: High To Low];
Type        = StateTypeSet;
Trigger1    = (StateType = S) && (Command = "holddown");
StateType   = C;
Physics     = C;
;
[State 153: Low To High];
Type        = StateTypeSet;
Trigger1    = (StateType = C) && (Command != "holddown");
StateType   = S;
Physics     = S;
;
[State 153: Change State];
Type        = ChangeState;
Trigger1    = HitOver;
Value       = 131;
Ctrl        = 1;
;
;>||================================~>/#[ Air Guard Hit Shaking ]#\<~================================||<
;
[StateDef 154];
Type        = A;
MoveType    = H;
VelSet      = 0, 0;
FaceP2      = 1;
;
[State 154: Change Animation];
Type        = ChangeAnim;
Trigger1    = 1;
Value       = 152;
;
[State 154: Change State To Airguardhit #02];
Type        = ChangeState;
Trigger1    = HitShakeOver;
Value       = 155;
;
[State 154: Force FeedBack];
Type        = ForceFeedback;
Trigger1    = !Time;
WaveForm    = Square;
Time        = 4;
;
;>||=============================~>/#[ Air Guard Hit Knocked Away ]#\<~=============================||<
;
[StateDef 155];
Type        = A;
MoveType    = H;
Anim        = 152;
FaceP2      = 1;
;
[State 155: Hit Velocity Set];
Type        = HitVelSet;
Trigger1    = !Time;
X           = 1;
Y           = 1;
;
[State 155: Velocity Add];
Type        = VelAdd;
Trigger1    = 1;
Y           = Const(Movement.YAccel);
;
[State 155: Control Set];
Type        = CtrlSet;
Trigger1    = (Time = (GetHitVar(CtrlTime)));
Value       = 1;
;
[State 155: Variable Set];
Type        = VarSet;
Trigger1    = 1;
sysvar(0)   = (Pos Y >= 0) && (Vel Y > 0);
;
[State 155: Velocity Set];
Type        = VelSet;
Trigger1    = SysVar(0);
Y           = 0;
;
[State 155: Position Set];
Type        = PosSet;
Trigger1    = SysVar(0);
Y           = 0;
;
[State 155: Change State];
Type        = ChangeState;
Trigger1    = (SysVar(0)) && (Command = "holdback");	 && (InGuardDist);	Linux
Value       = 130;
;
[State 155: Change State];
Type        = ChangeState;
Trigger1    = SysVar(0);
Value       = 52;
;
;>||================================~>/#[ Intro #01 - Saiyajin ]#\<~================================||<
;
[StateDef 160];
;
[State 160: Nothing Can Hit You];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 160: It's An Intro, Can't You See?];
Type        = AssertSpecial;
Trigger1    = (Time <= 150);
Flag        = Intro;
Flag2       = NoMusic;
Flag3       = NoBarDisplay;
;
[State 160: "Saiyajin"];
Type        = PlaySnd;
Trigger1    = !Time;
Value       = 160;
Volume      = 255;
Channel     = 0;
;
[State 160: Change Animation];
Type        = ChangeAnim;
Trigger1    = (Time > 150) && (Anim != 0);
Value       = 0;
;
;>||==================================~>/#[ Intro #02 - Taunt ]#\<~==================================||<
;
[StateDef 161];

;
[State 161: Nothing Can Hit You];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 161: It's An Intro, Can't You See?];
Type        = AssertSpecial;
Trigger1    = (Time <= 130);
Flag        = Intro;
Flag2       = NoMusic;
Flag3       = NoBarDisplay;
;
[State 161: "Taunt"];
Type        = PlaySnd;
Trigger1    = !Time;
Value       = 161;
Volume      = 255;
Channel     = 0;
;
[State 161: Change Animation];
Type        = ChangeAnim;
Trigger1    = (Time > 130) && (Anim != 0);
Value       = 0;
;
;>||================================~>/#[ Intro #03 - Nothing ]#\<~================================||<
;
[StateDef 162];
;
[State 162: Nothing Can Hit You];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 162: It's An Intro, Can't You See?];
Type        = AssertSpecial;
Trigger1    = (Time <= 100);
Flag        = Intro;
Flag2       = NoMusic;
Flag3       = NoBarDisplay;
;
[State 162: Change Animation];
Type        = ChangeAnim;
Trigger1    = (Time > 100) && (Anim != 0);
Value       = 0;
;
;>||==================================~>/#[ Intro #04 - Power ]#\<~==================================||<
;
[StateDef 163];
Anim 		= 0;
Ctrl 	    = 0;
SprPriority = 2;
;
[State 163: Nothing Can Hit You];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 163: It's An Intro, Can't You See?];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = Intro;
Flag2       = NoMusic;
Flag3       = NoBarDisplay;
;
[State 163: "SSJ"];
Type        = PlaySnd;
Trigger1    = !Time;
Value       = 163;
Volume      = 255;
Channel     = 0;
;
[State 163: Reset Growing Aura Position Variable];
Type        = VarSet;
Trigger1    = (Var(7) != 0) && (!Time);
var(7)      = 0;
;
[State 163: Reset Growing Aura Variable];
Type        = VarSet;
Trigger1    = (FVar(0) != 0) && (!Time);
fvar(0)     = 0;
;
[State 163: Fly Up];
Type        = VelSet;
Trigger1    = (Pos Y > -20);
Y           = -.5;
;
[State 163: Fly Stop];
Type        = VelSet;
Trigger1    = (Pos Y <= -20);
Y           = 0;
Persistent  = 0;
;
[State 163: Stop]
Type        = PosSet;
Trigger1    = (Pos Y < -20);
Y           = -20;
;
[State 163: Start Recharge Ki Animation];
Type        = ChangeAnim;
Trigger1    = (Pos Y = -20) && (Anim != [800, 805]) && (Time >= 130);
Value       = 800;
;
[State 163: Set State Type];
Type        = StateTypeSet;
Trigger1    = (Pos Y < 0) && (StateType != A);
StateType   = A;
;
[State 163: Flash Character];
Type        = PalFX;
Trigger1    = (Anim = 800) && (AnimElemTime(1) = 15);
Time        = 14;
Add         = 230, 230, 230;
SinAdd      = -220, -220, -220, 25;
;
[State 163: Growing Aura Helper];
Type        = Helper;
Trigger1    = (Anim = 800) && (AnimElemTime(1) = 20);
Trigger2    = (NumHelper(814)) && (!NumHelper(815));
Name        = "Growing Aura";
Pos         = 0, -30 + Var(7);
ID          = 814;
StateNo     = 814;
OwnPal      = 1;
Size.XScale = -.1 + FVar(0);
Size.YScale = FVar(0);
;
[State 163: Growing Aura Position Variable];
Type        = VarAdd;
Trigger1    = (Var(7) < 47) && (NumHelper(814));
var(7)      = 6;
;
[State 163: Growing Aura Variable];
Type        = VarAdd;
Trigger1    = (FVar(0) < .8) && (NumHelper(814));
fvar(0)     = .1;
;
[State 163: Effects];
Type        = BGPalFX;
Trigger1    = (Anim = 800) && (AnimElemTime(1) = [26, 29]) && (!NumHelper(815));
Time        = 1;
Add         = (200 + Time), (200 + Time), (200 + Time);
;
[State 163: No Shadows];
Type        = AssertSpecial;
Trigger1    = (Anim = 800) && (AnimElemTime(1) = [27, 30]) && (!NumHelper(815));
Flag        = GlobalNoShadow;
;
[State 163: "Real Aura"];
Type        = PlaySND;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumHelper(815));
Value       = 800, 1;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 163: Dust Right Side];
Type        = Explod;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumExplod(810)) && (!NumHelper(815));
Anim        = 810;
ID          = 810;
Pos         = 37, 20;
Facing      = -1;
SprPriority = 3;
Shadow      = -1;
OwnPal      = 1;
;
[State 163: Dust Left Side];
Type        = Explod;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumExplod(811)) && (!NumHelper(815));
Anim        = 810;
ID          = 811;
Pos         = -35, 20;
SprPriority = 3;
Shadow      = -1;
OwnPal      = 1;
;
[State 163: Earthquake];
Type        = EnvShake;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumHelper(815));
Time        = 20;
;
[State 163: Real Aura Helper];
Type        = Helper;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumHelper(815));
Name        = "Real Aura";
Pos         = 0, -30 + Var(7);
ID          = 815;
StateNo     = 815;
OwnPal      = 1;
Size.XScale = .8;
Size.XScale = .9;
;
[State 163: No Shadow];
Type        = AssertSpecial;
Trigger1    = (NumHelper(815));
Flag        = NoShadow;
;
[State 163: Recharge Ki Animation];
Type        = ChangeAnim;
TriggerAll  = (NumHelper(815));
Trigger1    = (Helper(815), Time = 0);
Value       = 805;
;
[State 163: Earthquake];
Type        = EnvShake;
Trigger1    = (NumHelper(815)) && !(GameTime % 40);
Time        = 5;
Freq        = 255 - (Helper(815), Var(0));
Ampl        = -3 - FVar(3);
;
[State 163: Proj Effects FU];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1101) < FVar(3));
Name        = "Proj Effects FU"
Pos         = 0, -47;
ID          = 1101;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
;
[State 163: Proj Effects FD];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1102) < FVar(3));
Name        = "Proj Effects FD"
Pos         = 0, -47;
ID          = 1102;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
;
[State 163: Proj Effects F];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1103) < FVar(3));
Name        = "Proj Effects F"
Pos         = 0, -47;
ID          = 1103;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
;
[State 163: Proj Effects U];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1104) < FVar(3));
Name        = "Proj Effects U"
Pos         = 0, -47;
ID          = 1104;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
;
[State 163: Proj Effects D];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1105) < FVar(3));
Name        = "Proj Effects D"
Pos         = 0, -47;
ID          = 1105;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
;
[State 163: Proj Effects BU];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1106) < FVar(3));
Name        = "Proj Effects BU"
Pos         = 0, -47;
ID          = 1106;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
;
[State 163: Proj Effects BD];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1107) < FVar(3));
Name        = "Proj Effects BD"
Pos         = 0, -47;
ID          = 1107;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
;
[State 163: Proj Effects B];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1108) < FVar(3));
Name        = "Proj Effects B"
Pos         = 0, -47;
ID          = 1108;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
;
[State 163: Recharge Ki End];
Type        = ChangeState;
Trigger1    = (Time > 390);
Value       = 168;
;
;>||===================================~>/#[ Intro #04 - End ]#\<~===================================||<
;
[StateDef 168];
Type    = A;
VelSet  = 0, 0;
Ctrl 	= 0;
;
[State 168: It's An Intro, Can't You See?];
Type        = AssertSpecial;
Trigger1    = (Pos Y);
Flag        = Intro;
Flag2       = NoMusic;
Flag3       = NoBarDisplay;
;
[State 168: Stop "Real Aura"];
Type            = StopSnd;
Trigger1        = !Time;
Channel         = 1;
IgnoreHitPause  = 1;
;
[State 168: Flash Character];
Type        = PalFX;
TriggerAll  = (FVar(0) = [.7, 1.2]);
Trigger1    = (Pos Y = -20) && (!NumHelper(814)) && (!NumHelper(820));
Time        = 5;
Add         = 230, 230, 230;
SinAdd      = -220, -220, -220, 5;
Persistent  = 0;
;
[State 168: Growing Aura Helper];
Type        = Helper;
TriggerAll  = (FVar(0) = [.7, 1.2]);
Trigger1    = (Pos Y = -20) && (!NumHelper(814)) && (!NumHelper(820));
Trigger2    = (NumHelper(820));
Name        = "Growing Aura";
Pos         = 0, -27 + Var(7);
ID          = 820;
StateNo     = 814;
OwnPal      = 1;
Size.XScale = FVar(0);
Size.YScale = .2 + FVar(0);
;
[State 168: Growing Aura Variable];
Type        = VarAdd;
Trigger1    = (FVar(0) = [.7, 1.2]) && (NumHelper(820)) && (Pos Y = -20);
fvar(0)     = .1;
;
[State 168: Growing Aura Position Variable];
Type        = VarAdd;
Trigger1    = (Var(7) < 71) && (NumHelper(820)) && (Pos Y = -20);
var(7)      = 6;
;
[State 168: Earthquake];
Type        = EnvShake;
Trigger1    = (!NumHelper(814)) && (!NumHelper(820)) && (Anim != [0, 800]);
Time        = 10;
;
[State 168: Effects];
Type        = BGPalFX;
Trigger1    = (!NumHelper(814)) && (!NumHelper(820)) && (Anim != [0, 800]) && (AnimElemTime(1) = [0, 4]);
Time        = 4;
Add         = (200 + Time * 3), (200 + Time * 3), (200 + Time * 3);
;
[State 168: No Shadows];
Type        = AssertSpecial;
Trigger1    = (!NumHelper(814)) && (!NumHelper(820)) && (Anim = 800) && (AnimElemTime(1) = [0, 4]);
Flag        = GlobalNoShadow;
;
[State 168: Start Recharge Ki Animation];
Type        = ChangeAnim;
Trigger1    = (!NumHelper(814)) && (!NumHelper(820)) && (Anim != [0, 800]) && (Time > 15);
Value       = 800;
;
[State 168: Flying Down Animation];
Type        = ChangeAnim;
Trigger1    = (!NumExplod(810)) && (!NumExplod(811)) && (Anim = 800) && (AnimElem = 1, >= 25);
Value       = 0;
;
[State 168: Fly Down];
Type        = VelSet;
Trigger1    = (!Anim) && (Pos Y <= -2);
Y           = 1;
;
[State 168: Fly Stop];
Type        = VelSet;
Trigger1    = (Pos Y >= 0);
Y           = 0;
;
[State 168: Set State Type];
Type        = StateTypeSet;
Trigger1    = (!Pos Y) && (StateType != S);
StateType   = S;
;
[State 168: Change Animation];
Type        = ChangeAnim;
Trigger1    = (!Pos Y) && (Anim != 0);
Value       = 0;
;
;>||==================================~>/#[ Intro #06 - Broli ]#\<~=================================||<
;
[StateDef 169];
Anim    = 169;

;
[State 169: "Broli"];
Type        = PlaySnd;
Trigger1    = !Time;
Value       = 169;
Volume      = 255;
Channel     = 0;
;
[State 169: Nothing Can Hit You];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 169: It's An Intro, Can't You See?];
Type        = AssertSpecial;
Trigger1    = (Time <= 180);
Flag        = Intro;
Flag2       = NoMusic;
Flag3       = NoBarDisplay;
;
[State 169: Change Animation];
Type        = ChangeAnim;
Trigger1    = !AnimTime;
Value       = 0;
;
;>||===================================~>/#[ Lose Time Over ]#\<~===================================||<
;
[StateDef 170];
Anim    = 190;
VelSet  = 0, 0;
Ctrl    = 0;
;
[State 170: Not Hit By];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 170: Assert Special];
Type        = AssertSpecial;
Trigger1    = (Time <= 60);
Flag        = RoundNotOver;
;
[State 170: The Round Is Not Over! Not!];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoMusic;
Flag2       = NoBarDisplay;
;
[State 170: "Bah"];
Type        = PlaySND;
Trigger1    = !Time;
Value       = 170;
Volume      = 255;
Channel     = 0;
;
;>||======================================~>/#[ Draw Game ]#\<~======================================||<
;
[StateDef 175];
Anim    = 190;
Ctrl    = 0;
VelSet  = 0, 0;
;
[State 175: "Nando"];
Type        = PlaySnd;
Trigger1    = !Time;
Value       = 5000, 2;
Volume      = 255;
Channel     = 0;
;
[State 175: Assert Special];
Type        = AssertSpecial;
Trigger1    = (Time <= 60);
Flag        = RoundNotOver;
;
[State 175: The Round Is Not Over! Not!];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoMusic;
Flag2       = NoBarDisplay;
;
[State 175: Not Hit By Anything];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
;>||==================================~>/#[ Win State Decider ]#\<~==================================||<
;
[StateDef 180];
VelSet	    = 0, 0;
;
[State 180: Intro And Winpose Decider]
Type        = VarRandom;
Trigger1    = !Time;
v           = 13;
Range       = 181, 182;
;
[State 180: Switch To Win Pose];
Type		= ChangeState;
Trigger1    = !Time;
Value		= Var(13);
;
;>||================================~>/#[ Win Pose #01 - He, He ]#\<~================================||<
;
[StateDef 181];
Physics = S;
Anim 	= 190;
;
[State 181: Nothing Can Hit You];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 181: The Round Is Not Over! Not!];
Type        = AssertSpecial;
Trigger1    = (Time <= 140);
Flag        = RoundNotOver;
;
[State 181: Blah];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoMusic;
Flag2       = NoBarDisplay;
;
[State 181: "He, he"];
Type        = PlaySnd;
Trigger1    = !Time;
Value       = 181;
Volume      = 255;
Channel     = 0;
;
;>||==============================~>/#[ Win Pose #02 - Zanzouken ]#\<~==============================||<
;
[StateDef 182];
Type        = U;
Anim        = 850;
SprPriority = 0;
;
[State 182: Nothing Can Hit You];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 182: The Round Is Not Over! Not!];
Type        = AssertSpecial;
Trigger1    = (Time <= 180);
Flag        = RoundNotOver;
;
[State 182: The Round Is Not Over! Not!];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoMusic;
Flag2       = NoBarDisplay;
;
[State 182: Gnah];
Type        = StateTypeSet;
Trigger1    = (!Pos Y) && (StateType != S);
StateType   = S;
;
[State 182: Grmpf];
Type        = StateTypeSet;
Trigger1    = (Pos Y) && (StateType != A);
StateType   = A;
;
[State 182: "Zanzouken"];
Type 		= PlaySND;
Trigger1    = (AnimElem = 2);
Value 		= 850;
Channel     = 2;
FreqMul     = FVar(2);
;
[State 182: Flash Background];
Type        = EnvColor;
Trigger1    = (AnimElemTime(2) = 15);
;
[State 182: Shake];
Type        = EnvShake;
Trigger1    = (AnimElemTime(2) = 15);
Time        = 7;
Freq        = (FVar(1) / 20);
;
[State 182: Ground Explod];
Type        = Explod;
Trigger1    = (AnimElemTime(2) = 15) && (!Pos Y);
Anim        = F60;
ID          = 60;
OwnPal      = 1;
MoveTime    = 9999;
;
[State 182: Invisible];
Type        = AssertSpecial;
Trigger1    = (AnimElemTime(2) >= 15);
Flag        = Invisible;
Flag2       = NoShadow;
;
[State 182: Zanzouken After Images];
Type        = AfterImage;
Trigger1    = (AnimElemTime(2) = 15);
Time        = 8;
TimeGap     = 4;
FrameGap    = 1;
Length      = 8;
PalAdd      = 0, 0, 0;
PalMul      = .5, .5, .5;
PalContrast = 110, 110, 110;
Trans       = Add;
;
[State 182: Zanzouken BU Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(855));
Name        = "Zanzouken BU";
ID          = 855;
StateNo     = 855;
;
[State 182: Zanzouken BD Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (Pos Y) && (!NumHelper(856));
Name        = "Zanzouken BD";
ID          = 856;
StateNo     = 855;
;
[State 182: Zanzouken B Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(857));
Name        = "Zanzouken B";
ID          = 857;
StateNo     = 857;
;
[State 182: Zanzouken FU Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(858));
Name        = "Zanzouken FU";
ID          = 858;
StateNo     = 855;
;
[State 182: Zanzouken FD Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (Pos Y) && (!NumHelper(859));
Name        = "Zanzouken FD";
ID          = 859;
StateNo     = 855;
;
[State 182: Zanzouken F Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(860));
Name        = "Zanzouken F";
ID          = 860;
StateNo     = 860;
;
[State 182: Zanzouken U Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(861));
Name        = "Zanzouken U";
ID          = 861;
StateNo     = 855;
;
[State 182: Zanzouken D Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (Pos Y) && (!NumHelper(862));
Name        = "Zanzouken D";
ID          = 862;
StateNo     = 855;
;
;>||==================================~>/#[ Pre-Introduction ]#\<~==================================||<
;
[StateDef 190];
Ctrl    = 0;
VelSet  = 0, 0;
Anim    = 190;
;
[State 190: Broli];
Type        = VarSet;
Trigger1    = (!Time) && ((P2Name = "[Necromancer's] Broli") || (P4Name = "[Necromancer's] Broli"));
var(13)     = 169;
;
[State 190: Intro And Winpose Decider]
Type        = VarRandom;
Trigger1    = (Var(13) != 169) && (!Time);
v           = 13;
Range       = 160, 163;
;
[State 190: Go To Introduction];
Type        = ChangeState;
Trigger1    = !Time;
Value       = Var(13);
;
;>||=================================~>/#[ Taunt #01 - He, He ]#\<~=================================||<
;
[StateDef 195];
Physics 	= S;
Anim 		= 190;
Ctrl        = 0;
VelSet	    = 0, 0;
PowerAdd 	= 50;
SprPriority = 2;
;
[State 195: "Taunt"];
Type        = PlaySnd;
Trigger1    = !Time;
Value       = 181;
Volume      = 255;
Channel     = 0;
;
[State 195: Yupp];
Type        = PowerAdd;
Trigger1    = 1;
Value       = 1;
;
[State 195: End];
Type        = ChangeState;
Trigger1    = (Time >= 100);
Value       = 0;
Ctrl        = 1;
;
;>||========================================~>/#[ SLP ]#\<~========================================||<
;
[StateDef 200];
MoveType	= A;
Physics	    = S;
Anim		= 200;
Ctrl		= 0;
Juggle	    = 1;
SprPriority = 2;     
;
[State 200: Velocity];
Type        = VelAdd;
Trigger1    = (AnimElem = 2);
X           = 1.45;
;
[State 200: "Hm" "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 0, IfElse((Random <= 500), 55, 170));
Volume      = 255;
Channel     = 0;
;
[State 200: Sound];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 200;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 200: Ellbow];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = S, NA;
GuardFlag           = MA;
Priority            = 3;
Damage              = 10;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkXY             = 0, -53;
Ground.Type         = Low;
Ground.SlideTime    = 8;            Ground.HitTime * .75
Ground.HitTime      = 10;           Whatever looks right
Air.HitTime         = 10;           Same as Ground.HitTime
Ground.Velocity     = -4.5;         Whatever looks right
Air.Velocity        = -2.25, -1.75; Ground.Velocity / 2, Same - .5
Fall.YVelocity      = 0;
ID                  = 200;
GetPower            = 10, 5;
;
[State 200: Hit Sound];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 200, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 200: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl 		= 1;
;
;>||========================================~>/#[ SMP ]#\<~========================================||<
;
[StateDef 210];
MoveType	= A;
Physics	    = S;
Anim		= 210;
Ctrl		= 0;
Juggle	    = 1;
SprPriority = 2;     
;
[State 210: Velocity];
Type        = VelAdd;
Trigger1    = (AnimElem = 2);
X           = 1.95;
;
[State 210: "Hm" "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 0, IfElse((Random <= 500), 55, 170));
Volume      = 255;
Channel     = 0;
;
[State 210: Sound];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 210;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 210: Punch];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = S, NA;
GuardFlag           = MA;
Priority            = 4;
Damage              = 20;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkXY             = 0, -52;
Ground.Type         = Low;
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = -4.5;
Air.Velocity        = -2.25, -1.75;
Fall.YVelocity      = 0;
ID                  = 210;
GetPower            = 20, 10;
;
[State 210: Hit SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 210, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 210: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl 		= 1;
;
;>||========================================~>/#[ SHP ]#\<~========================================||<
;
[StateDef 220];
MoveType	= A;
Physics	    = S;
Anim		= 220;
Ctrl		= 0;
Juggle	    = 3;
SprPriority = 2;     
;
[State 220: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 3);
Value       = 18, 13;
;
[State 220: Velocity];
Type        = VelAdd;
Trigger1    = (AnimElem = 3);
X           = 2;
;
[State 220: "Hm" "Hmb" "Ha"];
Type        = PlaySND;
TriggerAll  = (Random <= 750);
Trigger1    = (AnimElem = 3);
Value       = 50 + IfElse((Random <= 500), 0, IfElse((Random <= 500), 55, 170));
Volume      = 255;
Channel     = 0;
;
[State 220: Sound];
Type        = PlaySND;
Trigger1    = (AnimElem = 3);
Value       = 220;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 220: Punch];
Type                = HitDef;
Trigger1            = (AnimElem = 3);
Attr                = S, NA;
GuardFlag           = MA;
AnimType            = Hard;
Priority            = 4;
Damage              = 30;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 2;
SparkXY             = 0, -54;
Ground.Type         = Low;
Ground.SlideTime    = 14;
Ground.HitTime      = 19;
Air.HitTime         = 19;
Ground.Velocity     = -6;
Air.Velocity        = -3, -2.5;
Fall.YVelocity      = 0;
ID                  = 220;
GetPower            = 30, 15;
;
[State 220: Hit SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 220, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 220: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl 		= 1;
;
;>||=================================~>/#[ Standing Light Kick ]#\<~=================================||<
;
[StateDef 230];
MoveType	= A;
Physics	    = S;
Anim		= 230;
Ctrl		= 0;
Juggle	    = 1;
SprPriority = 2;     
;
[State 230: Velocity Set];
Type        = VelAdd;
Trigger1    = (AnimElem = 2);
X           = 2;
;
[State 230: "Hm" "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 0, IfElse((Random <= 500), 55, 170));
Volume      = 255;
Channel     = 0;
;
[State 230: Sound];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 210;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 230: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = S, NA;
GuardFlag           = MA;
Priority            = 4;
Damage              = 10;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkXY             = 0, -25;
Ground.Type         = Low;
Ground.SlideTime    = 8;
Ground.HitTime      = 10;
Air.HitTime         = 10;
Ground.Velocity     = -4.5;
Air.Velocity        = -2.25, -1.75;
Fall.YVelocity      = 0;
ID                  = 230;
GetPower            = 10, 5;
;
[State 230: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 210, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 230: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl 		= 1;
;
;>||=================================~>/#[ Standing Light Knee ]#\<~=================================||<
;
[StateDef 235];
MoveType	= A;
Physics	    = S;
Anim		= 235;
Ctrl		= 0;
Juggle	    = 5;
SprPriority = 2;     
;
[State 235: "Hm" "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 0, IfElse((Random <= 500), 55, 170));
Volume      = 255;
Channel     = 0;
;
[State 235: SND];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 210;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 235: Knee];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = S, NA;
GuardFlag           = MA;
Air.AnimType        = Up;
Priority            = 4;
Damage              = 15;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkXY             = 0, -59;
Ground.Type         = Low;
Ground.SlideTime    = 11;
Ground.HitTime      = 15;
Air.HitTime         = 15;
Ground.Velocity     = -.5, -7;
Air.Velocity        = -.5, -7;
Fall.YVelocity      = 0;
ID                  = 235;
GetPower            = 15, 8;
;
[State 235: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 210, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 235: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl 		= 1;
;
;>||================================~>/#[ Standing Medium Kick ]#\<~================================||<
;
[StateDef 240];
MoveType	= A;
Physics	    = S;
Anim		= 240;
Ctrl		= 0;
Juggle	    = 4;
SprPriority = 2;     
;
[State 240: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 3);
Value       = 10;
;
[State 240: Velocity Set];
Type        = VelAdd;
Trigger1    = (AnimElem = 3);
X           = 2;
;
[State 240: "Hm" "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 3) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 0, IfElse((Random <= 500), 55, 170));
Volume      = 255;
Channel     = 0;
;
[State 240: Sound];
Type        = PlaySND;
Trigger1    = (AnimElem = 3);
Value       = 240;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 240: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 3);
Attr                = S, NA;
GuardFlag           = MA;
AnimType            = Med;
Priority            = 4;
Damage              = 20;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 1;
SparkXY             = 0, -67;
Air.Type            = Low;
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = -6;
Air.Velocity        = -3, -2.5;
Fall.YVelocity      = 0;
ID                  = 240;
GetPower            = 20, 10;
;
[State 240: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 240, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 240: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl 		= 1;
;
;>||================================~>/#[ Standing Strong Kick ]#\<~================================||<
;
[StateDef 250];
MoveType	= A;
Physics	    = S;
Anim		= 250;
Ctrl		= 0;
Juggle	    = 6;
SprPriority = 2;     
;
[State 250: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 2);
Value       = 11;
;
[State 250: Velocity Set];
Type        = VelAdd;
Trigger1    = (AnimElem = 2);
X           = 4;
;
[State 250: "Hm" "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 0, IfElse((Random <= 500), 55, 170));
Volume      = 255;
Channel     = 0;
;
[State 250: Sound];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 220;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 250: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = S, NA;
GuardFlag           = MA;
AnimType            = Back;
Air.AnimType        = DiagUp;
Priority            = 4;
Damage              = 30;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 2;
SparkXY             = 0, -53;
Ground.Type         = Low;
Ground.SlideTime    = 14;
Ground.HitTime      = 19;
Air.HitTime         = 19;
Ground.Velocity     = -10;
Air.Velocity        = -5, -4.5;
Air.Fall            = 1;
Fall.YVelocity      = 0;
ID                  = 250;
GetPower            = 30, 15;
;
[State 250: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 220, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 250: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl 		= 1;
;
;>||=====================================~>/#[ Dash Kick ]#\<~======================================||<
;
[StateDef 300];
Type        = C;
MoveType    = A;
Physics     = S;
Juggle      = 6;
SprPriority = 2;
;
[State 300: Command Check];
Type        = VarSet;
Trigger1    = !Time;
var(12)     = ((Command = "Hold b") || (Command = "Hold y")) + ((Command = "Hold a") || (Command = "Hold x")) * 2;
;
[State 300: Jump 'n Run Control];'
Type        = VarSet;
Trigger1    = !Time;
var(1)      = 3;
;
[State 300: SND];
Type        = PlaySND;
Trigger1    = !Time;
Value       = 1050;
Volume      = 255;
Channel     = 0;
;
[State 300: You May Not Walk!];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoWalk;
;
[State 300: You May Pass Through Opponents];
Type        = PlayerPush;
Trigger1    = (AnimElemNo(0) = [5, 6]);
Value       = 0;
;
[State 300: You Cannot Be Thrown Or Hit By Projectiles];
Type        = NotHitBy;
Trigger1    = (AnimElemNo(0) = [5, 6]);
Value       = , AT, AP;
;
[State 300: And Again];
Type        = ChangeAnim;
Trigger1    = (AnimElemNo(0) = 5);
Value       = 100;
Elem        = 5;
Persistent  = 0;
;
[State 300: Make Dust];
Type        = MakeDust;
Trigger1    = (AnimElemNo(0) = 5) && (Vel X > 0);
Pos         = 32;
Pos2        = 10;
Spacing     = 7;
;
[State 300: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElemNo(0) = 5);
X           = (6 - Var(12) + 3) / 1.5;
;
[State 300: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 5);
Attr                = C, SA;
HitFlag             = ADFM;
GuardFlag           = L;
AnimType            = DiagUp;
Priority            = 5;
Damage              = 50 - Var(12) * 10;
HitSound            = 5, 2 - Var(12);
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 2 - Var(12);
SparkXY             = 0, -4;
Ground.Type         = Trip;
Ground.SlideTime    = 14;
Ground.HitTime      = 19;
Air.HitTime         = 19;
Ground.Velocity     = -5 + Var(12) * 2, -5 - Var(12);
Air.Velocity        = -3.75 + Var(12) * 2, -3.25 - Var(12);
Fall                = 1;
ID                  = 300;
GetPower            = 50 - Var(12) * 10, 25 - Var(12) * 5;
;
[State 300: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElemNo(0) = 6);
X           = (6 - Var(12) + 3) / 2;
;
[State 300: Make Dust];
Type        = MakeDust;
Trigger1    = (AnimElemNo(0) = 8) && (Vel X > 0);
Pos         = 12;
Spacing     = 8;
;
[State 300: Velocity Set];
Type        = VelSet;
Trigger1    = (AnimElem = 8, >= 1);
X           = (6 - Var(12) + 3) / 4;
;
[State 300: End];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 0;
Ctrl        = 1;
;
;>||=================================~>/#[ Jumping Light Punch ]#\<~=================================||<
;
[StateDef 600];
Type 		= A;
MoveType 	= A;
Physics 	= A;
Anim 		= 605 - Abs(P2BodyDist X <= 17) * 5;
Ctrl 	    = 0;
Juggle 		= 1;
FaceP2 		= Var(0);
SprPriority = 2;
;
[State 600: "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 55, 170);
Volume      = 255;
Channel     = 0;
;
[State 600: SND];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 200;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 600: Ellbow];
Type                = HitDef;
Trigger1            = (Anim = 600) && (AnimElem = 2);
Attr                = A, NA;
GuardFlag           = AH;
Priority            = 4;
Damage              = 5;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkXY             = 0, -53;
Air.Type            = Low;
Ground.SlideTime    = 6;
Ground.HitTime      = 8;
Air.HitTime         = 8;
Ground.Velocity     = -4.5;
Air.Velocity        = -2.25, -1.75;
Fall.YVelocity      = 0;
ID                  = 600;
GetPower            = 5, 3;
;
[State 600: Punch];
Type                = HitDef;
Trigger1            = (Anim = 605) && (AnimElem = 2);
Attr                = A, NA;
GuardFlag           = AH;
Priority            = 4;
Damage              = 10;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkXY             = 0, -52;
Air.Type            = Low;
Ground.SlideTime    = 8;
Ground.HitTime      = 10;
Air.HitTime         = 10;
Ground.Velocity     = -4.5;
Air.Velocity        = -2.25, -1.75;
Fall.YVelocity      = 0;
ID                  = 605;
GetPower            = 10, 5;
;
[State 600: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 200, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 600: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 50;
Ctrl 		= 1;
;
;>||================================~>/#[ Jumping Medium Punch ]#\<~================================||<
;
[StateDef 610];
Type 		= A;
MoveType 	= A;
Physics 	= A;
Anim 		= 610;
Ctrl 	    = 0;
Juggle 		= 3;
FaceP2 		= Var(0);
SprPriority = 2;
;
[State 610: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 3);
Value       = 18, 13;
;
[State 610: "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 3) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 55, 170);
Volume      = 255;
Channel     = 0;
;
[State 610: SND];
Type        = PlaySND;
Trigger1    = (AnimElem = 3);
Value       = 210;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 610: Punch];
Type                = HitDef;
Trigger1            = (AnimElem = 3);
Attr                = A, NA;
GuardFlag           = AH;
AnimType            = Med;
Priority            = 4;
Damage              = 20;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 1;
SparkXY             = 0, -54;
Air.Type            = Low;
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = -6;
Air.Velocity        = -3, -2.5;
Fall.YVelocity      = 0;
ID                  = 610;
GetPower            = 20, 10;
;
[State 610: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 210, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 610: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 50;
Ctrl 		= 1;
;
;>||================================~>/#[ Jumping Strong Punch ]#\<~================================||<
;
[StateDef 620];
Type 		= A;
MoveType 	= A;
Physics 	= A;
Anim 		= 620;
Ctrl 	    = 0;
Juggle 		= 6;
FaceP2 		= Var(0);
SprPriority = 2;
;
[State 620: "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 55, 170);
Volume      = 255;
Channel     = 0;
;
[State 620: SND];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 220;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 620: Hit Definition];
Type 		    	= HitDef;
Trigger1 	    	= (AnimElem = 2);
Attr 		    	= A, NA;
HitFlag             = ADFM;
Damage 	            = 30;
GuardFlag	    	= HA;
PauseTime 	    	= 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo 	    	= 2;
SparkXY 	    	= 0, -5;
GuardSound          = 6;
AnimType 	    	= Hard;
Priority            = 4;
Air.Type            = Low;
Ground.SlideTime    = 13;
Ground.HitTime  	= 17;
Air.HitTime         = 17;
Ground.Velocity     = -3;
Air.Velocity        = -.75, 1.5;
Fall                = 1;
Fall.YVelocity      = 0;
ID                  = 620;
GetPower            = 30, 15;
;
[State 620: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 220, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 620: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 50;
Ctrl 		= 1;
;
;>||=================================~>/#[ Jumping Light Kick ]#\<~=================================||<
;
[StateDef 630];
Type 		= A;
MoveType 	= A;
Physics 	= A;
Anim 		= 630;
Ctrl 	    = 0;
Juggle 		= 1;
FaceP2 		= Var(0);
SprPriority = 2;
;
[State 630: "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 55, 170);
Volume      = 255;
Channel     = 0;
;
[State 630: SND];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 210;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 630: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = A, NA;
GuardFlag           = AH;
Priority            = 4;
Damage              = 10;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkXY             = 0, -25;
Ground.Type         = Low;
Ground.SlideTime    = 8;
Ground.HitTime      = 10;
Air.HitTime         = 10;
Ground.Velocity     = -4.5;
Air.Velocity        = -2.25, -1.75;
Fall.YVelocity      = 0;
ID                  = 630;
GetPower            = 10, 5;
;
[State 630: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 210, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 630: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 50;
Ctrl 		= 1;
;
;>||=================================~>/#[ Jumping Medium Kick ]#\<~=================================||<
;
[StateDef 640];
Type 		= A;
MoveType 	= A;
Physics 	= A;
Anim 		= 640;
Ctrl 	    = 0;
Juggle 		= 4;
FaceP2 		= Var(0);
SprPriority = 2;
;
[State 640: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 3);
Value       = 10;
;
[State 640: "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 3) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 55, 170);
Volume      = 255;
Channel     = 0;
;
[State 640: SND];
Type        = PlaySND;
Trigger1    = (AnimElem = 3);
Value       = 240;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 640: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 3);
Attr                = A, NA;
GuardFlag           = AH;
AnimType            = Med;
Priority            = 4;
Damage              = 20;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 1;
SparkXY             = 0, -67;
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = -6;
Air.Velocity        = -3, -2.5;
Fall.YVelocity      = 0;
ID                  = 640;
GetPower            = 20, 10;
;
[State 640: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 240, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 640: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 50;
Ctrl 		= 1;
;
;>||=================================~>/#[ Jumping Strong Kick ]#\<~=================================||<
;
[StateDef 650];
Type 		= A;
MoveType 	= A;
Physics 	= A;
Anim 		= 650;
Ctrl 	    = 0;
Juggle 		= 6;
FaceP2 		= Var(0);
SprPriority = 2;
;
[State 650: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 2);
Value       = 11;
;
[State 650: "Hmb" "Ha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) && (Random <= 750);
Value       = 50 + IfElse((Random <= 500), 55, 170);
Volume      = 255;
Channel     = 0;
;
[State 650: SND];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 220;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 650: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = A, NA;
GuardFlag           = AH;
AnimType            = Hard;
Priority            = 4;
Damage              = 30;
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 2;
SparkXY             = 0, -53;
Air.Type            = Low;
Ground.SlideTime    = 14;
Ground.HitTime      = 19;
Air.HitTime         = 19;
Ground.Velocity     = -6.5;
Air.Velocity        = -4, -4.5;
Fall                = 1;
Fall.YVelocity      = 0;
ID                  = 650;
GetPower            = 30, 15;
;
[State 650: SND];
Type            = PlaySND;
Trigger1        = MoveHit;
Value           = 220, 1;
Channel         = 2;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State 650: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 50;
Ctrl 		= 1;
;
;>||=====================================~>/#[ Recharge Ki ]#\<~=====================================||<
;
[StateDef 800]; Thanks to FlowerGirl for the charge code this is based on
Anim 		= 0;
VelSet      = 0, 0;
Ctrl 	    = 0;
SprPriority = 2;
;
[State 800: Reset Growing Aura Position Variable];
Type        = VarSet;
Trigger1    = (Var(7) != 0) && (!Time);
var(7)      = 0;
;
[State 800: Reset Growing Aura Variable];
Type        = VarSet;
Trigger1    = (FVar(0) != 0) && (!Time);
fvar(0)      = 0;
;
[State 800: Fly Up];
Type        = VelSet;
Trigger1    = (Pos Y > -20);
Y           = -2;
;
[State 800: Fly Stop];
Type        = VelSet;
Trigger1    = (Pos Y = -20);
Y           = 0;
Persistent  = 0;
;
[State 800: Start Recharge Ki Animation];
Type        = ChangeAnim;
Trigger1    = (Pos Y = -20) && (Anim != [800, 805]);
Value       = 800;
;
[State 800: Set State Type];
Type        = StateTypeSet;
Trigger1    = (Pos Y < 0) && (StateType != A);
StateType   = A;
;
[State 800: "Recharge Ki Voice"];
Type        = PlaySnd;
Trigger1    = (Anim = 800) && (Time = 20);
Value       = 800;
Volume      = 255;
Channel     = 0;
FreqMul     = FVar(2);
;
[State 800: Flash Character];
Type        = PalFX;
Trigger1    = (Anim = 800) && (Time = 25);
Time        = 14;
Add         = 230, 230, 230;
SinAdd      = -220, -220, -220, 25;
;
[State 800: Growing Aura Helper];
Type        = Helper;
Trigger1    = (Anim = 800) && (Time = 30);
Trigger2    = (NumHelper(814)) && (!NumHelper(815));
Name        = "Growing Aura";
Pos         = 0, -30 + Var(7);
ID          = 814;
StateNo     = 814;
OwnPal      = 1;
Size.XScale = -.1 + FVar(0);
Size.YScale = FVar(0);
PauseMoveTime    = 9999;
;
[State 800: Growing Aura Position Variable];
Type        = VarAdd;
Trigger1    = (Var(7) < 47) && (NumHelper(814));
var(7)      = 6;
;
[State 800: Growing Aura Variable];
Type        = VarAdd;
Trigger1    = (FVar(0) < .8) && (NumHelper(814));
fvar(0)     = .1;
;
[State 800: Effects];
Type        = BGPalFX;
Trigger1    = (Anim = 800) && (AnimElemTime(1) = [26, 29]) && (!NumHelper(815));
Time        = 1;
Add         = (200 + Time), (200 + Time), (200 + Time);
;
[State 800: No Shadows];
Type        = AssertSpecial;
Trigger1    = (Anim = 800) && (AnimElemTime(1) = [27, 30]) && (!NumHelper(815));
Flag        = GlobalNoShadow;
;
[State 800: "Real Aura"];
Type        = PlaySND;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumHelper(815));
Value       = 800, 1;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 800: Dust Right Side];
Type        = Explod;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumExplod(810)) && (!NumHelper(815));
Anim        = 810;
ID          = 810;
Pos         = 37, 20;
Facing      = -1;
SprPriority = 3;
Shadow      = -1;
OwnPal      = 1;
PauseMoveTime    = 9999;
;
[State 800: Dust Left Side];
Type        = Explod;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumExplod(811)) && (!NumHelper(815));
Anim        = 810;
ID          = 811;
Pos         = -35, 20;
SprPriority = 3;
Shadow      = -1;
OwnPal      = 1;
PauseMoveTime    = 9999;
;
[State 800: Right Push Helper];
Type		= Helper;
Trigger1    = (NumExplod(810)) && (!NumHelper(810)) && (!NumHelper(815));
Name		= "Right Push";
ID		    = 810;
Stateno		= 810;
PauseMoveTime    = 9999;
Pos         = 0, 20;
;
[State 800: Slow Motion];
Type        = Pause;
TriggerAll  = (Power >= 2500) && (NumHelper(810)) && !(GameTime % 2);
Trigger1    = (Helper(810), Time = [0, 6]);
Time        = 2;
MoveTime    = 2;
;
[State 800: Left Push Helper];
Type		= Helper;
Trigger1    = (NumExplod(811)) && (!NumHelper(811)) && (!NumHelper(815));
Name		= "Left Push";
ID		    = 811;
Stateno		= 810;
PauseMoveTime    = 9999;
Pos         = 0, 20;
;
[State 800: Earthquake];
Type        = EnvShake;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumHelper(815));
Time        = 10;
;
[State 800: Real Aura Helper];
Type        = Helper;
Trigger1    = (Anim = 800) && (!AnimTime) && (!NumHelper(815));
Name        = "Real Aura";
Pos         = 0, -30 + Var(7);
ID          = 815;
StateNo     = 815;
OwnPal      = 1;
Size.XScale = .8;
Size.XScale = .9;
PauseMoveTime    = 9999;
;
[State 800: No Shadow];
Type        = AssertSpecial;
Trigger1    = (NumHelper(815));
Flag        = NoShadow;
;
[State 800: Recharge Ki Animation];
Type        = ChangeAnim;
TriggerAll  = (NumHelper(815));
Trigger1    = (Helper(815), Time = 0);
Value       = 805;
;
[State 800: Ki Add];
Type        = PowerAdd;
Trigger1    = (NumHelper(815));
Value       = 3;
;
[State 800: Earthquake];
Type        = EnvShake;
Trigger1    = (NumHelper(815)) && !(GameTime % 40);
Time        = 5;
Freq        = 255 - (Helper(815), Var(0));
Ampl        = -3 - FVar(3);
;
[State 800: Always Face Opponent];
Type        = Turn;
Trigger1    = (P2BodyDist X < -25);
;
[State 800: Proj Effects FU];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1101) < FVar(3));
Name        = "Proj Effects FU";
Pos         = 0, -47;
ID          = 1101;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
PauseMoveTime    = 9999;
;
[State 800: Proj Effects FD];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1102) < FVar(3));
Name        = "Proj Effects FD";
Pos         = 0, -47;
ID          = 1102;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
PauseMoveTime    = 9999;
;
[State 800: Proj Effects F];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1103) < FVar(3));
Name        = "Proj Effects F";
Pos         = 0, -47;
ID          = 1103;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
PauseMoveTime    = 9999;
;
[State 800: Proj Effects U];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1104) < FVar(3));
Name        = "Proj Effects U";
Pos         = 0, -47;
ID          = 1104;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
PauseMoveTime    = 9999;
;
[State 800: Proj Effects D];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1105) < FVar(3));
Name        = "Proj Effects D";
Pos         = 0, -47;
ID          = 1105;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
PauseMoveTime    = 9999;
;
[State 800: Proj Effects BU];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1106) < FVar(3));
Name        = "Proj Effects BU";
Pos         = 0, -47;
ID          = 1106;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
PauseMoveTime    = 9999;
;
[State 800: Proj Effects BD];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1107) < FVar(3));
Name        = "Proj Effects BD";
Pos         = 0, -47;
ID          = 1107;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
PauseMoveTime    = 9999;
;
[State 800: Proj Effects B];
Type        = Helper;
Trigger1    = (NumHelper(815)) && (NumHelper(1108) < FVar(3));
Name        = "Proj Effects B";
Pos         = 0, -47;
ID          = 1108;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
Size.YScale = IfElse(((FVar(3) / 4) <= .4), (FVar(3) / 4), .4);
PauseMoveTime    = 9999;
;
[State 800: Recharge Ki End];
Type        = ChangeState;
Trigger1    = (Var(59) != 1) && ((Power >= 3000) || (Command != "Hold x") || (Command != "Hold y")) && (Time > 39);
Value       = 820;
;
[State 800: A.I. Recharge Ki End];
Type        = ChangeState;
TriggerAll  = (Var(59) = 1) && (Power >= 100) && (Time > 39) && (P2BodyDist Y = [-105, 20]);
Trigger1    = (RoundState = 3) || (Power >= 3000) || (IfElse((Var(8)), (EnemyNear, MoveType = A), 1) && (P2BodyDist X = [0, 74])) || (EnemyNear, NumProj > 0) || (P2BodyDist X = [0, 74]);
Value       = 820;
;
;>||=====================================~>/#[ Push Helper ]#\<~=====================================||<
;
[StateDef 810];
Physics = S;
;
[State 810: Invisible];
Type	    = AssertSpecial;
Trigger1	= 1;
Flag	    = Invisible;
;
[State 810: Not Hit By Anything];
Type	    = NotHitBy;
Trigger1	= 1;
Value	    = SCA;
;
[State 810: Enable Push];
Type	    = PlayerPush;
Trigger1	= 1;
Value       = 1;
;
[State 810: Push];
Type	    = VelSet;
Trigger1	= !Time;
X	        = (25 + (Parent, FVar(1) / 333.333)) * IfElse((IsHelper(810)), 1, -1);
;
[State 810: Destroy Self];
Type	    = DestroySelf;
Trigger1	= (!Vel X);
;
;>||=================================~>/#[ Growing Aura Helper ]#\<~=================================||<
;
[StateDef 814];
Type        = U;
Anim 		= 820;
Ctrl 	    = 0;
SprPriority = 2;
;
[State 814: Visible Aura];
Type        = AfterImage;
Trigger1    = 1;
Time 		= 2;
Timegap     = 1;
FrameGap 	= 1;
Length 		= 2;
PalAdd 		= 0, 0, 0;
PalMul 		= .50, .50, .50;
PalContrast = Var(0), Var(0), Var(0);
Trans 		= Add;
;
[State 814: No Shadow];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoShadow;
Flag2       = InVisible;
;
[State 814: Random Pallette Contrast Variable];
Type        = VarRandom;
Trigger1    = 1;
v           = 0;
Range       = 9, 255;
;
[State 814: Always Face Opponent];
Type        = Turn;
Trigger1    = (P2BodyDist X < -25);
;
[State 814: Remove Growing Aura];
Type        = DestroySelf;
Trigger1    = (Time = 2);
;
;>||==================================~>/#[ Real Aura Helper ]#\<~==================================||<
;
[StateDef 815]; Thanks to FlowerGirl for the charge code this is based on
Type        = U;
Anim 		= 820;
Ctrl 	    = 0;
SprPriority = 2;
;
[State 815: Visible Aura];
Type        = AfterImage;
Trigger1    = 1;
Time 		= 5;
Timegap     = 1;
FrameGap 	= 1;
Length 		= 3;
PalAdd 		= 0, 0, 0;
PalMul 		= .50, .50, .50;
PalContrast = Var(0), Var(0), Var(0);
Trans 		= Add;
;
[State 815: No Shadow And Invisible];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoShadow;
Flag2       = InVisible;
;
[State 815: Bind Aura To Vegeta];
Type        = BindToParent;
Trigger1    = 1;
Pos         = 0, 20;
;
[State 815: "Electricity Charge"];
Type        = PlaySND;
Trigger1    = (Time >= 8);
Value       = 800, 2;
Channel     = 2;
FreqMul     = IfElse((Var(0) = [9, 82]), 1, IfElse((Var(0) = [83, 173]), .9, 1.1));
LowPriority = 2;
;
[State 815: Random Pallette Contrast Variable];
Type        = VarRandom;
Trigger1    = (Time = 1) ^^ !(GameTime % 9);
v           = 0;
Range       = 9, 255;
;
[State 815: Power Effect #01];
Type	    = Explod;
Trigger1	= !(GameTime % 14) && (!NumExplod(60));
Anim	    = F60;
Pos	        = 1;
ID          = 60;
;
[State 815: Power Effect #02];
Type	    = Explod;
Trigger1	= (!NumExplod(61)) && (Parent, NumExplod(810) = 0) && (Parent, NumExplod(811) = 0) && !(GameTime % 28);
Anim	    = F61;
Pos	        = 1;
ID          = 61;
;
[State 815: SND];
Type        = PlaySND;
Trigger1    = (Time > 75);
Value       = 800, 3;
Channel     = 3;
FreqMul     = IfElse((Var(0) = [9, 82]), 1, IfElse((Var(0) = [83, 173]), .9, 1.1));
LowPriority = 3;
;
[State 815: Always Face Opponent];
Type        = Turn;
Trigger1    = (P2BodyDist X < -25);
;
[State 815: Stop SND];
Type            = StopSnd;
Trigger1        = (Parent, StateNo != 163) && (Parent, StateNo != 800);
Channel         = 3;
IgnoreHitPause  = 1;
;
[State 815: Stop SND];
Type            = StopSnd;
Trigger1        = (Parent, StateNo != 163) && (Parent, StateNo != 800);
Channel         = 2;
IgnoreHitPause  = 1;
;
[State 815: Remove Aura If Player Stops Recharging];
Type            = DestroySelf;
Trigger1        = (Parent, StateNo != 163) && (Parent, StateNo != 800);
IgnoreHitPause  = 1;
;
;>||===================================~>/#[ Recharge Ki End ]#\<~===================================||<
;
[StateDef 820];
Type    = A;
VelSet  = 0, 0;
Ctrl 	= 0;
;
[State 820: Stop SND];
Type            = StopSnd;
Trigger1        = !Time;
Channel         = 1;
IgnoreHitPause  = 1;
;
[State 820: Flash Character];
Type        = PalFX;
TriggerAll  = (FVar(0) = [.7, 1.2]);
Trigger1    = (Pos Y = -20) && (!NumHelper(814)) && (!NumHelper(820));
Time        = 5;
Add         = 230, 230, 230;
SinAdd      = -220, -220, -220, 5;
Persistent  = 0;
;
[State 820: Growing Aura Helper];
Type        = Helper;
TriggerAll  = (FVar(0) = [.7, 1.2]);
Trigger1    = (Pos Y = -20) && (!NumHelper(814)) && (!NumHelper(820));
Trigger2    = (NumHelper(820));
Name        = "Growing Aura";
Pos         = 0, -27 + Var(7);
ID          = 820;
StateNo     = 814;
OwnPal      = 1;
Size.XScale = FVar(0);
Size.YScale = .2 + FVar(0);
;
[State 820: Growing Aura Variable];
Type        = VarAdd;
Trigger1    = (FVar(0) = [.7, 1.2]) && (NumHelper(820)) && (Pos Y = -20);
fvar(0)     = .1;
;
[State 820: Growing Aura Position Variable];
Type        = VarAdd;
Trigger1    = (Var(7) < 71) && (NumHelper(820)) && (Pos Y = -20);
var(7)      = 6;
;
[State 820: Earthquake];
Type        = EnvShake;
Trigger1    = (!NumHelper(814)) && (!NumHelper(820)) && (Anim != [0, 800]);
Time        = 10;
;
[State 820: No Shadows];
Type        = AssertSpecial;
Trigger1    = (!NumHelper(814)) && (!NumHelper(820)) && (Anim = 800) && (AnimElemTime(1) = [0, 4]);
Flag        = GlobalNoShadow;
;
[State 820: Start Recharge Ki Animation];
Type        = ChangeAnim;
Trigger1    = (!NumHelper(814)) && (!NumHelper(820)) && (Anim != [0, 800]);
Value       = 800;
;
[State 820: Flying Down Animation];
Type        = ChangeAnim;
Trigger1    = (!NumExplod(810)) && (!NumExplod(811)) && (Anim = 800) && (AnimElem = 1, >= 5);
Value       = 0;
;
[State 820: Fly Down];
Type        = VelSet;
Trigger1    = (!Anim) && (Pos Y <= -2);
Y           = 2;
;
[State 820: Fly Stop];
Type        = VelSet;
Trigger1    = (Pos Y >= 0);
Y           = 0;
;
[State 820: Set State Type];
Type        = StateTypeSet;
Trigger1    = (!Pos Y) && (StateType != S);
StateType   = S;
;
[State 820: End];
Type        = ChangeState;
Trigger1    = !Pos Y;
Value       = 0;
Ctrl        = 1;
;
;>||===================================~>/#[ Zanzouken Start ]#\<~===================================||<
;
[StateDef 850];
Type        = U;
Anim        = 850;
VelSet      = 0, 0;
Ctrl        = 0;
PowerAdd    = -250;
SprPriority = 0;
;
[State 850: Gnah];
Type        = StateTypeSet;
Trigger1    = (!Pos Y) && (StateType != S);
StateType   = S;
;
[State 850: Grmpf];
Type        = StateTypeSet;
Trigger1    = (Pos Y) && (StateType != A);
StateType   = A;
;
[State 850: SND];
Type 		= PlaySND;
Trigger1    = (AnimElem = 2);
Value 		= 850;
Channel     = 2;
FreqMul     = FVar(2);
;
[State 850: Effects];
Type        = BGPalFX;
Trigger1    = (AnimElemTime(1) = [11, 14]);
Time        = 1;
Add         = (200 + Time * 3), (200 + Time * 3), (200 + Time * 3);
;
[State 800: No Shadows];
Type        = AssertSpecial;
Trigger1    = (AnimElemTime(1) = [12, 15]);
Flag        = GlobalNoShadow;
;
[State 850: Shake];
Type        = EnvShake;
Trigger1    = (AnimElemTime(2) = 15);
Time        = 7;
Freq        = (FVar(1) / 20);
;
[State 850: Ground Explod];
Type        = Explod;
Trigger1    = (AnimElemTime(2) = 15) && (!Pos Y);
Anim        = F60;
ID          = 60;
OwnPal      = 1;
;
[State 850: Invisible];
Type        = AssertSpecial;
Trigger1    = (AnimElemTime(2) >= 15) || ((!Var(12)) && (PrevStateNo = [3000, 3010]));
Flag        = Invisible;
Flag2       = NoShadow;
;
[State 850: Zanzouken After Images];
Type        = AfterImage;
Trigger1    = (AnimElemTime(2) = 15);
Time        = 8;
TimeGap     = 4;
FrameGap    = 1;
Length      = 8;
PalAdd      = 0, 0, 0;
PalMul      = .5, .5, .5;
PalContrast = 110, 110, 110;
Trans       = Add;
;
[State 850: Zanzouken BU Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(855));
Name        = "Zanzouken BU";
ID          = 855;
StateNo     = 855;
;
[State 850: Zanzouken BD Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (Pos Y) && (!NumHelper(856));
Name        = "Zanzouken BD";
ID          = 856;
StateNo     = 855;
;
[State 850: Zanzouken B Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(857));
Name        = "Zanzouken B";
ID          = 857;
StateNo     = 857;
;
[State 850: Zanzouken FU Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(858));
Name        = "Zanzouken FU";
ID          = 858;
StateNo     = 855;
;
[State 850: Zanzouken FD Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (Pos Y) && (!NumHelper(859));
Name        = "Zanzouken FD";
ID          = 859;
StateNo     = 855;
;
[State 850: Zanzouken F Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(860));
Name        = "Zanzouken F";
ID          = 860;
StateNo     = 860;
;
[State 850: Zanzouken U Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (!NumHelper(861));
Name        = "Zanzouken U";
ID          = 861;
StateNo     = 855;
;
[State 850: Zanzouken D Helper];
Type        = Helper;
Trigger1    = (AnimElemTime(2) = 15) && (Pos Y) && (!NumHelper(862));
Name        = "Zanzouken D";
ID          = 862;
StateNo     = 855;
;
[State 850: Do Zanzouken];
Type        = ChangeState;
Trigger1    = (AnimElemTime(2) > 30) && (!NumHelper(855)) && (!NumHelper(856)) && (!NumHelper(857)) && (!NumHelper(858)) && (!NumHelper(859)) && (!NumHelper(860)) && (!NumHelper(861)) && (!NumHelper(862));
Trigger2    = IfElse((Facing = 1), (Command = "x"), (Command = "z")) && (NumHelper(855));
Trigger3    = IFElse((Facing = 1), (Command = "a"), (Command = "c")) && (NumHelper(856));
Trigger4    = (Command = "B") && (NumHelper(857));
Trigger5    = IfElse((Facing = 1), (Command = "z"), (Command = "x")) && (NumHelper(858));
Trigger6    = IfElse((Facing = 1), (Command = "c"), (Command = "a")) && (NumHelper(859));
Trigger7    = (Command = "F") && (NumHelper(860));
Trigger8    = (Command = "U") && (NumHelper(861));
Trigger9    = (Command = "D") && (NumHelper(862));
Value       = 865;
; 
;>||==================================~>/#[ Zanzouken Helper ]#\<~==================================||<
;
[StateDef 855];
Type    = A;
Anim    = 855 + (IsHelper(856)) + (IsHelper(857)) * 2 + (IsHelper(858)) * 3 + (IsHelper(859)) * 4 + (IsHelper(860)) * 5 + (IsHelper(861)) * 6 + (IsHelper(862)) * 6;
VelSet  = IfElse((IsHelper(855) ^^ IsHelper(856) ^^ IsHelper(857)), - (Parent, FVar(1) / 500 + 8), (Parent, FVar(1) / 500 + 8)), IfElse((IsHelper(856) ^^ IsHelper(859) ^^ IsHelper(862)), (Parent, FVar(1) / 500 + 8), - (Parent, FVar(1) / 500 + 8));
;
[State 855: Stop X];
Type        = VelSet;
Trigger1    = ((IsHelper(861)) ^^ (IsHelper(862))) && (Vel X);
X           = 0;
;
[State 855: Stop Y];
Type        = VelSet;
Trigger1    = ((IsHelper(857)) ^^ (IsHelper(860))) && (Vel Y);
Y           = 0;
;
[State 855: Invisible];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = Invisible;
Flag2       = NoShadow;
;
[State 855: Zanzouken After Images];
Type        = AfterImage;
Trigger1    = 1;
Time        = 60;
TimeGap     = 4;
FrameGap    = 1;
Length      = 60;
PalAdd      = 0, 0, 0;
PalMul      = .5, .5, .5;
PalContrast = 110, 110, 110;
Trans       = Add;
Persistent  = 0;
;
[State 855: Zanzouken Stop];
Type        = VelSet;
Trigger1    = ((IsHelper(856)) ^^ (IsHelper(859)) ^^ (IsHelper(862))) && (Pos Y >= 0) && (Vel Y);
X           = 0;
Y           = 0;
; 
[State 855: Destroy Self];
Type        = DestroySelf;
Trigger1    = (IsHelper(855)) && (ParentDist X >= 350) || (ParentDist Y >= 300) || IfElse((Facing = 1), (Parent, Command = "x"), (Parent, Command = "z"));
Trigger2    = (IsHelper(856)) && (ParentDist X >= 350) || (ParentDist Y <= -300) || IfElse((Facing = 1), (Parent, Command = "a"), (Parent, Command = "c")) || ((Pos Y >= 0) && (Parent, AnimElemTime(2) > 30));
Trigger3    = (IsHelper(857)) && (ParentDist X >= 350) || (Parent, Command = "B");
Trigger4    = (IsHelper(858)) && (ParentDist X <= -350) || (ParentDist Y >= 300) || IfElse((Facing = 1), (Parent, Command = "z"), (Parent, Command = "x"));
Trigger5    = (IsHelper(859)) && (ParentDist X <= -350) || (ParentDist Y <= -300) || IfElse((Facing = 1), (Parent, Command = "c"), (Command = "a")) || ((Pos Y >= 0) && (Parent, AnimElemTime(2) > 30));
Trigger6    = (IsHelper(860)) && (ParentDist X <= -350) || (Parent, Command = "F");
Trigger7    = (IsHelper(861)) && (ParentDist Y >= 300) || (Parent, Command = "U");
Trigger8    = (IsHelper(862)) && (ParentDist Y <= -300) || (Parent, Command = "D") || ((Pos Y >= 0) && (Parent, AnimElemTime(2) > 30));
Trigger9    = (Parent, StateNo != 182) && (Parent, StateNo != 850);
;
;>||=================================~>/#[ Zanzouken B Helper ]#\<~=================================||<
;
[StateDef 857];
Type    = U;
Anim    = 857;
VelSet  = - (Parent, FVar(1) / 500 + 8);
;
[State 857: Invisible];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = Invisible;
Flag2       = NoShadow;
;
[State 857: Zanzouken After Images];
Type        = AfterImage;
Trigger1    = 1;
Time        = 60;
TimeGap     = 4;
FrameGap    = 1;
Length      = 60;
PalAdd      = 0, 0, 0;
PalMul      = .5, .5, .5;
PalContrast = 110, 110, 110;
Trans       = Add;
Persistent  = 0;
;
[State 857: Destroy Self];
Type        = DestroySelf;
Trigger1    = (ParentDist X >= 350) || (Parent, Command = "B") || ((Parent, StateNo != 182) && (Parent, StateNo != 850));
;
;>||==================================~>/#[ Zanzouken F Helper ]#\<~==================================||<
;
[StateDef 860];
Type    = U;
Anim    = 860;
VelSet  = (Parent, FVar(1) / 500 + 8);
;
[State 860: Invisible];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = Invisible;
Flag2       = NoShadow;
;
[State 860: Zanzouken After Images];
Type        = AfterImage;
Trigger1    = 1;
Time        = 60;
TimeGap     = 4;
FrameGap    = 1;
Length      = 60;
PalAdd      = 0, 0, 0;
PalMul      = .5, .5, .5;
PalContrast = 110, 110, 110;
Trans       = Add;
Persistent  = 0;
;
[State 860: Destroy Self];
Type        = DestroySelf;
Trigger1    = (ParentDist X <= -350) || (Parent, Command = "F") || ((Parent, StateNo != 182) && (Parent, StateNo != 850));
;
;>||====================================~>/#[ Do Zanzouken ]#\<~====================================||<
;
[StateDef 865];
Type    = U;
Anim    = 865;
VelSet  = 0, 0;
;
[State 865: Gnah];
Type        = StateTypeSet;
Trigger1    = (!Pos Y) && (StateType != S);
StateType   = S;
;
[State 865: Grmpf];
Type        = StateTypeSet;
Trigger1    = (Pos Y) && (StateType != A);
StateType   = A;
;
[State 865];
Type        = ScreenBound;
Trigger1    = (AnimElemTime(1) = [0, 7]);
Value       = 0;
;
[State 865: Invisible];
Type        = AssertSpecial;
Trigger1    = (AnimElemTime(1) = [0, 7]);
Flag        = Invisible;
Flag2       = NoShadow;
;
[State 865: Do Zanzouken BU];
Type        = PosSet;
Trigger1    = IfElse((Facing = 1), (Command = "x"), (Command = "z")) && (NumHelper(855));
X           = (Helper(855), Pos X);
Y           = (Helper(855), Pos Y);
;
[State 865: Do Zanzouken BD];
Type        = PosSet;
Trigger1    = IFElse((Facing = 1), (Command = "a"), (Command = "c")) && (NumHelper(856));
X           = (Helper(856), Pos X);
Y           = (Helper(856), Pos Y);
;
[State 865: Do Zanzouken B];
Type        = PosSet;
Trigger1    = (Command = "B") && (NumHelper(857));
X           = (Helper(857), Pos X);
;
[State 865: Do Zanzouken FU];
Type        = PosSet;
Trigger1    = IfElse((Facing = 1), (Command = "z"), (Command = "x")) && (NumHelper(858));
X           = (Helper(858), Pos X);
Y           = (Helper(858), Pos Y);
;
[State 865: Do Zanzouken FD];
Type        = PosSet;
Trigger1    = IfElse((Facing = 1), (Command = "c"), (Command = "a")) && (NumHelper(859));
X           = (Helper(859), Pos X);
Y           = (Helper(859), Pos Y);
;
[State 865: Do Zanzouken F];
Type        = PosSet;
Trigger1    = (Command = "F") && (NumHelper(860));
X           = (Helper(860), Pos X);
;
[State 865: Do Zanzouken U];
Type        = PosSet;
Trigger1    = (Command = "U") && (NumHelper(861));
Y           = (Helper(861), Pos Y);
;
[State 865: Do Zanzouken D];
Type        = PosSet;
Trigger1    = (Command = "D") && (NumHelper(862));
Y           = (Helper(862), Pos Y);
;
[State 865: Super Jump Check];
Type        = VarSet;
Trigger1    = (Var(0) != 1);
var(0)      = 1;
;
[State 865: NONE SHALL PASS];
Type        = PosSet;
Trigger1    = (Pos Y > 0);
Y           = 0;
;
[State 865: Zanzouken After Images];
Type        = AfterImage;
Trigger1    = (AnimElem = 1);
Time        = 15;
TimeGap     = 4;
FrameGap    = 1;
Length      = 15;
PalAdd      = 0, 0, 0;
PalMul      = .5, .5, .5;
PalContrast = 110, 110, 110;
Trans       = Add;
;
[State 865: "Zanzouken"];
Type 		= PlaySND;
Trigger1    = !Time;
Value 		= 850;
Channel     = 2;
FreqMul     = FVar(2);
;
[State 865: Effects];
Type        = BGPalFX;
Trigger1    = (Time <= 3);
Time        = 1;
Add         = (200 + Time * 18), (200 + Time * 18), (200 + Time * 18);
;
[State 865: No Shadows];
Type        = AssertSpecial;
Trigger1    = (Time = [1, 4]);
Flag        = GlobalNoShadow;
;
[State 865: Shake];
Type        = EnvShake;
Trigger1    = !Time;
Time        = 7;
Freq        = (FVar(1) / 20);
;
[State 865: End];
Type        = ChangeState;
Trigger1    = (Var(12) = 3) && (AnimElem = 1, >= 10);
Value       = 3000;
;
[State 865: End];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 50 - (StateType = S) * 50;
Ctrl        = 1;
;
;>||=====================================~>/#[ Flip Throw ]#\<~=====================================||<
;
[StateDef 1000];
MoveType    = A;
Physics     = S;
Anim        = 1000;
Ctrl        = 0;
SprPriority = 2;
;
[State 1000: Position Add];
Type        = PosAdd;
Trigger1    = (AnimElem = 3);
X           = 22;
;
[State 1000: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 3);
Player      = -6, 54;
;
[State 1000: "Hmb"];
Type        = PlaySnd;
Trigger1    = (AnimElem = 4);
Value       = 105;
Volume      = 255;
Channel     = 0;
FreqMul     = FVar(2);
;
[State 1000: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 4);
Player      = -11, -2;
;
[State 1000: Position Add];
Type        = PosAdd;
Trigger1    = (AnimElem = 5);
X           = 17;
;
[State 1000: No Player Push];
Type        = PlayerPush;
Trigger1    = (AnimElemNo(0) = 5);
Value       = 0;
;
[State 1000: Hit Definition];
Type 		    = HitDef;
Trigger1 	    = (AnimElem = 5);
Attr 		    = A, ST;                Attributes: Air, Special Throw
HitFlag 	    = ADFM;
GuardFlag       = M;
Priority 	    = 3, Dodge;             Throw has low priority, must be miss or dodge type.
Damage          = 30;
GuardSound      = 6;
SparkNo 	    = -1;		            No spark
SparkXY         = 0, -33;
SprPriority	    = 1;		            Draw in front of P2
P1Facing 	    = 1;
P2Facing 	    = 1;		            Force P2 to face Bejita
P1StateNo 	    = 1010;	                On success, Bejita changes to state 1010
P2StateNo 	    = 1020;	                If hit, P2 changes to state 1020 in Bejita's .CNS
Fall 		    = 1; 		            Force P2 into falling down
Fall.Damage     = 40;
Fall.Kill       = 1;
Kill            = 0;
Fall.YVelocity  = 0;
ID              = 1000;
GetPower        = 30, 15;
;
[State 1000: Velocities];
Type        = VelSet;
Trigger1    = (AnimElem = 5);
X           = 1.5 + P2BodyDist X / 18;
Y           = - 10 + P2BodyDist Y / 18;
;
[State 1000: State Type Set];
Type        = StateTypeSet;
Trigger1    = (Pos Y < 0) && (StateType != A);
StateType   = A;
Physics     = A;
;
[State 1000: Break];
Type        = VelAdd;
Trigger1    = (AnimElemNo(0) = 5) && (Vel X >= 2.1);
X           = -.1;
;
[State 1000: Gravity];
Type        = VelAdd;
Trigger1    = (AnimElemNo(0) = 5) && (Vel Y <= 9.56);
Y           = .44;
;
[State 1000: Stop It, Bitch];
Type        = VelSet;
Trigger1    = (Pos Y = -10);
X           = 0;
Y           = 0;
;
[State 1000: You May Not Pass];
Type        = PosSet;
Trigger1    = (Pos Y >= -10) && (Vel Y > 0);
Y           = -10;
;
;>||====================================~>/#[ Flip Throwing ]#\<~====================================||<
;
[StateDef 1010];
Type        = A;
MoveType    = A;
Anim        = 1010;
SprPriority = 2;
;
[State 1010: Not Hit By Anything];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 1010: No Player Push];
Type        = PlayerPush;
Trigger1    = 1;
Value       = 0;
;
[State 1010: Break];
Type        = VelAdd;
Trigger1    = (AnimElemNo(0) = 1) && (Vel X >= 2.1);
X           = -.1;
;
[State 1010: Gravity];
Type        = VelAdd;
Trigger1    = (AnimElemNo(0) = 1);
Y           = .88;
;
[State 1010: Bind Target];
Type        = TargetBind;
Trigger1    = (AnimElemNo(0) = 1);
Pos         = 21, 28;
;
[State 1010: Break];
Type        = VelAdd;
Trigger1    = (AnimElemNo(0) = 2) && (Vel X >= 2.1);
X           = -.2
;
[State 1010: Gravity];
Type        = VelAdd;
Trigger1    = (AnimElemNo(0) = 2);
Y           = 1.66;
;
[State 1010: Bind Target];
Type        = TargetBind;
Trigger1    = (AnimElemNo(0) = 2) && (Pos Y < -10) && (Vel Y > 0);
Pos         = 5, 27;
;
[State 1010: Let Them Go!];
Type        = TargetDrop;
TriggerAll  = (NumTarget = 1);
Trigger1    = (Target, StateNo = 5110);
Persistent  = 1;
;
[State 1010: Stop It, Bitch];
Type        = VelSet;
Trigger1    = (Pos Y = -10);
X           = 0;
Y           = 0;
;
[State 1010: You May Not Pass];
Type        = PosSet;
Trigger1    = (Pos Y >= -10);
Y           = -10;
;
[State 1010: Hit Add];
Type        = HitAdd;
Trigger1    = (EnemyNear, StateNo = 5110) && (EnemyNear, Pos Y = 0);
Trigger2    = (Pos Y >= -10);
Value       = 1;
Persistent  = 0;
;
[State 1010: End];
Type        = ChangeState;
Trigger1    = (EnemyNear, StateNo = 5110) && (EnemyNear, Pos Y = 0);
Trigger2    = (Pos Y >= -10);
Value       = 40;
;
;>||=================================~>/#[ Flip Getting Thrown ]#\<~=================================||<
;
[StateDef 1020];
Type        = A;
MoveType    = H;
VelSet      = 0, 0;
Ctrl        = 0;
FaceP2      = 1;
SprPriority = 0;
;
[State 1020: Animation];
Type        = ChangeAnim2;
Trigger1    = (!Time) && (Anim != 1020);
Value       = 1020;
;
[State 1020: Not Hit By Anything];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 1020: No Player Push];
Type        = PlayerPush;
Trigger1    = 1;
Value       = 0;
;
[State 1020: Stop It, Bitch];
Type        = VelSet;
Trigger1    = (Pos Y >= 0) && (AnimElemNo(0) = 2);
X           = 0;
Y           = 0;
;
[State 1020: You May Not Pass];
Type        = PosSet;
Trigger1    = (Pos Y >= 0) && (AnimElemNo(0) = 2);
Y           = 0;
;
[State 1020: End];
Type        = SelfState;
Trigger1    = (!Pos Y) && (!Vel Y);
Value       = 5100;
;
;>||=====================================~>/#[ Air Dive Kick ]#\<~===================================||<
;
[StateDef 1050];
Type        = A;
MoveType    = A;
Anim        = 1050;
Ctrl        = 0;
Juggle      = 4;
FaceP2 		= Var(0);
SprPriority = 2;
;
[State 1050: No Player Push];
Type        = PlayerPush;
Trigger1    = 1;
Value       = 0;
;
[State 1050: Air Dive Kick Command Check];
Type        = VarSet;
Trigger1    = !Time;
var(12)     = (Command = "Hold b") + (Command = "Hold a") * 2;
;
[State 1050: Velocities];
Type        = VelSet;
Trigger1    = (AnimElem = 2);
X           = - Var(12) + 5;
Y           = - Var(12) + 5;
;
[State 1050: Gravity];
Type        = VelAdd;
Trigger1    = (AnimElemNo(0) = 2);
Y           = .44;
;
[State 1050: "Tha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 1050;
Volume      = 255;
Channel     = 0;
;
[State 1050: "Woh"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 210;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 1050: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = A, SA;
HitFlag             = ADFM;
GuardFlag           = AH;
AnimType            = Hard;
Priority            = 5;
Damage              = 40 - Var(12) * 10, 4 - Var(12);
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 2 - Var(12);
SparkXY             = 0, -25;
HitSound    		= 5, 2 - Var(12);
Ground.SlideTime    = 10;
Ground.HitTime      = 20 - Var(12) * 5;
Air.HitTime         = 20 - Var(12) * 5;
Ground.Velocity     = -3;
Air.Velocity        = -1.5, -2;
Down.Velocity       = -2;
Fall.YVelocity      = 0;
Air.Fall            = 1;
ID                  = 1050;
GetPower            = 40 - Var(12) * 10, 20 - Var(12) * 5;
;
[State 1050: Velocities];
Type        = VelSet;
Trigger1    = (Pos Y >= 0);
X           = (Vel X / 2); 
Y           = 0;
;
[State 1050: You May Not Pass];
Type        = PosSet;
Trigger1    = (Pos Y >= 0);
Y           = 0;
;
[State 1050: End];
Type        = ChangeState;
Trigger1    = (!Pos Y) && (AnimElemNo(0) = 2);
Value       = 52;
;
;>||================================~>/#[ Flying Fists Of Doom ]#\<~================================||<
;
[StateDef 1070];    Move name stolen from shinaku. Or something.
MoveType    = A;
Physics     = S;
Anim        = 1070;
Ctrl        = 0;
Juggle      = 4;
SprPriority = 2;
;
[State 1070: Command Check];
Type        = VarSet;
Trigger1    = !Time;
var(12)     = (Command = "5y") + (Command = "5x") * 2;
;
[State 1070: Velocity];
Type        = VelAdd;
Trigger1    = (AnimElem = 2);
X           = 4 - Var(12);
;
[State 1070: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = [2, 6]);
Value       = 18, 13;
;
[State 1070: SND];
Type        = PlaySND;
Trigger1    = (AnimElem = 2) ^^ (AnimElem = 4) ^^ (AnimElem = 6);
Value       = 1100;
Volume      = 255;
Channel     = 0;
;
[State 1070: Turbo Punch High];
Type                = HitDef;
Trigger1            = (AnimElem = 2) ^^ (AnimElem = 5) ^^ (AnimElem = 6);
Attr                = S, SA;
GuardFlag           = MA;
AnimType            = Hard;
Priority            = 5;
Damage              = 30 - Var(12) * 10, 3 - Var(12);
GuardSound          = 6;
PauseTime           = 5, 5;
Guard.PauseTime     = 5, 8;
SparkNo             = 3 - Var(12) - (AnimElem = 6);
SparkXY             = 0, -61 - (AnimElem = 5) * 5; 
HitSound    		= 5, 4 - Var(12) - (AnimElem = 6);
Air.Type            = Low;
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = -2.5 - Var(12) * .25;
Air.Velocity        = -1.5 - Var(12) * .25, -.725;
Air.Fall            = 1;
ID                  = 1070;
GetPower            = 30, 15;
;
[State 1070: Turbo Punch Low];
Type                = HitDef;
Trigger1            = (AnimElem = 3) ^^ (AnimElem = 4);
Attr                = S, SA;
GuardFlag           = MA;
AnimType            = Hard;
Priority            = 5;
Damage              = 30 - Var(12) * 10, 3 - Var(12);
GuardSound          = 6;
PauseTime           = 5, 5;
Guard.PauseTime     = 5, 8;
SparkNo             = 3 - Var(12) - (AnimElem = 3);
SparkXY             = 0, -39 - (AnimElem = 4) * 14;
HitSound    		= 5, 4 - Var(12) - (AnimElem = 3);
Ground.Type         = Low;
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = -2.5 - Var(12) * .25
Air.Velocity        = -1.5 - Var(12) * .25, -.725;
Air.Fall            = 1;
ID                  = 1071;
GetPower            = 30, 15;
;
[State 1070: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= ((Command = "5x") || (Command = "5y") || (Command = "5z")) * 1075;
Ctrl 		= 1 - ((Command = "5x") || (Command = "5y") || (Command = "5z"));
;
;>||===========================~>/#[ Continue Flying Fists Of Doom ]#\<~============================||<
;
[StateDef 1075];
MoveType    = U;
Physics     = U;
Juggle      = 4;
Anim        = 1075;
;
[State 1075: Command Check];
Type        = VarSet;
Trigger1    = !Time;
var(12)     = (Command = "5y") + (Command = "5x") * 2;
;
[State 1075: Velocity];
Type        = VelAdd;
Trigger1    = 1;
X           = .75 - Var(12) * .25;
;
[State 1075: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = [1, 5]);
Value       = 18, 13;
;
[State 1075: SND];
Type        = PlaySND;
Trigger1    = (AnimElem = 1) ^^ (AnimElem = 3) ^^ (AnimElem = 5);
Value       = 1100;
Volume      = 255;
Channel     = 0;
;
[State 1075: Turbo Punch High];
Type                = HitDef;
Trigger1            = (AnimElem = 1) ^^ (AnimElem = 4) ^^ (AnimElem = 5);
Attr                = S, SA;
GuardFlag           = MA;
AnimType            = Hard;
Priority            = 5;
Damage              = 25 - Var(12) * 10, 3 - Var(12);
GuardSound          = 6;
PauseTime           = 5, 5;
Guard.PauseTime     = 5, 8;
SparkNo             = 3 - Var(12) - (AnimElem = 1);
SparkXY             = 0, -61 - (AnimElem = 4) * 5; 
HitSound    		= 5, 4 - Var(12) - (AnimElem = 1);
Air.Type            = Low;
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = -2.5 - Var(12) * .25
Air.Velocity        = -1.5 - Var(12) * .25, -.725;
Air.Fall            = 1;
ID                  = 1072;
GetPower            = 25, 13;
;
[State 1075: Turbo Punch Low];
Type                = HitDef;
Trigger1            = (AnimElem = 2) ^^ (AnimElem = 3);
Attr                = S, SA;
GuardFlag           = MA;
AnimType            = Hard;
Priority            = 5;
Damage              = 25 - Var(12) * 10, 3 - Var(12);
GuardSound          = 6;
PauseTime           = 5, 5;
Guard.PauseTime     = 5, 8;
SparkNo             = 3 - Var(12) - (AnimElem = 3);
SparkXY             = 0, -39 - (AnimElem = 3) * 14;
HitSound    		= 5, 4 - Var(12) - (AnimElem = 3);
Ground.Type         = Low;
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = -2.5 - Var(12) * .25
Air.Velocity        = -1.5 - Var(12), -.725;
Air.Fall            = 1;
ID                  = 1073;
GetPower            = 25, 13;
;
[State 1075: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= ((Command = "5x") || (Command = "5y") || (Command = "5z")) * 1075;
Ctrl 		= 1 - ((Command = "5x") || (Command = "5y") || (Command = "5z"));
;
;>||======================================~>/#[ Flip Kick ]#\<~======================================||<
;
[StateDef 1080];
MoveType    = A;
Physics     = S;
Anim        = 1080;
Ctrl        = 0;
Juggle      = 4;
SprPriority = 2;
;
[State 1080: Command Check];
Type        = VarSet;
Trigger1    = !Time;
var(12)     = (Command = "Hold b") + (Command = "Hold a") * 2;
;
[State 1080: Position Add];
Type        = PosAdd;
Trigger1    = (AnimElem = 3);
X           = 22;
;
[State 1080: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 3);
Player      = -6, 54;
;
[State 1080: "Tha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 4);
Value       = 1050;
Volume      = 255;
Channel     = 0;
;
[State 1080: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 4);
Player      = -5, 4;
;
[State 1080: State Type Set];
Type        = StateTypeSet;
Trigger1    = (AnimElemNo(0) = [4, 5]) && (StateType != A);
StateType   = A;
;
[State 1080: Position Add];
Type        = PosAdd;
Trigger1    = (AnimElem = 5);
X           = 17;
;
[State 1080: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 5);
Player      = 13, 32;
;
[State 1080: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 6);
Player      = 20, 19;
;
[State 1080: Velocities];
Type        = VelSet;
Trigger1    = (AnimElem = 6);
X           = 25 - (Var(12) = 1) * 5 - (Var(12) = 2) * 12;
;
[State 1080: Break];
Type        = VelAdd;
Trigger1    = (AnimElemNo(0) = 6) && (Vel X >= .005);
X           = -.005;
;
[State 1080: Hit Definition];
Type                = HitDef;
Trigger1            = (AnimElem = 6);
Attr                = A, SA;
HitFlag             = ADFM;
GuardFlag           = MA;
AnimType            = Hard;
Priority            = 5;
Damage              = 80 - Var(12) * 10, 8 - Var(12);
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 3 - Var(12);
SparkXY             = 0, -39;
HitSound    		= 5, 3 - Var(12);
P1StateNo 	        = 1085;
Ground.Type         = Low;
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = -5 + Var(12), -2 - Var(12);
Air.Velocity        = -5.5 + Var(12), -2.5 - Var(12);
Fall                = 1;
Fall.YVelocity      = (Var(12) = 2) * (-4.5);
ID                  = 1080;
GetPower            = 40 - Var(12) * 10, 20 - Var(12) * 5;
EnvShake.Time       = (!Var(12) * 10);
;
[State 1080: End];
Type		= ChangeState;
Trigger1    = ((AnimElemNo(0) = 6) && (Vel X < 3.5)) || (MoveContact);
Value		= 1085;
;
;>||====================================~>/#[ Flip Kick End ]#\<~====================================||<
;
[StateDef 1085];
Anim        = 1085;
VelSet      = 0, 0;
SprPriority = 2;
;
[State 1085: You Cannot Be Thrown];
Type        = NotHitBy;
Trigger1    = (AnimElemNo(0) = [1, 2]);
Value       = , AT;
;
[State 1085: If The Force Is Life...];
Type        = VelSet;
Trigger1    = (AnimElem = 1);
X           = 0;
;
[State 1085: How Can There Be...];
Type        = PosAdd;
Trigger1    = (AnimElem = 1);
X           = -17;
;
[State 1085: Life Without The Force?];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 1);
Player      = -6, 4;
;
[State 1085: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 2);
Player      = -6, 54;
;
[State 1085: Make Dust];
Type        = MakeDust;
Trigger1    = (AnimElemNo(0) = 3);
Spacing     = 7;
;
[State 1085: Position Add];
Type        = PosAdd;
Trigger1    = (AnimElem = 3);
X           = -22;
;
[State 1085: Lalala];
Type        = VelSet;
Trigger1    = (AnimElem = 3);
X           = Const(Velocity.Run.Back.X) / 3;
;
[State 1085: "Land"];
Type 		= PlaySnd;
Trigger1    = (AnimElem = 3);
Value 		= 105, 1;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 1085: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl        = 1;
;
;>||====================================~>/#[ Anti-Air Kick ]#\<~====================================||<
;
[StateDef 1090];
MoveType	= A;
Anim		= 1090;
Ctrl		= 0;
Juggle	    = 4;
SprPriority = 2;     
;
[State 1090: Command Check];
Type        = VarSet;
Trigger1    = !Time;
var(12)     = (Command = "Hold b") + (Command = "Hold a") * 2;
;
[State 1090: Velocities];
Type        = VelSet;
Trigger1    = (AnimElem = 2);
X           = 2.5 - Var(12) + 1.5;
Y           = -6.5 + Var(12) - 1.5;
;
[State 1090: State Type Set];
Type        = StateTypeSet;
Trigger1    = (Pos Y < 0) && (StateType != A);
StateType   = A;
;
[State 1090: "Tha"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 1050;
Volume      = 255;
Channel     = 0;
;
[State 1090: "Wuuh"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 250;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 1090: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = A, SA;
GuardFlag           = MA;
AnimType            = DiagUp;
Priority            = 5;
Damage              = 40, 4;
HitSound            = 5, 2 - Var(12);
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 2 - Var(12);
SparkXY             = 0, -53;
Ground.Type         = Low;
Fall                = 1;
Fall.Recover        = 0;
Fall.YVelocity      = 0;
Kill                = 0;
Ground.SlideTime    = 13;
Ground.HitTime  	= 17;
Air.HitTime         = 17;
Ground.Velocity     = -2.5 + Var(12) - 1.5, -6.5 + Var(12) - 1.5;
Air.Velocity        = -2.5 + Var(12) - 1.5, -6.5 + Var(12) - 1.5;
Snap                = 30, 0;
P2StateNo           = 5000;
ID                  = 1090;
GetPower            = 40, 20;
;
[State 1090: No Push];
Type            = PlayerPush;
Trigger1        = MoveContact;
Value           = 0;
IgnoreHitPause  = 1;
;
[State 1090: Continue];
Type		= ChangeState;
Trigger1    = (!AnimTime) && (MoveHit);
Value		= 1095;
;
[State 1090: Velocities];
Type        = VelSet;
Trigger1    = (!AnimTime) && (!MoveHit);
X           = (Vel X / 2);
Y           = (Vel Y / 2);
;
[State 1090: End];
Type		= ChangeState;
Trigger1    = (!AnimTime) && (!MoveHit);
Value		= 50;
;
;>||===================================~>/#[ Anti-Air Punch ]#\<~===================================||<
;
[StateDef 1095];
Type 		= U;
MoveType 	= A;
Physics     = A;
VelSet      = (Vel X / 2), (Vel Y / 2);
Anim 		= 1095;
SprPriority = 2;
;
[State 1095: No Push];
Type            = PlayerPush;
Trigger1        = 1;
Value           = 0;
IgnoreHitPause  = 1;
;
[State 1095: Slow Motion];
Type        = Pause;
Trigger1    = (Var(12) != [1, 2]) && (Power >= 2500) && !(GameTime % 2) && (AnimElemNo(0) = [1, 2]) && (AnimElemTime(2) = [0, 5]);
Time        = 2;
MoveTime    = 2;
;
[State 1095: "Wuuh"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 250;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 1095: Hit Definition];
Type 		    	= HitDef;
Trigger1 	    	= (AnimElem = 2);
Attr 		    	= A, SA;
HitFlag             = ADFM;
Damage 	            = 40 - Var(12) * 10, 4 - Var(12);
GuardFlag	    	= HA;
PauseTime 	    	= 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo 	    	= 3 - Var(12);
SparkXY 	    	= 0, -5;
HitSound            = 5, 3 - Var(12);
GuardSound          = 6;
AnimType 	    	= Hard;
Priority            = 5;
Air.Type            = High;
Ground.SlideTime    = 13;
Ground.HitTime  	= 17;
Air.HitTime         = 17;
Ground.Velocity     = -6 + Var(12), 8.25 - Var(12);
Air.Velocity        = -3 + Var(12), 4.125 - Var(12);
Snap                = 15, - (EnemyNear, Const(Size.Head.Pos.Y));
Fall                = 1;
ID                  = 1095;
GetPower            = 40 - Var(12) * 10, 20 - Var(12) * 5;
EnvShake.Time       = (!Var(12) * 10);
;
[State 1095: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 50;
;
;>||======================================~>/#[ Ki Shot ]#\<~======================================||<
;
[StateDef 1100];
MoveType	= A;
Physics	    = S;
Anim		= 1100 + (Anim = 1100) * 5;
Ctrl		= 0;
PowerAdd    = -50;
SprPriority = 2;     
;
[State 1100: Flash Character];
Type            = PalFX;
Trigger1        = ((Anim = 1100) && (!Time)) ^^ ((Anim = 1105) && (AnimElem = 1));
Time            = 5;
Add             = 230, 230, 230;
SinAdd          = -220, -220, -220, 3;
IgnoreHitPause  = 1;
;
[State 1100: Ki Shot #01 Width];
Type            = Width;
Trigger1        = (Anim = 1100) && (AnimElemNo(0) = 2);
Player          = 20;
IgnoreHitPause  = 1;
;
[State 1100: Ki Shot #02 Width];
Type            = Width;
Trigger1        = (Anim = 1105) && (AnimElemNo(0) = 1);
Player          = 29;
IgnoreHitPause  = 1;
;
[State 1100: Sound];
Type            = PlaySND;
TriggerAll      = (Random <= 750);
Trigger1        = ((Anim = 1100) && (AnimElem = 2)) ^^ ((Anim = 1105) && (AnimElem = 1));
Value           = 1100;
Volume          = 255;
Channel         = 0;
IgnoreHitPause  = 1;
;
[State 1100: Charge In Hand];
Type            = Explod;
Trigger1        = ((Anim = 1100) && (AnimElem = 2, = 2)) ^^ ((Anim = 1105) && (AnimElem = 1, = 2));
Anim            = 1104;
ID              = 1101 - (Anim = 1100);
Pos             = 35 - (Anim = 1100) * 9, -61 + (Anim = 1100);
BinDTime        = -1;
ReMoveTime      = 5;
Scale           = IfElse((FVar(3) > 2), .9, IfElse((FVar(3) > 1), .75, .6)), IfElse((FVar(3) > 2), .9, IfElse((FVar(3) > 1), .75, .6));
SprPriority     = 3;
OwnPal          = 1;
ReMoveOnGetHit  = 1;
IgnoreHitPause  = 1;
;
[State 1100: Remove Hand Ball Thing #01];
Type            = RemoveExplod;
Trigger1        = (Anim = 1105) && (NumExplod(1100));
ID              = 1100;
IgnoreHitPause  = 1;
;
[State 1100: Sound];
Type            = PlaySND;
Trigger1        = ((Anim = 1100) && (AnimElem = 2, = 3)) ^^ ((Anim = 1105) && (AnimElem = 1, = 3));
Value           = 1100, 1;
Channel         = 1;
FreqMul         = FVar(2);
IgnoreHitPause  = 1;
;
[State 1100: Ki Shot #01];
Type            = Helper;
Trigger1        = ((Anim = 1100) && (AnimElem = 2, = 3));
Name            = "Ki Shot #01";
ID              = 1100;
Pos             = 56, -60;
StateNo         = 1109;
OwnPal          = 1;
Size.XScale     = IfElse((FVar(3) > 2), 1, IfElse((FVar(3) > 1), .9, .8));
Size.YScale     = IfElse((FVar(3) > 2), 1, IfElse((FVar(3) > 1), .9, .8));
IgnoreHitPause  = 1;
;
[State 1100: Ki Shot #02];
Type            = Helper;
Trigger1        = ((Anim = 1105) && (AnimElem = 1, = 3));
Name            = "Ki Shot #02";
ID              = 1112;
Pos             = 65, -61;
StateNo         = 1109;
OwnPal          = 1;
Size.XScale     = IfElse((FVar(3) > 2), 1, IfElse((FVar(3) > 1), .9, .8));
Size.YScale     = IfElse((FVar(3) > 2), 1, IfElse((FVar(3) > 1), .9, .8));
IgnoreHitPause  = 1;
;
[State 1100: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl 		= 1;
;
;>||=================================~>/#[ Proj Effects Helper ]#\<~=================================||<
;
[StateDef 1101]; Thanks to SMI for clarifying my doubts about root redirection
Type    = A;
Anim    = 1104;
Ctrl    = 0;
VelSet  = IfElse((IsHelper(1106) ^^ IsHelper(1107) ^^ IsHelper(1108)), - (Root, FVar(3)), (Root, FVar(3))), IfElse((IsHelper(1102) ^^ IsHelper(1105) ^^ IsHelper(1107)), (Root, FVar(3)), - (Root, FVar(3)));
;
[State 1101: Stop X];
Type        = VelSet;
Trigger1    = ((IsHelper(1104)) ^^ (IsHelper(1105))) && (Vel X);
X           = 0;
;
[State 1101: Stop Y];
Type        = VelSet;
Trigger1    = ((IsHelper(1103)) ^^ (IsHelper(1108))) && (Vel Y);
Y           = 0;
;
[State 1101: Visible Effects];
Type        = AfterImage;
Trigger1    = 1;
Time 		= 5;
Timegap     = 1;
FrameGap 	= 1;
Length 		= 5;
PalAdd 		= 0, 0, 0;
PalMul 		= .50, .50, .50;
PalContrast = Var(0), Var(0), Var(0);
Trans 		= Add;
;
[State 1101: No Shadow];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoShadow;
Flag2       = InVisible;
;
[State 1101: Random Pallette Contrast Variable];
Type        = VarRandom;
Trigger1    = (!Time) ^^ !(GameTime % 9);
v           = 0;
Range       = 9, 255;
;
[State 1101: Velocities];
Type        = VelAdd;
Trigger1    = (Time = [5, 40]);
X           = IfElse((((IsHelper(1106)) ^^ (IsHelper(1107)) ^^ (IsHelper(1108))) && (Random <= 650)), - (Root, FVar(3)), (Root, FVar(3)));
Y           = IfElse((((IsHelper(1102)) ^^ (IsHelper(1105)) ^^ (IsHelper(1107))) && (Random <= 650)), (Root, FVar(3)), - (Root, FVar(3)));
;
[State 1101: Remove Proj Effects];
Type        = DestroySelf;
Trigger1    = (Time = 40);
;
;>||===================================~>/#[ Ki Shot Helper ]#\<~===================================||<
;
[StateDef 1109];
Type        = A;
MoveType    = A;
Anim        = 1101;
VelSet      = (Parent, FVar(3));
PowerAdd    = -50;
Juggle      = 6;
SprPriority = 4;
;
[State 1109: Start Y Position];
Type        = VarSet;
Trigger1    = !Time;
fvar(0)     = Pos Y;
;
[State 1109: Effects];
Type        = AfterImage;
Trigger1    = !Time;
Time 		= 32;
Timegap     = 4;
FrameGap 	= 1;
Length 		= 10;
PalAdd 		= 0, 0, 0;
PalMul 		= .50, .50, .50;
PalContrast = 110, 110, 110;
Trans 		= Add;
;
[State 1109: Hit Over Ride];
Type        = HitOverRide;
Trigger1    = !Time;
Attr        = SCA, AP;
StateNo     = 1111;
Time        = -1;
;
[State 1109: Second Ki Shot Is Slower];  Thanks to FlowaGirl for reminding me of IsHelper
Type        = VelAdd;
Trigger1    = ((IsHelper(1112)) ^^ (IsHelper(3020))) && (!Time);
X           = IfElse((Vel X >= .3), -.3, - Vel X / 2);
;
[State 1109: Small Opponent Vels];
Type        = VelAdd;
Trigger1    = (Time = 1);
Y           = IfElse((EnemyNear, Const(Size.Head.Pos.Y) > -60), (EnemyNear, Const(Size.Head.Pos.Y) / (-12.5)), 0);
X           = (Parent, StateNo = [3000, 3010]) * (Parent, FVar(3)) * 2;
;
[State 1109: Super Mode Velocities];
Type        = VelAdd;
Trigger1    = (Time = [4, 32]) && ((IsHelper(3010)) ^^ (IsHelper(3020)));
Y           = IfElse((((Random <= 500) || (Pos Y <= FVar(0) -50)) && (Pos Y <= FVar(0) + 45)), (Parent, FVar(3) / 3), - (Parent, FVar(3) / 3));
;
[State 1109: Normal Velocities];
Type        = VelAdd;
Trigger1    = (Time = [4, 32]) && ((IsHelper(1100)) ^^ (IsHelper(1112))) && (EnemyNear, Const(Size.Head.Pos.Y) <= -60);
Y           = IfElse((((Random <= 500) || (Pos Y <= FVar(0) -25)) && (Pos Y <= FVar(0) + 22.5)), (Parent, FVar(3) / 3), - (Parent, FVar(3) / 3));
;
[State 1109: No Shadow];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoShadow;
;
[State 1109: No Push];
Type            = PlayerPush;
Trigger1        = 1;
Value           = 0;
IgnoreHitPause  = 1;
;
[State 1109: Hit Only By Projectiles];
Type        = HitBy;
Trigger1    = 1;
Value       = SCA, AP;
;
[State 1109: Acceleration];
Type        = VelAdd;
Trigger1    = 1;
X           = (Parent, FVar(3) / 10);
;
[State 1109: Ki Shot];
Type                = HitDef;
Trigger1            = 1;
Attr                = A, NP;
HitFlag             = ADFM;
GuardFlag           = AFM;
AnimType            = Back;
Damage              = IfElse((Parent, StateNo != [3000, 3010]), Ceil(Parent, FVar(1) / 40), Ceil(Parent, FVar(1) / 60)), IfElse((Parent, StateNo != [3000, 3010]), Ceil(Parent, FVar(1) / 400), Ceil(Parent, FVar(1) / 600));
SparkNo             = Ceil((Parent, FVar(3)) - 1);
SparkXY             = 0, 0;
PauseTime           = 0, 10;
Air.Type            = Low
Ground.SlideTime    = 12;
Ground.HitTime      = 16;
Air.HitTime         = 16;
Ground.Velocity     = IfElse((Parent, FVar(3) > 2), -6, IfElse((Parent, FVar(3) > 1), -4.5, -3));
Air.Velocity        = IfElse((Parent, FVar(3) > 2), -3, IfElse((Parent, FVar(3) > 1), -2.25, -1.5)), IfElse((Parent, FVar(3) > 2), -2.5, IfElse((Parent, FVar(3) > 1), -1.75, -1));
AirJuggle           = 8;
Fall                = (Parent, FVar(3) > 2);
Air.Fall            = 1;
Fall.YVelocity      = ((IsHelper(3010)) ^^ (IsHelper(3020))) * (Parent, FVar(3) > 1) * (-4.5);
ID                  = 220;
GetPower            = 0;
GivePower           = IfElse((Parent, StateNo != [3000, 3010]), Ceil(Parent, FVar(1) / 40), Ceil(Parent, FVar(1) / 60));
PalFX.Time          = 13;
PalFX.Mul           = 256, 156, 256;
PalFX.Add           = 24, 107, 231;
PalFX.SinAdd        = 12, 53, 165, 10;
EnvShake.Time       = 13;
EnvShake.Freq       = (Parent, FVar(1) / 50);
EnvShake.Ampl       = IfElse((Parent, FVar(3) > 2), -6, IFElse((Parent, FVar(3) > 1), -4, -2));
EnvShake.Phase      = (Parent, FVar(1) / 50);
;
[State 1109: Ki Shot Timer];
Type        = ParentVarSet;
TriggerAll  = (MoveHit);
Trigger1    = (IsHelper(1100)) ^^ (IsHelper(1112));
var(10)     = 15 - (IsHelper(1100) * 30);
;
[State 1109: Contact Detection];
Type        = VarSet;
Trigger1    = (Var(0) =! 1) && (MoveContact);
var(0)      = 1;
;
[State 1109: Hit];
Type        = ChangeState;
Trigger1    = (MoveContact) || (Pos Y >= 0);
Trigger2    = ((IsHelper(1100)) ^^ (IsHelper(1112))) && (Time = 32);
Trigger3    = ((IsHelper(3010)) ^^ (IsHelper(3020))) && (Time = 42);
Value       = 1111;
;
;>||============================~>/#[ Ki Shot #01/02 Explod Helper ]#\<~============================||<
;
[StateDef 1111];
Type        = A;
Anim        = 1102;
VelSet      = 0, 0;
SprPriority = 4;
;
[State 1111: SND];
Type        = PlaySND;
Trigger1    = !Time;
Value       = 1100, 2;
Channel     = 2;
FreqMul     = (Parent, FVar(2));
;
[State 1111: No Shadow];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoShadow;
;
[State 1111: Effects];
Type        = BGPalFX;
Trigger1    = (Var(0)) && (Time <= 3);
Time        = 1;
Add         = (200 + Time * 18), (200 + Time * 18), (200 + Time * 18);
;
[State 1111: No Shadows];
Type        = AssertSpecial;
Trigger1    = (Var(0)) && (Time = [1, 4]);
Flag        = GlobalNoShadow;
;
[State 1111: Proj Effects FU];
Type        = Helper;
Trigger1    = !Time;
Name        = "Proj Effects FU"
ID          = 1101;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
Size.YScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
;
[State 1111: Proj Effects FD];
Type        = Helper;
Trigger1    = !Time;
Name        = "Proj Effects FD"
ID          = 1102;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
Size.YScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
;
[State 1111: Proj Effects F];
Type        = Helper;
Trigger1    = !Time;
Name        = "Proj Effects F"
ID          = 1103;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
Size.YScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
;
[State 1111: Proj Effects U];
Type        = Helper;
Trigger1    = !Time;
Name        = "Proj Effects U"
ID          = 1104;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
Size.YScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
;
[State 1111: Proj Effects D];
Type        = Helper;
Trigger1    = !Time;
Name        = "Proj Effects D"
ID          = 1105;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
Size.YScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
;
[State 1111: Proj Effects BU];
Type        = Helper;
Trigger1    = !Time;
Name        = "Proj Effects BU"
ID          = 1106;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
Size.YScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
;
[State 1111: Proj Effects BD];
Type        = Helper;
Trigger1    = !Time;
Name        = "Proj Effects BD"
ID          = 1107;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
Size.YScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
;
[State 1111: Proj Effects B];
Type        = Helper;
Trigger1    = !Time;
Name        = "Proj Effects B"
ID          = 1108;
StateNo     = 1101;
OwnPal      = 1;
Size.XScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
Size.YScale = IfElse(((Parent, FVar(3) / 4) <= .6), (Parent, FVar(3) / 4), .6);
;
[State 1111: End];
Type        = DestroySelf;
Trigger1    = !AnimTime;
;
;>||==================================~>/#[ Start Ellbow Dash ]#\<~==================================||<
;
[StateDef 1999];
Anim        = 1999;
Ctrl        = 0;
SprPriority = 2;
;
[State 1099: Command Check];
Type        = VarSet;
Trigger1    = !Time;
var(12)     = (Command = "Hold x");
;
[State 1999: Start Walk Forwards];
Type        = VelSet;
Trigger1    = (AnimElem = 4);
X           = 2.5 + 1.5;
;
[State 1999: Make Dust];
Type        = MakeDust;
Trigger1    = (AnimElemTime(4) = [0, 5]);
Pos         = -5;
Spacing     = 7;
;
[State 1999: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 4);
Value       = 22, -1;
;
[State 1999: End];
Type		= ChangeState;
Trigger1    = (!AnimTime) || (P2BodyDist X <= 22);
Value		= 2000;
;
;>||=====================================~>/#[ Ellbow Dash ]#\<~=====================================||<
;
[StateDef 2000];
MoveType	= A;
Physics	    = S;
Anim		= 2000;
Ctrl		= 0;
Juggle	    = 4;
SprPriority = 2;     
;
[State 2000: Walk Forwards];
Type        = VelSet;
Trigger1    = (!Time);
X           = 4 - Var(12) * 2;
;
[State 2000: "Tha"];
Type        = PlaySND;
Trigger1    = !Time;
Value       = 1050;
Volume      = 255;
Channel     = 0;
;
[State 2000: "Hui"];
Type        = PlaySND;
Trigger1    = !Time;
Value       = 200;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 2000: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 1);
Value       = 21;
;
[State 2000: Ellbow];
Type                = HitDef;
Trigger1            = (AnimElem = 1);
Attr                = S, SA;
GuardFlag           = MA;
AnimType            = Med;
Priority            = 5;
Damage              = 40 - Var(12) * 10, 4 - Var(12);
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 2 -  Var(12);
SparkXY             = 0, -53;
HitSound            = 5, 2 - Var(12);
Ground.Type         = Low;
Ground.SlideTime    = 9;
Ground.HitTime      = 18;
Air.HitTime         = 18;
Ground.Velocity     = -6 + Var(12) * 2;
Air.Velocity        = -3 + Var(12) * 2, -2.5;
Fall.YVelocity      = 0;
Air.Fall            = 1;
Kill                = 0;
ID                  = 2000;
GetPower            = 40 - Var(12) * 10, 20 - Var(12) * 5;
;
[State 2000: End];
Type		= ChangeState;
Trigger1    = (!AnimTime) || (MoveContact);
Value		= (MoveContact) * 2005;
Ctrl 		= !MoveContact;
;
;>||======================================~>/#[ Kick ]#\<~===========================================||<
;
[StateDef 2005];
MoveType	= A;
Physics	    = S;
Anim		= 2005;
SprPriority = 2;     
;
[State 2005: Velocity];
Type        = VelSet;
Trigger1    = !Time;
X           = 8 - Var(12) * 2;
;
[State 2005: Width];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 2);
Value       = 10;
;
[State 2005: "Htschu"];
Type        = PlaySND;
Trigger1    = (AnimElem = 2);
Value       = 240;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 2005: Kick];
Type                = HitDef;
Trigger1            = (AnimElem = 2);
Attr                = S, SA;
GuardFlag           = MA;
AnimType            = DiagUp;
Priority            = 5;
Damage              = 40 - Var(12) * 10, 4 - Var(12);
GuardSound          = 6;
PauseTime           = 10, 10;
Guard.PauseTime     = 10, 13;
SparkNo             = 3 - Var(12);
SparkXY             = 0, -67;
HitSound            = 5, 3 - Var(12);
Air.Type            = Low;
Ground.SlideTime    = 24;
Ground.HitTime      = 24;
Air.HitTime         = 24;
Ground.Velocity     = -8 + Var(12) * 5, -1 + Var(12) * (-4);
Air.Velocity        = -4 + Var(12) * 2, -3.5 - Var(12);
Fall.YVelocity      = Var(12) * (-4.5);
Fall                = 1;
ID                  = 2005;
GetPower            = 40 - Var(12) * 10, 20 - Var(12) * 5;
EnvShake.Time       = (!Var(12) * 10);
;
[State 2005: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 0;
Ctrl 		= 1;
;
;>||==============================~>/#[ Start Ki Shot Frenzy Mode ]#\<~==============================||<
;
[StateDef 3000];
Type        = U;
MoveType	= A;
Physics     = S;
Anim        = 3000;
Ctrl        = 0;
PowerAdd    = 0;
FaceP2      = 1;
SprPriority = 2;
;
[State 3000];
Type        = VelSet;
Trigger1    = (StateType = A) && (Vel Y);
Y           = 0;
;
[State 3000: Super Pause];
Type        = SuperPause;
Trigger1    = (!Time) && (PrevStateNo != 865) && (PrevStateNo != 3010);
Time        = 30;
Anim        = 100 + (FVar(3) > 1) + (FVar(3) > 2);
Sound       = 20;
Pos         = 16, -53;
Darken      = 1;
UnHittAble  = 1;
;
[State 3000: Super Pause];
Type        = SuperPause;
Trigger1    = (!Time)&& (PrevStateNo != 865) && (PrevStateNo != 3010);
Time        = 30;
Anim        = 100 + (FVar(3) > 1) + (FVar(3) > 2);
Sound       = 20;
Pos         = -11, -55;
Darken      = 1;
UnHittAble  = 1;
;
[State 3000: Command Check];
Type        = VarSet;
Trigger1    = (Var(12) != 3) && (!Time);
var(12)     = 3;
;
[State 3000: Block Distance];
Type        = AttackDist;
Trigger1    = 1;
Value       = 0;
;
[State 3000: Slow Motion];
Type        = Pause;
Trigger1    = (Power >= 2500) && !(GameTime % 2) && (PrevStateNo != [3000, 3010]);
Time        = 2;
MoveTime    = 2;
;
[State 3000: Effects];
Type            = Null; Helper;
Trigger1        = (PrevStateNo != 3010) && (NumHelper(9000) < (FVar(3) / 1)) && !(GameTime % 60) && (Time = [0, 180]);
Name            = "Effects Right"
ID              = 9000;
StateNo         = 9000;
OwnPal          = 1;
Size.XScale     = IfElse(((FVar(3) / 4) <= .6), (FVar(3) / 4), .6);
Size.YScale     = IfElse(((FVar(3) / 4) <= .6), (FVar(3) / 4), .6);
IgnoreHitPause  = 1;
;
[State 3000: Test Effects];
Type            = Null; Helper;
Trigger1        = (PrevStateNo != 3010) && (NumHelper(9010) < FVar(3)) && !(GameTime % 60) && (Time = [0, 180]);
Name            = "Effects Left"
ID              = 9010;
StateNo         = 9000;
OwnPal          = 1;
Size.XScale     = IfElse(((FVar(3) / 4) <= .6), (FVar(3) / 4), .6);
Size.YScale     = IfElse(((FVar(3) / 4) <= .6), (FVar(3) / 4), .6);
IgnoreHitPause  = 1;
;
[State 3000: Charge In Hand Right];
Type            = Explod;
TriggerAll      = (!NumExplod(3000));
Trigger1        = !Time;
Trigger2        = (PrevStateNo = 3010);
Anim            = 1104;
ID              = 3000;
Pos             = 16, -53;
ReMoveTime      = -1;
Scale           = IfElse((FVar(3) >= 2), .9, IfElse((FVar(3) >= 1), .75, .6)), IfElse((FVar(3) >= 2), .9, IfElse((FVar(3) >= 1), .75, .6));
BindTime        = -1;
SprPriority     = 3;
OwnPal          = 1;
ReMoveOnGetHit  = 1;
IgnoreHitPause  = 1;
MoveTime        = 9999;
SuperMoveTime   = 9999;
;
[State 3000: Charge In Hand Left];
Type            = Explod;
TriggerAll      = (!NumExplod(3001));
Trigger1        = !Time;
Trigger2        = (PrevStateNo = 3010);
Anim            = 1104;
ID              = 3001;
Pos             = -11, -53;
ReMoveTime      = -1;
Scale           = IfElse((FVar(3) >= 2), .9, IfElse((FVar(3) >= 1), .75, .6)), IfElse((FVar(3) >= 2), .9, IfElse((FVar(3) >= 1), .75, .6));
BindTime        = -1;
SprPriority     = 3;
OwnPal          = 1;
ReMoveOnGetHit  = 1;
IgnoreHitPause  = 1;
MoveTime        = 9999;
SuperMoveTime   = 9999;
;
[State 3000: Command Check];
Type        = VarSet;
Trigger1    = (Var(12) = 3) && ((Power < 150) || (RoundState != 2) || (Command = "s"));
var(12)     = 0;
;
[State 3000: End];
Type		= ChangeState;
Trigger1    = (Power < 150) || (RoundState != 2) || (Command = "s");
Value		= 850;(StateType = A) * 50;
;Ctrl        = (StateType != A);
;
;>||========================================~>/#[ Shoot ]#\<~========================================||<
;
[StateDef 3010];
Type        = U;
MoveType	= A;
Physics	    = S;
Anim		= 3010 + (Anim = 3010) * 10;
Ctrl		= 0;
PowerAdd    = -100;
SprPriority = 2;     
;
[State 3010: Flash Character];
Type        = PalFX;
Trigger1    = ((Anim = 3010) ^^ (Anim = 3020)) && (!Time);
Time        = 5;
Add         = 230, 230, 230;
SinAdd      = -220, -220, -220, 3;
;
[State 3010: Frenzy Shot #01 Width];
Type            = Width;
Trigger1        = (Anim = 3010) && (AnimElemNo(0) = 1);
Player          = 20;
IgnoreHitPause  = 1;
;
[State 3010: Frenzy Shot #02 Width];
Type            = Width;
Trigger1        = (Anim = 3020) && (AnimElemNo(0) = 1);
Player          = 29;
IgnoreHitPause  = 1;
;
[State 3010: "Ha"];
Type        = PlaySND;
TriggerAll  = (Random <= 500);
Trigger1    = ((Anim = 3010) ^^ (Anim = 3020)) && (AnimElem = 1);
Value       = 1100;
Volume      = 255;
Channel     = 0;
;
[State 3010: Charge In Hand];
Type            = Explod;
Trigger1        = ((Anim = 3010) ^^ (Anim = 3020)) && (AnimElem = 1, = 2);
Anim            = 1104;
ID              = 3020 - (Anim = 3010) * 10;
Pos             = 35 - (Anim = 3010)* 9, -61 + (Anim = 3010);
ReMoveTime      = 5;
Scale           = IfElse((FVar(3) > 2), .9, IfElse((FVar(3) > 1), .75, .6)), IfElse((FVar(3) > 2), .9, IfElse((FVar(3) > 1), .75, .6));
SprPriority     = 3;
OwnPal          = 1;
ReMoveOnGetHit  = 1;
IgnoreHitPause  = 1;
;
[State 3010: Remove Hand Ball Thing #01];
Type            = RemoveExplod;
Trigger1        = (Anim = 3020) && (NumExplod(3010));
ID              = 3010;
IgnoreHitPause  = 1;
;
[State 3010: "Ki Shot"];
Type        = PlaySND;
Trigger1    = ((Anim = 3010) ^^ (Anim = 3020)) && (AnimElem = 1, = 3);
Value       = 1100, 1;
Channel     = 1;
FreqMul     = FVar(2);
;
[State 3010: Frenzy Shot #01];
Type        = Helper;
Trigger1    = (Anim = 3010) && (AnimElem = 1, = 3);
Name        = "Frenzy Shot #01";
ID          = 3010;
Pos         = 56, -60;
StateNo     = 1109;
OwnPal      = 1;
Size.XScale = IfElse((FVar(3) > 2), 1, IfElse((FVar(3) > 1), .9, .8));
Size.YScale = IfElse((FVar(3) > 2), 1, IfElse((FVar(3) > 1), .9, .8));
;
[State 3010: Frenzy Shot #02];
Type        = Helper;
Trigger1    = (Anim = 3020) && (AnimElem = 1, = 3);
Name        = "Frenzy Shot #02";
ID          = 3020;
Pos         = 65, -61;
StateNo     = 1109;
OwnPal      = 1;
Size.XScale = IfElse((FVar(3) > 2), 1, IfElse((FVar(3) > 1), .9, .8));
Size.YScale = IfElse((FVar(3) > 2), 1, IfElse((FVar(3) > 1), .9, .8));
;
[State 3010: End];
Type		= ChangeState;
Trigger1    = !AnimTime;
Value		= 3000;
;
;>||===================================~>/#[ Rotating Effect ]#\<~===================================||<
;
[StateDef 9000]
Type        = A;
Anim        = 224;
Ctrl        = 0;
SprPriority = 3;
;
[State 9000: Visible Effects];
Type        = Null; AfterImage;
Trigger1    = 1;
Time 		= 5;
Timegap     = 1;
FrameGap 	= 1;
Length 		= 5;
PalAdd 		= 0, 0, 0;
PalMul 		= .50, .50, .50;
PalContrast = Var(0), Var(0), Var(0);
Trans 		= Add;
;
[State 9000: Set Variable];
Type        = VarSet;
Trigger1    = !Time;
var(0)      = 50;
;
[State 9000: No Shadow];
Type        = AssertSpecial;
Trigger1    = 1;
Flag        = NoShadow;
;Flag2       = InVisible;
;
[State 9000: Random Pallette Contrast Variable];
Type        = Null;VarRandom;
Trigger1    = (!Time) ^^ !(GameTime % 5);
v           = 0;
Range       = 9, 255;
;
[State 9000: Check Start];
Type            = VarSet;
Trigger1        = (Var(1) != 0) && (Var(0) >= 50);
var(1)          = 0;
IgnoreHitPause  = 1;
;
[State -2: Check Reached];
Type            = VarSet;
Trigger1        = (Var(1) != 1) && (Var(0) <= 0) && (Alive);
var(1)          = 1;
IgnoreHitPause  = 1;
;
[State 9000: Random Pallette Contrast Variable];
Type        = VarAdd;
Trigger1    = (!Time) ^^ !(GameTime % 9);
var(0)      = IfElse((!Var(1)), -1, 1);
;
;1.) This VAR indicates the helper's location relative to its parent. (angle)
[State 9000: Var Set];
Type        = VarSet;
Trigger1    = !Time;    Adjust as you wish.
fvar(0)     = 0;
;
;0 radians in case you are using multiple helpers (eg, Spiral's knives) you can use the following expresion:
;value = IfElse(p1name="helper1",0,pi)
;Where "helper1" is the name of the current active helper.

;You can "nest" more IfElse expresions, for more helpers. Obviously, giving every 
;helper a diferent name on the helper calling state.

;2.) This VAR is the rotation speed (So, you will be able to accelerate, or decelerate
;the rotation ratio.)
[State 9000: Var Set];
Type        = VarSet;
Trigger1    = !Time;    Adjust as you wish.
fvar(1)     := (Var(0) / 100) + 1;  This makes the rotation, accelerate even more as time passes.
;
;-Or, as used on Yoshi...
;value = IfElse((Time/180)%2,-.2,.2) ;This makes the direction of the rotation
;change from clockwise to counterclockwise every 3 seconds.
[State 9000: Var Set];  This is the Y stretch of the move, in case you don't want a perfect circle (Oval shaped effect).
Type        = VarSet;
Trigger1    = 1;
fvar(2)     = Var(0);20;1;    Can be .5, .2, or even an expresion.
;
[State 9000: Var Set];  This is the X stretch of the move.
Type        = VarSet;
Trigger1    = 1;
fvar(3)     = Var(0);20;1;
;
;What's the use of vars here? Well, you can make the stretch change over time,
;or when certain conditions are met. You are not going to change their value,
;then better use constant numerical values. (eg. 3, .5, etc..)

;4.) Pos setting routine, and drawing:
[State 9000: Var Add];  This adds the angle to the current one
Type        = VarAdd;
Trigger1    = 1;   Adjust as you wish.
fvar(0)     = FVar(1);
;
[State 9000: Bind To Parent]; This sets the helper's position, relative to its parent.
Type        = BindToParent;
Trigger1    = IsHelper(9000);
Facing      = 1;
Pos         = Cos(FVar(0)) * FVar(3) + 16, Sin(FVar(0)) * FVar(2) - 53;
;
[State 9000: Bind To Parent]; This sets the helper's position, relative to its parent.
Type        = BindToParent;
Trigger1    = IsHelper(9010);
Facing      = 1;
Pos         = Cos(FVar(0)) * FVar(3) - 11, Sin(FVar(0)) * FVar(2) - 55;
;
[State 9000: Angle Set];    Just in case you want the helper to spin itself as well:
Type        = Null; AngleSet;
Trigger1    = 1;
Value       = FVar(0) * 2 * Pi; Angle must be given on degrees.
;
[State 9000: Angle Draw];
Type        = AngleDraw;
Trigger1    = 1;
;
[State 9000: Self-Destruct];    Use this to release the helper, in case you need to.
Type        = DestroySelf;
Trigger1    = (Time > 1) && (!Var(0));
;
;>||==================================~>/#[ Hit Ground Shake ]#\<~==================================||<
;
[StateDef 5000];
MoveType    = H;
VelSet      = 0, 0;
;
[State 5000: Animation For Hit Light To Hit Hard];
Type        = ChangeAnim;
Trigger1    = (!Time) && (GetHitVar(AnimType) != [3, 5]);
Value       = IfElse((GetHitVar(GroundType) = 1), 5000, 5010) + (GetHitVar(AnimType));
;
[State 5000: Animation For Hit Back];
Type        = ChangeAnim;
Trigger1    = (!Time) && (GetHitVar(AnimType) = [3, 5]);
Value       = 5030;
;
[State 5000: Animation For Hit Up Hit Diagonal Up];
Type        = ChangeAnim;
Trigger1    = (!Time) &&(GetHitVar(AnimType) = [4, 5]) && (SelfAnimExist(5047 + (GetHitVar(AnimType))));
Value       = 5047 + (GetHitVar(AnimType));                                                               5051 - 4 + type
;
[State 5000: Freeze Animation];
Type        = ChangeAnim;
Trigger1    = (Time > 0);
Value       = Anim;
;
[State 5000: State Type Gets Set Aerial If Getting Hit Up];
Type        = StateTypeSet;
Trigger1    = (!Time) && ((GetHitVar(YVel) != 0) || (GetHitVar(Fall)));
Trigger2    = (Pos Y != 0);
StateType   = A;
;
[State 5000: Change State];
Type        = ChangeState;
Trigger1    = (HitShakeOver) && (!GetHitVar(YVel)) && (!GetHitVar(Fall));
Value       = 5001;
;
[State 5000: Change State];
Type        = ChangeState;
Trigger1    = HitShakeOver;
Value       = 5030;
;
[State 5000: Force FeedBack Light];
Type        = ForceFeedBack;
Trigger1    = (Anim = 5000) || (Anim = 5010);
Persistent  = 0;
Time        = 6;
WaveForm    = Square;
;
[State 5000: Force FeedBack Medium];
Type        = ForceFeedBack;
Trigger1    = (Anim = 5001) || (Anim = 5011);
Persistent  = 0;
Time        = 8;
WaveForm    = SineSquare;
Ampl        = 110, -1, -.3;
;
[State 5000: Force FeedBack Hard];
Type        = ForceFeedBack;
Trigger1    = (Anim = 5012) || (Anim = 5002) || (Anim = 5030);
Persistent  = 0;
Time        = 15;
WaveForm    = SineSquare;
Ampl        = 140;
;
;>||==================================~>/#[ Hit Ground Slide ]#\<~==================================||<
;
[StateDef 5001];
MoveType    = H;
Physics     = S;
;
[State 5001: Hit Velocity Set];
Type        = HitVelSet;
Trigger1    = !Time;
X           = 1;
;
[State 5001: Change Animation];
Type        = ChangeAnim;
Trigger1    = !AnimTime;
Value       = 5005 + (GetHitVar(AnimType)) + (GetHitVar(GroundType) = 2) * 10;
;
[State 5001: Stop Sliding Back];
Type        = VelMul;
Trigger1    = (Time >= (GetHitVar(SlideTime)));
X           = .6;
;
[State 5001: Velocity Set];
Type        = VelSet;
Trigger1    = HitOver;
X           = 0;
;
[State 5001: Defence Mul Set];
Type        = DefenceMulSet;
Trigger1    = HitOver;
Value       = 1;
;
[State 5001: End];
Type        = ChangeState;
Trigger1    = HitOver;
Value       = 0;
Ctrl        = 1;
;
;>||==================================~>/#[ Hit Crouch Shake ]#\<~==================================||<
;
[StateDef 5010];
Type        = C;
MoveType    = H;
VelSet      = 0, 0;
;
[State 5010: Animation For Hit Light To Hit Hard];
Type        = ChangeAnim;
Trigger1    = (!Time) && (GetHitVar(AnimType) != [3, 5]);
Value       = 5020 + (GetHitVar(AnimType));
;
[State 5010: Animation For Hit Back];
Type        = ChangeAnim;
Trigger1    = (!Time) && (GetHitVar(AnimType) = [3, 5]);
Value       = 5030;
;
[State 5010: Animation Fpr Hit Up Hit Diagonal Up];
Type        = ChangeAnim;
Trigger1    = (!Time) && (GetHitVar(AnimType) = [4, 5]) && (SelfAnimExist(5047 + (GetHitVar(AnimType))));
Value       = 5047 + (GetHitVar(AnimType));
;
[State 5010: Freeze Animation];
Type        = ChangeAnim;
Trigger1    = (Time > 0);
Value       = Anim;
;
[State 5010: State Type Gets Set To Aerial If Getting Hit Up];
Type        = StateTypeSet;
TriggerAll  = !Time;
Trigger1    = (GetHitVar(YVel) != 0) || (GetHitVar(Fall));
Trigger2    = (Pos Y != 0);
StateType   = A;
;
[State 5010: Change State To Hit Crouch Slide];
Type        = ChangeState;
Trigger1    = (HitShakeOver) && (!GetHitVar(YVel)) && (!GetHitVar(Fall));
Value       = 5011;
;
[State 5010: Change State];
Type        = ChangeState;
Trigger1    = HitShakeOver;
Value       = 5030;
;
[State 5010: Force FeedBack Light];
Type        = ForceFeedBack;
Trigger1    = (Anim = 5020);
Persistent  = 0;
Time        = 6;
WaveForm    = Square;
;
[State 5010: Force FeedBack Medium];
Type        = ForceFeedBack;
Trigger1    = (Anim = 5021);
Persistent  = 0;
Time        = 8;
WaveForm    = SineSquare;
Ampl        = 110, -1, -.3;
;
[State 5010: Force FeedBack Hard];
Type        = ForceFeedBack;
Trigger1    = (Anim = 5022);
Persistent  = 0;
Time        = 15;
WaveForm    = SineSquare;
Ampl        = 140;
;
;>||==================================~>/#[ Hit Crouch Slide ]#\<~==================================||<
;
[StateDef 5011];
Type        = C;
MoveType    = H;
Physics     = C;
;
[State 5011: Hit Velocity Set];
Type        = HitVelSet;
Trigger1    = !Time;
X           = 1;
;
[State 5011: Change Animation];
Type        = ChangeAnim;
Trigger1    = !AnimTime;
Value       = 5025 + (GetHitVar(AnimType));
;
[State 5011: Stop Sliding Back];
Type        = VelMul;
Trigger1    = (Time >= (GetHitVar(SlideTime)));
X           = .6;
;
[State 5011: Velocity Set];
Type        = VelSet;
Trigger1    = HitOver;
X           = 0;
;
[State 5011: Defence Mul Set];
Type        = DefenceMulSet;
Trigger1    = HitOver;
Value       = 1;
;
[State 5011: Change State];
Type        = ChangeState;
Trigger1    = HitOver;
Value       = 11;
Ctrl        = 1;
;
;>||====================================~>/#[ Hit Air Shake ]#\<~====================================||<
;
[StateDef 5020];
Type        = A;
MoveType    = H;
VelSet      = 0, 0;
;
[State 5020: Animation For Hit Light To Hit Hard];
Type        = ChangeAnim;
Trigger1    = (!Time) && (GetHitVar(AnimType) != [3, 5]);
Value       = IfElse((GetHitVar(AirType) = 1), 5000, 5010) + (GetHitVar(AnimType));
;
[State 5020: Animation For Hit Back];
Type        = ChangeAnim;
Trigger1    = (!Time) && (GetHitVar(AnimType) = [3, 5]);
Value       = 5030;
;
[State 5020: Animation For Hit Up Hit Diagonal Up];
Type        = ChangeAnim;
Trigger1    = (!Time) && (GetHitVar(AnimType) = [4, 5]) && (SelfAnimExist(5047 + (GetHitVar(AnimType))));
Value       = 5047 + (GetHitVar(AnimType));
;
[State 5020: Freeze Animation];
Type        = ChangeAnim;
Trigger1    = (Time > 0);
Value       = Anim;
;
[State 5020: Change State];
Type        = ChangeState;
Trigger1    = HitShakeOver;
Value       = 5030;
;
[State 5020: Force FeedBack Light];
Type        = ForceFeedback;
Trigger1    = (Anim = 5000) && (Anim = 5010);
Persistent  = 0;
Time        = 6;
WaveForm    = Square;
;
[State 5020: Force FeedBack Medium];
Type        = ForceFeedback;
Trigger1    = (Anim = 5001) && (Anim = 5011);
Persistent  = 0;
Time        = 8;
WaveForm    = SineSquare;
Ampl        = 110, -1, -.3;
;
[State 5020: Force FeedBack Hard];
Type        = ForceFeedback;
Trigger1    = (Anim = 5012) || (Anim = 5002) || (Anim = 5030) || (Anim = [5051, 5059]);
Persistent  = 0;
Time        = 15;
WaveForm    = SineSquare;
Ampl        = 140;
;
;>||==============================~>/#[ Hit Air Up Initialization ]#\<~==============================||<
;
[StateDef 5030];
Type        = A;
MoveType    = H;
Ctrl        = 0;
;
[State 5030: Gravity];
Type        = VelAdd;
Trigger1    = 1;
Y           = GetHitVar(YAccel);
;
[State 5030: Hit Velocity Set];
Type        = HitVelSet;
Trigger1    = !Time;
X           = 1;
Y           = 1;
;
[State 5030: Change State To Hit Air Recover];
Type        = ChangeState;
TriggerAll  = !HitFall;
Trigger1    = (HitOver) || ((Vel Y > 0) && (Pos Y >= 10));
Value       = 5040;
;
[State 5030: Change State To Hit Air Fall];
Type        = ChangeState;
TriggerAll  = HitFall;
Trigger1    = (HitOver) || ((Vel Y > 0) && (Pos Y >= 10));
Value       = 5050;
;
[State 5030: Change State To Hit Air Up Transition];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 5035;
;
;>||=============================~>/#[ Hit Air Up Transition ]#\<~===================================||<
;
[StateDef 5035];
Type        = A;
MoveType    = H;
;
[State 5035: Change Animation];
Type        = ChangeAnim;
Trigger1    = (!Time) && (SelfAnimExist(5035)) && (Anim != [5051, 5059]) && (Anim != 5090);
Value       = 5035;
;
[State 5035: Velocity Add];
Type        = VelAdd;
Trigger1    = 1;
Y           = GetHitVar(YAccel);
;
[State 5035: Change State To Hit Air Recover];
Type        = ChangeState;
TriggerAll  = !HitFall;
Trigger1    = (HitOver) ||(!AnimTime) || ((Vel Y > 0) && (Pos Y >= 10)) || ((!Time) && (Anim != 5035));
Value       = 5040;
;
[State 5035: Change State To Hit Air Fall];
Type        = SelfState;
TriggerAll  = HitFall;
Trigger1    = (HitOver) || (!AnimTime) || ((Vel Y > 0) && (Pos Y >= 10)) || ((!Time) && (Anim != 5035));
Value       = 5050;
;
;>||==================~>/#[ Hit Air Recover - Recovering In Air, Not Falling ]#\<~==================||<
;
[StateDef 5040];
Type        = A;
MoveType    = H;
;
[State 5040: Change State];
Type        = ChangeState;
Trigger1    = !Alive;
Value       = 5050;
;
[State 5040: Change Animation];
Type        = ChangeAnim;
Trigger1    = ((!AnimTime) && (Anim != 5040)) || ((!Time) && (Anim != 5035));
Value       = 5040;
;
[State 5040: Regain Control After Hit];
Type        = CtrlSet;
Trigger1    = HitOver;
Value       = 1;
;
[State 5040: State Type Set];
Type        = StateTypeSet;
Trigger1    = HitOver;
MoveType    = I;
;
[State 5040: Velocity Add];
Type        = VelAdd;
Trigger1    = 1;
Y           = GetHitVar(YAccel);
;
[State 5040: Change State To Jump Land];
Type        = ChangeState;
Trigger1    = (Vel Y > 0) && (Pos Y >= 0);
Value       = 52;
;
;>||==========================~>/#[ Hit Air Fall - Knocked Up, Falling ]#\<~=========================||<
;
[StateDef 5050];
Type        = A;
MoveType    = H;
;
[State 5050: Change Animation When Done With Transition];
Type        = ChangeAnim;
Trigger1    = (!AnimTime) && (Anim = 5035);
Trigger2    = (!Time) && (Anim != 5035) && (Anim != [5051, 5059]) && (Anim != [5061, 5069]) && (Anim != 5090);
Value       = 5050;
;
[State 5050: Coming Down Animation];
Type        = ChangeAnim;
Trigger1    = (Anim = [5050, 5059]) && (Vel Y >= IfElse(Anim = 5050, 1, -2)) && (SelfAnimExist(Anim + 10));
Value       = (Anim) + 10;
Persistent  = 0;
;
[State 5050: Gravity];
Type        = VelAdd;
Trigger1    = 1;
Y           = GetHitVar(YAccel);
;
[State 5050: Hit Air Fall Recover];
Type        = ChangeState;
Trigger1    = (Vel Y > 0) && (Pos Y >= -20) && (Alive) && (CanRecover) && (Command = "recovery");
Value       = 5200;
;
[State 5050: Recover In Mid Air];
Type        = ChangeState;
Trigger1    = (Vel Y > -1) && (Alive) && (CanRecover) && (Command = "recovery");
Value       = 5210;
;
[State 5050: Change State];
Type        = ChangeState;
Trigger1    = (Vel Y > 0) && (Pos Y >= IfElse((Anim = [5051, 5059]) || (Anim = [5061, 5069]), 0, 25));
Value       = 5100;
;
;>||=================================~>/#[ Hit Trip - Shaking ]#\<~=================================||<
;
[StateDef 5070];
Type        = A;
MoveType    = H;
VelSet      = 0, 0;
;
[State 5070: Change Animation];
Type        = ChangeAnim ;
Trigger1    = 1;
Value       = 5070;
;
[State 5070: Force FeedBack];
Type        = ForceFeedBack;
Trigger1    = !Time;
Time        = 12;
WaveForm    = SineSquare;
Ampl        = 140;
;
[State 5070: Change State];
Type        = ChangeState;
Trigger1    = HitShakeOver;
Value       = 5071;
;
;>||===========================~>/#[ Hit Trip #02 - Fall Through Air ]#\<~===========================||<
;
[StateDef 5071];
Type        = A;
MoveType    = H;
;
[State 5071: Acceleration];
Type        = VelAdd;
Trigger1    = 1;
Y           = GetHitVar(YAccel);
;
[State 5071: Hit Velocity Set];
Type        = HitVelSet;
Trigger1    = !Time;
X           = 1;
Y           = 1;
;
[State 5071: Hit Ground];
Trigger1    = (Vel Y > 0) && (Pos Y >= 15);
Type        = ChangeState;
Value       = 5110;
;
;>||=====================================~>/#[ Hit L Shake ]#\<~=====================================||<
;
[StateDef 5080];
Type        = L;
MoveType    = H;
VelSet      = 0, 0;
;
[State 5080: Set Default Anim];
Type        = VarSet;
Trigger1    = !Time;
sysvar(2)   = IfElse((!GetHitVar(YVel)), 5080, 5090);
;
[State 5080: Variable Add];
Type        = VarAdd;
Trigger1    = (!Time) && ((Anim = [5081, 5089]) || (Anim = [5111, 5119])) && (SelfAnimExist(SysVar(2) + (Anim % 10)));
sysvar(2)   = (Anim) % 10;
;
[State 5080: If 5090 Doesn't Exist, Default To 5030];'
Type        = VarSet;
Trigger1    = (!Time) && (SysVar(2) = 5090) && (!SelfAnimExist(5090));
sysvar(2)   = 5030;
;
[State 5080: Freeze];
Type        = ChangeAnim;
Trigger1    = 1;
Value       = SysVar(2);
;
[State 5080: Change State To Hit L Slide];
Type        = ChangeState;
Trigger1    = (HitShakeOver) && (!GetHitVar(YVel));
Value       = 5081;
;
[State 5080: Change State To Hit Air Up];
Type        = ChangeState;
Trigger1    = (HitShakeOver) && (GetHitVar(YVel) != 0);
Value       = 5030;
;
;>||=====================================~>/#[ Hit L Slide ]#\<~=====================================||<
;
[StateDef 5081];
Type        = L;
MoveType    = H;
Physics     = C;
;
[State 5081: Hit Velocity Set];
Type        = HitVelSet;
Trigger1    = !Time;
X           = 1;
;
[State 5081: Velocity Set];
Type        = VelSet;
Trigger1    = HitOver;
X           = 0;
;
[State 5081: Don't Show Hit Ground Frame];'
Type        = VarSet;
Trigger1    = !Time;
sysvar(0)   = 1;
;
[State 5081: Change State To Hit Liedown];
Type        = ChangeState;
Trigger1    = HitOver;
Value       = 5110;
;
;>||===============================~>/#[ Hit Bounce - Hit Ground ]#\<~===============================||<
;
[StateDef 5100];
Type        = L;
MoveType    = H;
;
[State 5100: Velocity Set];
Type        = VelSet;
Trigger1    = (!Time) && (!GetHitVar(Fall.YVel)) && (Vel X > 1);
X           = 1;
;
[State 5100: Fall Env Shake];
Type        = FallEnvShake;
Trigger1    = !Time;
;
[State 5100: Save Fall Velocity];
Type        = VarSet;
Trigger1    = !Time;
sysvar(1)   = Floor(Vel Y);
;
[State 5100: Hit Ground Animation Normal];
Type        = ChangeAnim;
TriggerAll  = !Time;
Trigger1    = ((Anim != [5051, 5059]) && (Anim != [5061, 5069])) || (!SelfAnimExist(5100 + (Anim % 10)));
Value       = 5100;
;
[State 5100: Hit Ground Anim For Hit Up];
Type        = ChangeAnim;
Trigger1    = (!Time) && ((Anim = [5051, 5059]) || (Anim = [5061, 5069])) && (SelfAnimExist(5100 + (Anim % 10)));
Value       = 5100 + (Anim % 10);
;
[State 5100: Position Set];
Type        = PosSet;
Trigger1    = !Time;
Y           = 0;
;
[State 5100: Velocity Set];
Type        = VelSet;
Trigger1    = !Time;
Y           = 0;
;
[State 5100: Reduce Speed];
Type        = VelMul;
Trigger1    = !Time;
X           = .75;
;
[State 5100: Change State To Hit Liedown];
Type        = ChangeState;
Trigger1    = (!Time) && (!GetHitVar(Fall.YVel));
Value       = 5110;
;
[State 5100: Game Make Animation];
Type        = GameMakeAnim;
Trigger1    = (Time = 1);
Value       = 60 + (SysVar(1) > 5) + (SysVar(1) > 14);
Under       = (SysVar(1) <= 14);
;
[State 5100: Hit Fall Damage];
Type        = HitFallDamage;
Trigger1    = (Time = 3);
;
[State 5100: Play Sound];
Type        = PlaySnd;
Trigger1    = (Time = 1);
Value       = F7, (SysVar(1) > 5) + (SysVar(1) > 14);
;
[State 5100: Position Freeze];
Type        = PosFreeze;
Trigger1    = 1;
;
[State 5100: Change State];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 5101;
;
[State 5100: Force FeedBack];
Type        = ForceFeedBack;
Trigger1    = !Time;
WaveForm    = SineSquare;
Ampl        = 128, -3, -.2, .005;
Time        = 20;
;
;>||============================~>/#[ Hit Bounce - Bounce Into Air ]#\<~============================||<
;
[StateDef 5101];
Type        = L;
MoveType    = H;
;
[State 5101: Coming Hit Ground Animation Normal];
Type        = ChangeAnim;
TriggerAll  = !Time;
Trigger1    = (Anim != [5101,5109]) || (!SelfAnimExist(5160 + (Anim % 10)));
Value       = 5160;
;
[State 5101: Coming Hit Ground Animation For Hit Up];
Type        = ChangeAnim;
TriggerAll  = !Time;
Trigger1    = (Anim = [5101, 5109]) && (SelfAnimExist(5160 + (Anim % 10)));
Value       = 5160 + (Anim % 10);
;
[State 5101: Hit Fall Velocity];
Type        = HitFallVel;
Trigger1    = !Time;
;
[State 5101: Position Set];
Type        = PosSet;
Trigger1    = !Time;
Y           = 20;
;
[State 5101: Acceleration];
Type        = VelAdd;
Trigger1    = 1;
Y           = .4;
;
[State 5101: Hit Ground];
Trigger1    = (Vel Y > 0) && (Pos Y >= 12);
Type        = ChangeState;
Value       = 5110;
;
;>||=====================================~>/#[ Hit Liedown ]#\<~=====================================||<
;
[StateDef 5110];
Type        = L;
MoveType    = H;
;
[State 5110: Fall Env Shake];
Type        = FallEnvShake;
Trigger1    = !Time;
;
[State 5110: For Hit Up Up-Diag Type From State 5081];
Type        = ChangeAnim;
Persistent  = 0;
Trigger1    = (SelfAnimExist(5110 + (Anim % 10))) && (Anim = [5081, 5089]);
Value       = 5110 + (Anim % 10);
;
[State 5110: Hit Ground Anim Normal];
Type        = ChangeAnim;
TriggerAll  = (!Time) && (Anim != [5110,5119]);
Trigger1    = (Anim != [5161,5169]) || (!SelfAnimExist(5170 + (Anim % 10)));
Value       = 5170;
;
[State 5110: Hit Ground Anim For Hit Up];
Type        = ChangeAnim;
TriggerAll  = (!Time) && (Anim != [5110, 5119]);
Trigger1    = (Anim = [5161, 5169]) && (SelfAnimExist(5170 + (Anim % 10)));
Value       = 5170 + (Anim % 10);
;
[State 5110: Hit Fall Damage];
Type        = HitFallDamage;
Trigger1    = !Time;
;
[State 5110: Position Set];
Type        = PosSet;
Trigger1    = !Time;
Y           = 0;
;
[State 5110: Get Fall Velocity];
Type        = VarSet;
Trigger1    = (!Time) && (GetHitVar(Fall.YVel) != 0);
sysvar(1)   = Floor(Vel Y);
;
[State 5110: Play Sound];
Type        = PlaySnd;
Trigger1    = (!Time) && (!SysVar(0));
Value       = F7, (SysVar(1) > 5) + (SysVar(1) > 14);
;
[State 5110: Game Make Animation];
Type        = GameMakeAnim;
Trigger1    = (!Time) && (!SysVar(0));
Value       = 60 + (SysVar(1) > 5) + (SysVar(1) > 14);
Under       = SysVar(1) <= 14;
;
[State 5110: Velocity Set];
Type        = VelSet;
Trigger1    = !Time ;
Y           = 0;
;
[State 5110: For Hit Up Type];
Type        = ChangeAnim;
Persistent  = 0;
TriggerAll  = (Anim = [5171, 5179]) && (SelfAnimExist(5110 + (Anim % 10)));
Trigger1    = (!AnimTime) || (SysVar(0));
Value       = 5110 + (Anim % 10);
;
[State 5110: For Normal];
Type        = ChangeAnim;
Persistent  = 0;
TriggerAll  = (Anim != [5111, 5119]);
Trigger1    = (!AnimTime) || (SysVar(0));
Value       = 5110;
;
[State 5110: If Just Died];
Type        = ChangeState;
TriggerAll  = !Alive;
Trigger1    = (!AnimTime) || (SysVar(0)) || (Anim = [5110, 5119]);
Value       = 5150;
;
[State 5110: Variable Set];
Type        = VarSet;
Trigger1    = (SysVar(0)) && (!Time);
sysvar(0)   = 0;
;
[State 5110: Friction];
Type        = VelMul;
Trigger1    = 1;
X           = .85;
;
[State 5110: Force FeedBack];
Type        = ForceFeedBack;
Trigger1    = (Alive) && (!Time);
Time        = 8;
Ampl        = 240;
WaveForm    = Sine;
;
[State 5110: Force FeedBack];
Type        = ForceFeedback;
Trigger1    = (!Alive) && (!Time);
Ampl        = 200, 7, -.467;
Time        = 30;
WaveForm    = Sine;
;
;>||======================================~>/#[ Hit Getup ]#\<~======================================||<
;
[StateDef 5120];
Type        = L;
;
[State 5120: Get Up Animation Normal];
Type        = ChangeAnim;
TriggerAll  = !Time;
Trigger1    = (Anim != [5111, 5119]) || (!SelfAnimExist(5120 + (Anim % 10)));
Value       = 5120;
;
[State 5120: Get Up Animation For Hit Up/Diag-Up];
Type        = ChangeAnim;
TriggerAll  = !Time;
Trigger1    = (Anim = [5111, 5119]) && (SelfAnimExist(5120 + (Anim % 10)));
Value       = 5120 + (Anim % 10);
;
[State 5120: Velocity Set];
Type        = VelSet;
Trigger1    = !Time;
X           = 0;
;
[State 5120: Land SND];
Type 		= PlaySnd;
Trigger1    = !Time;
Value 		= 105, 1;
Channel     = 1;
FreqMul     = IfElse((!Var(6)), 1, IfElse((Var(6) = 1), .9, 1.1));
;
[State 5120: Not Hit By];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 5120: Hit Fall Set];
Type        = HitFallSet;
Trigger1    = !AnimTime;
Value       = 1;
;
[State 5120: Can't Be Thrown Right After Getting Up];'
Type        = NotHitBy;
Trigger1    = !AnimTime;
Value       = , AT;
Time        = 12;
;
[State 5120: Can't Be Hit Right After Getting Up Short Time];'
Type        = NotHitBy;
Trigger1    = !AnimTime;
Value2      = SCA;
Time        = 3;
;
[State 5120: Change State];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 0;
Ctrl        = 1;
;
;>||=====================================~>/#[ Hit LieDead ]#\<~=====================================||<
;
[StateDef 5150];
Type        = L;
MoveType    = H;
SprPriority = -3;
;
[State 5150: Normal Animation];
Type        = ChangeAnim;
TriggerAll  = (!Time) && (SelfAnimExist(5140));
Trigger1    = ((Anim != [5111, 5119]) && (Anim != [5171, 5179])) || (!SelfAnimExist(5140 + (Anim % 10)));
Value       = 5140;
;
[State 5150: Hit Up Type Animation];
Type        = ChangeAnim;
Trigger1    = (!Time) && ((Anim = [5111, 5119]) || (Anim = [5171, 5179])) && (SelfAnimExist(5140 + (Anim % 10)));
Value       = 5140 + (Anim % 10);
;
[State 5150: Match Over Animation];
Type        = ChangeAnim;
Persistent  = 0;
Trigger1    = (MatchOver) && (Anim = [5140, 5149]) && (SelfAnimExist(Anim + 10));
Value       = (Anim) + 10;
;
[State 5150: Switch To 5110 If Liedead Animation Does Not Exist];
Type        = ChangeAnim;
Trigger1    = (!Time) && (Anim != [5140, 5159]) && (Anim != [5110, 5119]);
Value       = 5110;
;
[State 5150: Friction];
Type        = VelMul;
Trigger1    = 1;
X           = .85;
;
[State 5150: Friction];
Type        = VelSet;
Trigger1    = (Vel X < .05);
Persistent  = 0;
X           = 0;
;
[State 5150: Not Hit By Anything];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
Time        = 1;
;
;>||===========================~>/#[ Hit Fallrecover - Still Falling ]#\<~===========================||<
;
[StateDef 5200];
Type        = A;
MoveType    = H;
;
[State 5200: Change Animation If Done With Transition];
Type        = ChangeAnim;
Trigger1    = (Anim = 5035) && (!AnimTime);
Value       = 5050;
;
[State 5200: Velocity Add];
Type        = VelAdd;
Trigger1    = 1;
Y           = GetHitVar(YAccel);
;
[State 5200: Self State];
Type        = SelfState;
Trigger1    = (Vel Y > 0) && (Pos Y >= 10);
Value       = 5201;
;
;>||==========================~>/#[ Hit Fallrevocer - On The Ground ]#\<~===========================||<
;
[StateDef 5201];
Type        = A;
MoveType    = H;
Physics     = A;
Anim        = 5200;
;
[State 5201: Turn If Not Facing Opponent];
Type        = Turn;
Trigger1    = (!Time) && (P2Dist X < -5);
;
[State 5201: Velocity Set];
Type        = VelSet;
Trigger1    = !Time;
X           = -.15;
Y           = -3.5;
;
[State 5201: Position Set];
Type        = PosSet;
Trigger1    = !Time;
Y           = 0;
;
[State 5201: Blink White];
Type        = PalFX;
Trigger1    = !Time;
Time        = 3;
Add         = 128, 128, 128;
;
[State 5201: Ground Explod];
Type        = Explod;
Trigger1    = (Time = 1);
Anim        = F60;
ID          = 60;
OwnPal      = 1;
;
[State 5201: Not Hit By Anything];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
Time        = 1;
;
;>||=================================~>/#[ Hit Airfallrevocer ]#\<~=================================||<
;
[StateDef 5210];
Type        = A;
Anim        = 5210;
Ctrl        = 0;
;
[State 5210: Blink White];
Type        = PalFX;
Trigger1    = !Time;
Time        = 3;
Add         = 128, 128, 128;
;
[State 5210: Position Freeze];
Type        = PosFreeze;
Trigger1    = !Time;
Value       = 4;
;
[State 5210: Turn If Not Facing Opponent];
Type        = Turn;
Trigger1    = (!Time) && (P2Dist X < -20);
;
[State 5210: Velocity Mul];
Type        = VelMul;
Trigger1    = (Time = 4);
X           = .8;
Y           = .8;
;
[State 5210: Velocity Add];
Type        = VelAdd;
Trigger1    = (Time = 4);
Y           = -4.5;
;
[State 5210: Velocity Mul];
Type        = VelMul;
Trigger1    = (Time = 4) && (Vel Y > 0);
Y           = .5;
;
[State 5210: Velocity Set];
Type        = VelAdd;
Trigger1    = (Time = 4) && (Vel Y > -3);
Y           = -2;
;
[State 5210: Velocity Add];
Type        = VelAdd;
Trigger1    = (Time = 4) && (Vel Y > -2);
Y           = -1;
;
[State 5210: Go Up];
Type        = VelAdd;
Trigger1    = (Time = 4) && (Command = "holdup");
Y           = -2;
;
[State 5210: Go Down];
Type        = VelAdd;
Trigger1    = (Time = 4) && (Command = "holddown");
Y           = 1.5;
;
[State 5210: Go Forward];
Type        = VelMul;
Trigger1    = (Time = 4) && (Command = "holdfwd");
X           = 1;
;
[State 5210: Go Back];
Type        = VelAdd;
Trigger1    = (Time = 4) && (Command = "holdback");
X           = -1;
;
[State 5210: Not Hit By];
Type        = NotHitBy;
Trigger1    = !Time;
Value       = SCA;
Time        = 15;
;
[State 5210: Control Set];
Type        = CtrlSet;
Trigger1    = (Time = 20);
Value       = 1;
;
[State 5210: Gravity];
Type        = VelAdd;
Trigger1    = (Time >= 4);
Y           = .35;
;
[State 5210: Land On Ground];
Type        = ChangeState;
Trigger1    = (Vel Y > 0) && (Pos Y >= 0);
Value       = 52;
Ctrl        = 1;
;
;>||===========================~>/#[ Recover From First Fall Contact ]#\<~===========================||<
;
[StateDef 5220];    Thanks to GCN Mario
Anim    = 5220;
VelSet  = 0, 0;
FaceP2  = 1;
;
[State 5220];
Type        = PosSet;
Trigger1    = !Time;
Y           = 0;
;
[State 5220];
Type        = NotHitBy;
Trigger1    = 1;
Value       = SCA;
;
[State 5220: Blink White];
Type        = PalFX;
Trigger1    = !Time;
Time        = 3;
Add         = 128, 128, 128;
;
[State 5220: How Can There Be...];
Type        = PosAdd;
Trigger1    = !Time;
X           = -17;
;
[State 5220: Life Without The Force?];
Type        = Width;
Trigger1    = (AnimElemNo(0) = 1);
Player      = -11, -2;
;
[State 5220];
Type        = ChangeState;
Trigger1    = !AnimTime;
Value       = 45;
;
;>||======================================~>/#[ Continue? ]#\<~======================================||<
;
[StateDef 5500];
Ctrl    = 0;
Anim    = 5300;
VelSet  = 0, 0;
;
[State 5500: Use Continue Animation If Available];
Type        = ChangeAnim;
Trigger1    = (!Time) && (SelfAnimExist(5500));
Value       = 5500;
;
;>||=======================~>/#[ Initialize - At The Start Of The Round ]#\<~=======================||<
;
[StateDef 5900];
;
[State 5900: Check All Int Variables];
Type        = VarRangeSet;
Trigger1    = !RoundsExisted;
Value       = 0;
Last        = 58;
;
[State 5900: Check All Float Variables];
Type        = VarRangeSet;
Trigger1    = !RoundsExisted;
FValue      = 0;
;
[State 5900: Double Check];
Type        = VarSet;
Trigger1    = !Time;
var(3)      = 1;
;
[State 5900: I Want A FVarRandom State Controller]; Eh.. not really, no
Type        = VarSet;
Trigger1    = !Time;
fvar(2)     = .9;
;
[State 5900: Start With Full Power];
Type        = PowerSet;
Trigger1    = !RoundsExisted;
Value       = Const(Data.Power);
;
[State 5900: Special Intro];
Type        = VarSet;
Trigger1    = (Name = "Bejita");
var(3)      = 0;
;
[State 5900: Intro For Round #01];
Type        = ChangeState;
Trigger1    = (RoundNo = 1)
Value       = 190;
;
;>||=================================~>/#[ State Definition -1 ]#\<~=================================||<
;
[StateDef -1];  State Entry Definition
;
;>||=====================================~>/#[ Super Moves ]#\<~=====================================||<
;
[State -1: Enter Ki Shot Frenzy Mode];
Type        = ChangeState;
TriggerAll  = (Var(59) != 1) && (Power >= 1000) && (Command = "Ki Shot Frenzy Mode");
Trigger1    = Ctrl;
Trigger2    = (HitDefAttr = , NA, SA) && (MoveContact);
Value       = 3000;
;
;>||====================================~>/#[ Special Moves ]#\<~====================================||<
;
[State -1: Zanzouken];  May be done by A.I.
Type        = ChangeState;
TriggerAll  = (Power >= 250) && (Command = "Zanzouken");
Trigger1    = ((StateType = A) ^^ (StateType = S) ^^ (StateType = C)) && ((Ctrl) || ((HitDefAttr = S, NA) && (MoveContact)));
Trigger2    = (Var(12) = 3) && (StateNo = [3000, 3010]);
Value       = 850;
;
[State -1: Shoot In Frenzy Mode];
Type        = ChangeState;
TriggerAll  = (Var(59) != 1) && (Power >= 150) && ((Command = "Punch") || (Command = "Kick"));
Trigger1    = (Anim = 3000) && (NumExplod(3000)) && (NumExplod(3001));
Trigger2    = (Anim = 3010);
Trigger3    = (Anim = 3020);
Value       = 3010;
;
[State -1: Ellbow Dash];    This shall become something like KFM's Kung Fu Palm.. some day
Type        = Null; ChangeState;
TriggerAll  = (Var(59) != 1) && (Command = "FDF Punch");
Trigger1    = (StateType = S) && (Ctrl);
Value       = 1999;
;
[State -1: Ki Shot];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Power >= 100) && (Command = "QCF Punch") && (!NumHelper(1112)) && (StateType = S);
Trigger1    = (!Var(10)) && (!NumHelper(1100)) && (Ctrl);
Trigger2    = (Var(10) <= 0) && (Anim = 1100) && (AnimElemTime(2) = [5, 14]);
Trigger3    = (HitDefAttr = SC, NA) && (MoveContact) && (Anim != 220) && (Anim != 250);
Value 		= 1100;
;
[State -1: Anti-Air Kick];
Type        = ChangeState;
TriggerAll  = (Var(59) != 1) && (Command = "FDF Kick") && (StateType = S);
Trigger1    = Ctrl;
Trigger2    = (HitDefAttr = S, NA) && (MoveHit) && (Anim != 220) && (Anim != 250);
Value       = 1090;
;
[State -1: Air Dive Kick];
Type        = ChangeState;
TriggerAll  = (Var(59) != 1) && (Command = "Down Kick");
Trigger1    = (StateType = A) && (Ctrl);
Trigger2    = (HitDefAttr = A, NA) && (MoveContact) && (Anim != 620) && (Anim != 630) && (Anim != 650);
Value       = 1050;
;
[State -1: Flying Fists Of Doom];
Type        = ChangeState;
TriggerAll  = (Var(59) != 1) && ((Command = "5x") || (Command = "5y") || (Command ="5z")) && (StateType = S);
Trigger1    = Ctrl;
Trigger2    = (HitDefAttr = S, NA) && (MoveHit);
Value       = 1070;
;
[State -1: Continue Flying Fists Of Doom];
Type            = ChangeState;
TriggerAll      = (Var(59) != 1) && ((Command = "5x") || (Command = "5y") || (Command = "5z")) && (Command != "holddown");
Trigger1        = (StateNo = 1070) && (AnimElem = 6, >= 0);
Trigger2        = (StateNo = 1075) && (AnimElem = 5, >= 0);
Value           = 1075;
IgnoreHitPause  = 1;
;
[State -1: Flip Kick];
Type        = ChangeState;
TriggerAll  = (Var(59) != 1) && (Command = "BF Kick");
Trigger1    = ((StateType = S) ^^ (StateType = C)) && (Ctrl);
Value       = 1080;
;
[State -1: Flip Throw];
Type        = ChangeState;
TriggerAll  = (Var(59) != 1) && (Command = "DU Kick");
Trigger1    = ((StateType = S) ^^ (StateType = C)) && (Ctrl);
Value       = 1000;
;
[State -1: Dash Kick];  May be done by A.I.
Type 		= ChangeState;
Trigger1	= ((Command = "Hold a") || (Command = "Hold b") || (Command = "Hold c")) && (StateNo = [100, 101]) && (AnimElemTime(5) = [1, 5]);
Value 		= 300;
;
;>||=========================================~>/#[ Move ]#\<~=========================================||<
;
[State -1: Dash Forwards];
Type 		= ChangeState;
TriggerAll	= (Var(1) = [0, 2]) && (Var(59) != 1);
Trigger1    = (Command = "FF") && (StateType = S) && (Ctrl);
Trigger2    = (Command = "holdfwd") && (StateNo = 105) && (AnimElem = 5, >= 4);
Value 		= 100;
;
[State -1: Dash Forwards Again];
Type 		= ChangeState;
Trigger1	= (Var(1) = [0, 2]) && (Var(59) != 1) && (Command = "holdfwd") && (StateNo = 100) && (AnimElem = 5, >= 5);
Value 		= 101;
;
[State -1: Flip Backwards];
Type 		= ChangeState;
TriggerAll 	= (Var(1) = [0, 2]) && (Var(59) != 1) && (BackEdgeBodyDist > 1);
Trigger1    = (Command = "BB") && (StateType = S) && (Ctrl);
Trigger2    = (Command = "holdback") && (StateNo = 105) && (AnimElem = 5, >= 4);
Value 		= 105;
;
[State -1: Rush Down];  May be done by A.I.
Type        = ChangeState;
Trigger1    = (Command = "DD") && (StateType = A) && (Ctrl);
Value       = 55;
;
;>||====================================~>/#[ Various Stuff ]#\<~====================================||<
;
[State -1: Recharge Ki];
Type        = ChangeState;
Trigger1    = (Var(59) != 1) && (Power < 3000) && (Command = "Hold x") && (Command = "Hold y") && (Command != "holdback") && (Command != "holdfwd") && (Command != "holddown") && (Command != "holdup") && (StateType = S) && (Ctrl);
Value       = 800;
;
[State -1: Recover From First Fall Contact]; Thanks to GCN Mario; May be done by A.I.
Type        = ChangeState;
Trigger1    = (Alive) && (Command = "recovery") && (StateNo = 5100);
Value       = 5220;
;
;>||===================================~>/#[ Standing Basics ]#\<~===================================||<
;
[State -1: SLP];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "x") && (StateType = S);
Trigger1    = Ctrl;
Value 		= 200;
;
[State -1: SMP];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "y") && (StateType = S);
Trigger1    = Ctrl;
Value 		= 210;
;
[State -1: SSP];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "z") && (StateType = S);
Trigger1 	= Ctrl;
Value 		= 220;
;
[State -1: SLK];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "a") && (StateType = S);
Trigger1 	= Ctrl;
Value 		= IfElse((!P2BodyDist Y), 230, 235);
;
[State -1: SMK];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "b") && (StateType = S);
Trigger1 	= Ctrl;
Value 		= 240;
;
[State -1: SSK];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "c") && (StateType = S);
Trigger1 	= Ctrl;
Value 		= 250;
;
[State -1: Taunt];  May be done by A.I.
Type 		= ChangeState;
Trigger1 	= (Command = "s") && (StateType = S) && (Ctrl);
Value 		= 195;
;
;>||===================================~>/#[ Jumping Basics ]#\<~===================================||<
;
[State -1: JLP];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "x") && (StateType = A);
Trigger1 	= Ctrl;
Value 		= 600;
;
[State -1: JMP];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "y") && (StateType = A);
Trigger1 	= Ctrl;
Value 		= 610;
;
[State -1: JSP];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "z") && (StateType = A);
Trigger1 	= Ctrl;
Value 		= 620;
;
[State -1: JLK];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "a") && (StateType = A);
Trigger1 	= Ctrl;
Value 		= 630;
;
[State -1: JMK];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "b") && (StateType = A);
Trigger1 	= Ctrl;
Value 		= 640;
;
[State -1: JSK];
Type 		= ChangeState;
TriggerAll 	= (Var(59) != 1) && (Command = "c") && (StateType = A);
Trigger1 	= Ctrl;
Value 		= 650;
;
;>||=================================~>/#[ State Definition -2 ]#\<~=================================||<
;
[StateDef -2];
;
;>||=====================================~>/#[ Debug Stuff ]#\<~=====================================||<
;
[State -2: Debug Display];
Type            = DisplayToClipBoard;
Trigger1        = (Alive) && (P2Life);
Text            = "Command(2) = %d, FVar(3) = %f\nP2 X = %f, P2 Y = %f";
Params          = Var(2), FVar(3), P2BodyDist X, P2BodyDist Y;
IgnoreHitPause  = 1;
;
[State -2: Remove Debug Display];
Type            = ClearClipBoard;
Trigger1        = (!Alive) || (!P2Life);
IgnoreHitPause  = 1;
Persistent      = 0;
;
;>||====================================~>/#[ Get-Hit Cries ]#\<~====================================||<
;
[State -2: Get-Hit Cries Check Start];  Thanks to FlowaGirl for the counting method
Type            = VarSet;
Trigger1        = (Var(11) != 0) && (Var(5) <= 0) && (Alive);
var(11)         = 0;
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State -2: Get-Hit Cries Check Reached];
Type            = VarSet;
Trigger1        = (Var(11) != 1) && (Var(5) >= 2) && (Alive);
var(11)         = 1;
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State -2: Create Get-Hit Cry Variable];
Type            = VarAdd;
Trigger1        = (Alive) && ((StateNo = 5000) ^^ (StateNo = 5010) ^^ (StateNo = 5020) ^^ (StateNo = 5070) ^^ (StateNo = 5100)) && (Time = 1);
var(5)          = IfElse((!Var(11)), 1 , -1);
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State -2: Play Get-Hit Cries];
Type            = PlaySND;
Trigger1        = (Alive) && ((StateNo = 5000) ^^ (StateNo = 5010) ^^ (StateNo = 5020) ^^ (StateNo = 5070) ^^ (StateNo = 5100)) && (Time = 1) && (Random <= 500);
Value           = 5000, (Var(5));
Volume          = 255;
Channel         = 0;
IgnoreHitPause  = 1;
Persistent      = 0;
;
;>||=====================================~>/#[ Frequencies ]#\<~=====================================||<
;
[State -2: Frequency Check Start];  Thanks to FlowaGirl for the counting method
Type            = VarSet;
Trigger1        = (Var(6) != 0) && (FVar(2) <= .9) && (Alive);
var(6)          = 0;
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State -2: Frequency Check Reached];
Type            = VarSet;
Trigger1        = (Var(6) != 1) && (FVar(2) >= 1.1) && (Alive);
var(6)          = 1;
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State -2: SND Frequency];
Type            = VarAdd;
Trigger1        = (Alive) && !(GameTime % 30) && (RoundState = 2);
fvar(2)         = IfElse((!Var(6)), .1 , -.1);
IgnoreHitPause  = 1;
Persistent      = 0;
;
;>||===================================~>/#[ Random -2 Stuff ]#\<~===================================||<
;
[State -2: Facing];
Type            = VarSet;
Trigger1        = (Alive) && (P2Life);
var(8)          = (EnemyNear, Facing != Facing);
IgnoreHitPause  = 1;
;
;>||=======================================~>/#[ Limits ]#\<~=======================================||<
;
[State -2: Jump 'n Run Control];'
Type            = VarAdd;
Trigger1        = (Var(0) != 1) && (Var(1)) && (Alive) && (StateNo != [100, 105]) && !(GameTime % 60);
var(1)          = -1;
IgnoreHitPause  = 1;
Persistent      = 0;
;
[State -2: Ki Shot Timer];
Type            = VarAdd;
Trigger1        = (Var(10) = [-15, 15]) && (Var(10) != 0) && (Alive) && (StateNo != 1100) && (!NumHelper(1100)) && (!NumHelper(1112));
var(10)         = 1 - 2 * (Var(10) > 0);
IgnoreHitPause  = 1;
Persistent      = 0;
;
;>||=================================~>/#[ Animation Controls ]#\<~=================================||<
;
[State -2: Animation Check];*
Type            = ChangeAnim;
Trigger1        = (Var(3)) && (Alive) && (RoundState > 1);
Value           = IfElse((!Var(3)), 0, (Random));
IgnoreHitPause  = 1;
;
[State -2: Remove Right];
Type            = RemoveExplod;
Trigger1        = (NumExplod(3000)) && (StateNo != 3000);
ID              = 3000;
IgnoreHitPause  = 1;
;
[State -2: Remove Left];
Type            = RemoveExplod;
Trigger1        = (NumExplod(3001)) && (StateNo != 3000);
ID              = 3001;
IgnoreHitPause  = 1;
;
;>||=================================~>/#[ State Definition -3 ]#\<~=================================||<
;
[StateDef -3];
;
[State -3: Command Check];
Type        = VarSet;
Trigger1    = (Var(12) = 3) && (StateNo != [850, 865]) && (StateNo != [3000, 3010]);
var(12)		= 0;
;
[State -3: Screen Bound];
Type            = ScreenBound;
Trigger1        = (Var(12) = 3);
Value           = 0;
IgnoreHitPause  = 1;
;
;>||========================================~>/#[ Power ]#\<~========================================||<
;
[State -3: Power Var];
Type            = VarSet;
Trigger1        = Alive;
fvar(1)         = Power;
IgnoreHitPause  = 1;
;
[State -3: Power Divided Through 1000];
Type            = VarSet;
Trigger1        = Alive;
fvar(3)         = (FVar(1) / 1000);
IgnoreHitPause  = 1;
;
;>||===============================~>/#[ Artificial Intelligence ]#\<~===============================||<
;
;>||====================================~>/#[ Activate A.I. ]#\<~====================================||<
;
[State -3: A.I. Activation For P1 Arcade];  AI is not done yet and may never be
Type        = Null; VarSet;
var(59)     = 1;
TriggerAll  = (!Var(59)) && (IsHomeTeam) && (NumEnemy = 1) && (!NumPartner) && (TeamSide = 2);
Trigger1    = Alive;    (TeamMode = Single);    Linux
;
;>||=====================================~>/#[ A.I. Guard ]#\<~=====================================||<
;
[State -3: A.I. Air Guard];
Type        = ChangeState;
Trigger1    = (Var(8)) && (Var(59) = 1) && (Alive) && (RoundState = 2) && (P2Life) && ((EnemyNear, NumProj > 0) || (EnemyNear, MoveType = A)) && (StateNo != [120, 155]) && (StateType = A) && (Ctrl);  Linux
Value       = 120;
Ctrl        = 0;
;
;>||======================================~>/#[ A.I. Move ]#\<~======================================||<
;
[State -3: A.I. Dash Forwards];
Type 		= ChangeState;
TriggerAll	= (Var(1) = [0, 2]) && (Var(8)) && (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 150) && (P2Life) && (((EnemyNear, MoveType != A) && (P2BodyDist X >= 58)) || (EnemyNear, NumProj > 0)) && (P2BodyDist Y = [-105, 0]);
Trigger1    = (StateType = S) && (Ctrl);
Trigger2    = (StateNo = 105) && (AnimElem = 5, >= 3);
Value 		= 100;
;
[State -3: A.I. Dash Forwards Again];
Type 		= ChangeState;
Trigger1	= (Var(1) = [0, 2]) && (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 250) && (P2Life) && ((EnemyNear, MoveType != A) || (EnemyNear, NumProj > 0)) && (P2BodyDist Y = [-105, 0]) && (StateNo = 100) && (AnimElem = 5, >= 5);
Value 		= 101;
;
[State -3: A.I. Flip Backwards];
Type 		= ChangeState;
TriggerAll 	= (Var(1) = [0, 2]) && (Var(8)) && (Var(59) = 1) && (Alive) && (RoundState = 2) && (P2Life) && (EnemyNear, MoveType = A) && (EnemyNear, NumProj = 0) && (P2BodyDist X >= 57) && (P2BodyDist Y = [-105, 0]) && (BackEdgeBodyDist > 1);
Trigger1    = (Random <= 150) && (StateType = S) && (Ctrl);
Trigger2    = (Random <= 250) && (StateNo = 105) && (AnimElem = 5, >= 3);
Value 		= 105;
;
;>||================================~>/#[ A.I. Standing Basics ]#\<~================================||<
;
[State -3: A.I. Standing Light Punch];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 800) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 38]) && (P2BodyDist Y = [-50, 0]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = S);
Trigger1    = Ctrl;
Trigger2    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 200;
;
[State -3: A.I. Standing Light Kick];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 750) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 29]) && (P2BodyDist Y = [-50, 0]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = S);
Trigger1    = Ctrl;
Trigger2    = (Anim = 200) && (MoveHit) && (AnimElemTime(2) = [2, 8]);
Trigger3    = (Anim = 205) && (MoveHit) && (AnimElemTime(2) = [3, 10]);
Trigger4    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= IfElse((!P2BodyDist Y), 230, 235);
;
[State -3: A.I. Standing Medium Punch];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 700) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 42]) && (P2BodyDist Y = [-50, 0]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = S);
Trigger1 	= Ctrl;
Trigger2    = (Anim = 200)  && (MoveHit) && (AnimElemTime(2) = [2, 8]);
Trigger3    = (Anim = 205) && (MoveHit) && (AnimElemTime(2) = [3, 10]);
Trigger4    = (StateNo = 230) && (MoveHit) && (AnimElemTime(2) = [3, 10]);
Trigger5    = (StateNo = 235) && (MoveHit) && (AnimElemTime(2) = [3, 12]);
Trigger6    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 210;
;
[State -3: Standing Medium Kick];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 650) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 38]) && (P2BodyDist Y = [-50, 0]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = S);
Trigger1 	= Ctrl;
Trigger2    = (Anim = 200) && (MoveHit) && (AnimElemTime(2) = [2, 8]);
Trigger3    = (Anim = 205) && (MoveHit) && (AnimElemTime(2) = [3, 10]);
Trigger4    = (Anim = 210) && (MoveHit) && (AnimElemTime(2) = [3, 12]);
Trigger5    = (Anim = 215) && (MoveHit) && (AnimElemTime(3) = [3, 12]);
Trigger6    = (StateNo = 230) && (MoveHit) && (AnimElemTime(2) = [3, 10]);
Trigger7    = (StateNo = 235) && (MoveHit) && (AnimElemTime(2) = [3, 12]);
Trigger8    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value       = 240;
;
[State -3: A.I. Standing Strong Kick];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 600) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 54]) && (P2BodyDist Y = [-50, 0]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = S);
Trigger1    = Ctrl;
Trigger2    = (Anim = 200) && (MoveHit) && (AnimElemTime(2) = [4, 8]);
Trigger3    = (Anim = 205) && (MoveHit) && (AnimElemTime(2) = [3, 10]);
Trigger4    = (Anim = 210) && (MoveHit) && (AnimElemTime(2) = [3, 12]);
Trigger5    = (Anim = 215) && (MoveHit) && (AnimElemTime(3) = [3, 12]);
Trigger6    = (StateNo = 230) && (MoveHit) && (AnimElemTime(2) = [3, 10]);
Trigger7    = (StateNo = 235) && (MoveHit) && (AnimElemTime(2) = [3, 12]);
Trigger8    = (StateNo = 240) && (MoveHit) && (AnimElemTime(3) = [3, 12]);
Trigger9    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 250;
;
[State -3: A.I. Ki Shot];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Power >= 100) && (Alive) && (RoundState = 2) && (Random <= 150) && (P2Life) && Abs(P2BodyDist X = [55, 260]) && (P2BodyDist Y = [-75, 0]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (!NumHelper(232));
TriggerAll  = (StateType = S);
Trigger1    = (!Var(10)) && (!NumHelper(220)) && (Ctrl);
Trigger2    = (Var(10) <= 0) && (Anim = 220) && (AnimElem = 2, >= 7) && (AnimElem = 3, <= 4);
Trigger3    = (!Var(10)) && (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 220;
;
;>||=================================~>/#[ A.I. Jumping Basics ]#\<~=================================||<
;
[State -1: A.I. Jumping Light Punch];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 800) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 34]) && Abs(P2BodyDist Y = [0, 30]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = A);
Trigger1 	= Ctrl;
Trigger2    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 600;
;
[State -3: A.I. Jumping Light Kick];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 750) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 25]) && Abs(P2BodyDist Y = [0, 60]) && (P2StateNo != [120, 155]) && (StateType = A);
Trigger1 	= Ctrl;
Trigger2    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 630;
;
[State -3: A.I. Jumping Medium Punch];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 700) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 35]) && (P2BodyDist Y = [0, 25]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = A);
Trigger1 	= Ctrl;
Trigger2    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 610;
;
[State -3: A.I. Jumping Medium Kick];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 650) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 34]) && Abs(P2BodyDist Y = [0, 10]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = A);
Trigger1 	= Ctrl;
Trigger2    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 640;
;
[State -3: A.I. Jumping Strong Punch];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 600) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 10]) && Abs(P2BodyDist Y = [0, 75]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = A);
Trigger1 	= Ctrl;
Trigger2    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 620;
;
[State -3: A.I. Jumping Strong Kick];
Type 		= ChangeState;
TriggerAll 	= (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 550) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 31]) && Abs(P2BodyDist Y = [0, 30]) && (P2StateType != L) && (P2StateNo != [120, 155]) && (StateType = A);
Trigger1    = Ctrl;
Trigger2    = (StateNo = 865) && (AnimElem = 1, >= 10);
Value 		= 650;
;
;>||=================================~>/#[ A.I. Various Stuff ]#\<~=================================||<
;
[State -3: A.I. Recharge Ki];
Type        = ChangeState;
TriggerAll  = (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 150) && (P2Life) && IfElse((Var(8)), (EnemyNear, MoveType != A), 1) && (EnemyNear, NumProj = 0) && (StateType = S) && (Ctrl);  Linux
Trigger1    = (Power <= 2000) && (P2BodyDist X >= 75);
Trigger2    = (Power <= 50);
Value       = 800;
;
;>||=================================~>/#[ A.I. Special Moves ]#\<~=================================||<
;
[State -3: Flying Fists Of Doom];
Type        = ChangeState;
TriggerAll  = (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 400) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [20, 30]) && (P2BodyDist Y = [-50, 0]) && (P2StateType != L) && (P2StateNo != [120, 155]);
Trigger1    = (StateType = S) && (Ctrl);
Trigger2    = (HitDefAttr = CS, NA) && (MoveHit);
Trigger3    = (StateNo = 1055) && (MoveHit) && (AnimElemTime(2) = [4, 15]);
Value       = 1070;
;
[State -3: Anti-Air Kick];
Type        = ChangeState;
TriggerAll  = (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 350) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [30, 40]) && (P2BodyDist Y = [-85, 0]) && (P2StateType != L) && (P2StateNo != [120, 155]);
Trigger1    = (StateType = S) && (Ctrl);
Trigger2    = (HitDefAttr = CS, NA) && (MoveHit);
Trigger3    = (StateNo = 1055) && (MoveHit) && (AnimElemTime(2) = [4, 15]);
Value       = 1090;
;
[State -3: Flip Kick];
Type        = ChangeState;
TriggerAll  = (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 150) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [80, 250]) && (P2BodyDist Y = [-50, 0]) && (P2StateType != L) && (P2StateNo != [120, 155]);
Trigger1    = ((StateType = S) ^^ (StateType = C)) && (Ctrl);
Trigger2    = (HitDefAttr = CS, NA) && (MoveHit);
Trigger3    = (StateNo = 1055) && (MoveHit) && (AnimElemTime(2) = [4, 15]);
Value       = 1080;
;
[State -1: Flip Throw];
Type        = Null;ChangeState;
TriggerAll  = (Var(59) != 1) && (Command = "DU Kick");
Trigger1    = ((StateType = S) ^^ (StateType = C)) && (Ctrl);
Trigger2    = (StateNo = 1055) && (MoveContact) && (AnimElemTime(2) = [4, 15]);
Value       = 1000;
;
[State -3: Air Dive Kick];
Type        = ChangeState;
TriggerAll  = (Var(59) = 1) && (Alive) && (RoundState = 2) && (Random <= 200) && (P2Life) && (EnemyNear, NumProj = 0) && Abs(P2BodyDist X = [0, 50]) && (P2BodyDist Y = [0, 120]) && (P2StateNo != [120, 155]);
Trigger1    = (StateType = A) && (Ctrl);
Trigger2    = (Var(0) = 2);
Trigger3    = (HitDefAttr = A, NA) && (MoveHit);
Value       = 1050;
